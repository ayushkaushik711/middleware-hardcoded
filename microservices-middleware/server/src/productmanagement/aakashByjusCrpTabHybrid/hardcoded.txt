microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:4:hardcoded string:	const { DraftOrder } = require('@byjus-orders/nexemplum/oms');
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:17:hardcoded variable:	const getComboProduct = async (req, res) => {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:18:hardcoded string:	    logger.info({ method: 'getComboProduct' }, { message: "Fetching Combo Product for aakash neo Tab hybrid" });
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:21:hardcoded variable:	    let tabletSku = null;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:22:hardcoded number:	    let totalPrice = 0;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:23:hardcoded variable:	    let bookSku = null;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:24:hardcoded number:	    let booksPrice = 0;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:25:hardcoded array:	    let courseSkus = [];
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:26:hardcoded number:	    let price = 0;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:27:hardcoded string:	    let { paymentType = "EMI", productType, student, couponDetails, productCombination, identifier, orderPunchingType = "", user } = req.body;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:28:hardcoded variable:	    let draftOrder = await DraftOrder.findById(identifier);
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:29:hardcoded string:	    const draftOrderId = get(draftOrder, 'draftOrderId');
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:30:hardcoded string:	    console.log("req",req.body);
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:33:hardcoded number:	    student = isArray(student) ? student[0] : student;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:35:hardcoded object:	    let { initialClass, finalClass, validity, tablet = null, subCourse, productLearningType } = student;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:40:hardcoded variable:	    let grade = initialClass;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:41:hardcoded variable:	    let brand = null;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:42:hardcoded string:	    const isDevEnv = ["local","development"].includes(process.env.NODE_ENV)
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:43:hardcoded string:	    if (isDevEnv && ["SBXMGZ","SCXMGJ"].includes(tablet)){
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:44:hardcoded string:	        brand = 'D4'
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:48:hardcoded number:	            if (grade === 11 && finalClass === 12) {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:49:hardcoded string:	                grade = '11+12';
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:51:hardcoded object:	            let { sdCardSku, crpSku } = await getAakashByjusCrpTabHybridSkus({
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:61:hardcoded string:	            grade += (grade === '11+12') ? 2 : 1;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:67:hardcoded string:	                if(sku.grade == finalClass || sku.grade == '11+12'){
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:69:hardcoded string:	                    sku["price"] = sku.basePrice
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:72:hardcoded string:	                    sku["price"] = sku.continuousPrice
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:76:hardcoded number:	             price = courseSkus.reduce((total, sku) => parseInt(sku.basePrice) + total, 0)
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:78:hardcoded string:	                sku["price"] = sku.basePrice
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:82:hardcoded string:	            courseSkus[i]["combinationType"] = courseSkus[i]["category"]
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:83:hardcoded string:	            courseSkus[i]["itemId"] = getSkuItemId(courseSkus[i]);
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:87:hardcoded object:	            tabletSku = await getPostgresTabletSku({ tabletId: tablet });
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:90:hardcoded array:	        tabletSku = isArray(tabletSku) ? tabletSku : [tabletSku];
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:94:hardcoded array:	            if (tabletSku[i]) {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:95:hardcoded number:	                const { price = 0, quantity = 1, type } = tabletSku[i];
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:97:hardcoded string:	                tabletSku[i]["combinationType"] = type
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:100:hardcoded string:	        if (process.env.NODE_ENV !== 'production') {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:101:hardcoded array:	            bookSku = await getBooksSku({ grade, subCourse }) || [];
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:102:hardcoded array:	            bookSku = isArray(bookSku) ? bookSku : [bookSku];
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:104:hardcoded array:	                if (bookSku[i]) {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:105:hardcoded array:	                    const { type } = bookSku[i];
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:106:hardcoded string:	                    bookSku[i]["combinationType"] = type
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:107:hardcoded string:	                    bookSku[i]['itemId'] = getSkuItemId()
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:111:hardcoded string:	            booksPrice = bookSku.reduce((acc, curr) => acc + parseInt(get(curr, 'basePrice', 0)), 0);
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:113:hardcoded variable:	        let maxPrice = totalPrice;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:114:hardcoded object:	        let minPrice = getMinimumRange({ req, maxPrice, tabletSku, paymentType,productCombination })
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:116:hardcoded array:	        const products = [courseSkus, tabletSku];
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:117:hardcoded variable:	        const formattedProducts = flattenDeep(products).filter(prdct => prdct);
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:119:hardcoded string:	        student["formValues"] = { ...student };
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:120:hardcoded string:	        student["items"] = formattedProducts;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:121:hardcoded object:	        const skuProductDetails = { tabletSku, maxPrice, minPrice, productCombination }
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:122:hardcoded object:	        const discountDetails = await getDiscountDetails({identifier, productDetails : skuProductDetails});
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:123:hardcoded string:	        const { discountedPrice, voucher = "", minimumPrice, areBonusPointsUsed = false, bonusPointsDiscount = 0 } = discountDetails;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:132:hardcoded array:	            students: [student],
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:134:hardcoded array:	            mentoringDetails: [oneToManySku],
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:140:hardcoded string:	        console.log("error",error);
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:145:hardcoded variable:	const storeProductDetails = async (req, res) => {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:146:hardcoded string:	    let { identifier, productDetails, productCombination = "", studentDetails } = req.body;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:147:hardcoded string:	    const { email } = get(req, 'user', {});
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:148:hardcoded string:	    logger.info({ method: 'storeProductDetails', msg: `Storing Product Details for _id:${identifier}` });
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:152:hardcoded string:	            throw new BadRequestError(`Parameters - ${identifier ? '' : 'identifier'} ${productDetails ? '' : 'productDetails'} Missing`);
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:153:hardcoded variable:	        const draftOrder = await checkIfDraftOrderExists(identifier);
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:156:hardcoded object:	            const { isOmsOrder, customerDetails } = draftOrder;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:157:hardcoded object:	            const { productType, isGstIn, student = {} } = productDetails;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:158:hardcoded string:	            const { validity = "", subCourse, product, productLearningType } = student;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:159:hardcoded variable:	            const isOmsEligibleOrder = await checkIsOmsOrder(productType, isOmsOrder, validity);
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:160:hardcoded object:	            const { redeemedCashback, unutilizedCashbacks, amountToCustomer, amountToSalesPerson } = await manageCashbacks(draftOrder, productDetails);
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:161:hardcoded object:	            let { orgFormattedName, orderPunchingType } = draftOrder
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:176:hardcoded string:	            if (get(config, 'isStudentProfileAvailable') === "true" && productDetails.students && productDetails.students.length) {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:181:hardcoded array:	            const { formattedProducts = [], formattedStudents = [] } = await attachSiblingDetails(productDetails, productType, draftOrder, studentDetails);
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:182:hardcoded string:	            productDetails["students"] = formattedStudents;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:183:hardcoded string:	            productDetails["products"] = formattedProducts;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:184:hardcoded variable:	            const orderPunchingCategory = AakashNeo.crp.tabCategory;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:187:hardcoded string:	            let bookInvoicing = 'not_applicable';
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:188:hardcoded array:	            let addOnLineItems = [];
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:189:hardcoded string:	            if (['local'].includes(process.env.NODE_ENV)) {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:191:hardcoded string:	                bookInvoicing = 'applicable';
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:196:hardcoded variable:	            const updateObj = {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:199:hardcoded array:	                addOnLineItems: addOnLineItems || [],
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:203:hardcoded string:	                finalPrice: get(productDetails, 'finalPrice', 0),
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:204:hardcoded string:	                status: "product_saved",
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:205:hardcoded array:	                [`actionDetails.productSavedAt`]: new Date(),
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:206:hardcoded array:	                [`actionDetails.productSavedBy`]: email,
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:208:hardcoded string:	                "customerDetails.gstDetails.isGstIn": isGstIn,
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:211:hardcoded variable:	            const transactionId = await reserveBonusPoints(draftOrder);
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:212:hardcoded string:	            if (transactionId !== "") {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:213:hardcoded string:	                updateObj["bonusPointsDetails.transactionId"] = transactionId;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:216:hardcoded string:	            await DraftOrder.findOneAndUpdate({ '_id': identifier }, {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridController.js:219:hardcoded object:	            return res.json({ productDetails, cashbackDetails: { redeemedCashback, unutilizedCashbacks } });
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:3:hardcoded variable:	const formattedAakashCrpTabHybridLineItems = async (orderDetails) => {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:4:hardcoded object:	    const { productDetails, orderPunchingCategory } = orderDetails;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:5:hardcoded array:	    const { students = [], paymentType, student } = productDetails;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:6:hardcoded object:	    let lineItems = {};
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:9:hardcoded number:	        const { items, formValues, studentId } = students[0];
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:11:hardcoded string:	            throw new Error(" Order Split Failed: Aakash CRP Tab Hybrid Order Punching LineItems Are Empty");
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:13:hardcoded variable:	        const splittedLineItems = await getLineItems(items, formValues, paymentType, studentId)
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:14:hardcoded object:	        const { parentLineItems, childLineItems } = splittedLineItems || {};
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:17:hardcoded string:	            throw new Error(" Order Split Failed: Aakash CRP  Tab Hybrid Order Punching LineItems Are Empty");
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:20:hardcoded string:	            throw new Error(" Order Split Failed: Total lineItems Count Is Not Equal To Splitted Line Items Count ");
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:27:hardcoded string:	        throw new Error(error || "Error in splitting line Items");
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:32:hardcoded variable:	const getLineItems = async (items, student, paymentType, studentId) => {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:33:hardcoded object:	    const { productLearningType, initialClass, subCourse } = student;
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:34:hardcoded array:	    let parentLineItems = [], childLineItems = [], tabletItem = [], skuItems = [], sdCardItem = [];
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:37:hardcoded string:	        if (item.subType === "tablet") {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:39:hardcoded string:	        } else if (item.subType === "sd_card") {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:46:hardcoded string:	    if ((!isEmpty(tabletItem) || !isEmpty(sdCardItem)) && productLearningType == 'aakash_byjus_tab_hybrid_program') {
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:47:hardcoded array:	        parentLineItems = [...tabletItem, ...sdCardItem]
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridOrderSplit.js:53:hardcoded array:	        childLineItems: Array.isArray(childLineItems) ? childLineItems : [childLineItems]
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridRoutes.js:5:hardcoded object:	const router = Router({ mergeParams: true });
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridRoutes.js:8:hardcoded string:	    const baseRoute = '/aakashCrpTabHybrid';
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridRoutes.js:10:hardcoded object:	    router.route(`${baseRoute}/storeProductDetails`)
microservices-middleware/server/src/productmanagement/aakashByjusCrpTabHybrid/aakashByjusCrpTabHybridRoutes.js:16:hardcoded object:	    router.route(`${baseRoute}/product/combo`)
