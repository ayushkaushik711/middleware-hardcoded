microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:6:hardcoded string:	const { DraftOrder, ProductDetail, PremiumAccount } = require('@byjus-orders/nexemplum/oms');
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:25:hardcoded variable:	const getUpgradeProduct = async (req, res) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:26:hardcoded string:	    logger.info({ method: 'getUpgradeProduct' }, { message: "Fetching Byjus Class Upgrade Product" });
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:27:hardcoded number:	    let maxPrice = 0, minPrice = 0,coursePrice = 0;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:28:hardcoded array:	    let { paymentType, updatedStudentDetails, productType, mentoringDetails = [], bhlpCourseDetails = [], productCombination, leadDetails, identifier } = req.body;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:30:hardcoded string:	    const loggedInUserRole = get(leadDetails, "orderPunchedByRole", "");
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:31:hardcoded variable:	    const user = req.user;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:32:hardcoded string:	    const vertical = (get(user, "vertical", ""))
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:33:hardcoded string:	    const campaign = (get(user, 'campaign', '') || '').toUpperCase();
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:34:hardcoded variable:	    const minDiscountForVerticalBda = productConstant.UPGRADE_VERTICAL_TRIAL_CAMPAIGN_BDA_MIN_PRICE;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:37:hardcoded array:	    let skuArray = [], tabletSkuArray = [];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:38:hardcoded number:	    for (var i = 0; i < updatedStudentDetails.length; i++) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:39:hardcoded string:	        let { initialClass, finalClass, board, subCourse, state, validity, tablet = '', tabletId = '',tlpFinalGrade = '',byjusClassFinalGrade = '', addExtension = '' } = updatedStudentDetails[i];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:40:hardcoded object:	        if (!board) { board = null; }
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:44:hardcoded variable:	        const extensionGrade = tlpFinalGrade ? tlpFinalGrade : byjusClassFinalGrade;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:45:hardcoded object:	        maxPrice += getUpdatedPrice({ initialClass, finalClass, validity, subCourse, state })
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:46:hardcoded number:	        const k10GradesArray = [4,5,6,7,8,9,10]
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:48:hardcoded number:	        //let validity = new Date().getFullYear() + 1;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:49:hardcoded variable:	        let grade = initialClass;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:50:hardcoded array:	        let courseSkuArray = [];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:52:hardcoded number:	            if (grade === 11 && finalClass === 12) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:53:hardcoded string:	                grade = '11+12';
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:56:hardcoded variable:	            const productDetails = {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:65:hardcoded string:	                courseSku = validity === 'subscription' ?
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:70:hardcoded string:	            maxPrice = validity === "subscription" ? courseSku['basePrice'] : maxPrice
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:72:hardcoded object:	                const { grade } = courseSku
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:73:hardcoded string:	                coursePrice +=  k10GradesArray.includes(extensionGrade) && (initialClass == grade) ? parseInt(get(courseSku, 'basePrice'), 10) : parseInt(get(courseSku, 'continousPrice'), 10)
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:75:hardcoded string:	            grade += (grade === '11+12') ? 2 : 1;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:77:hardcoded string:	            courseSku["itemId"] = getSkuItemId(courseSku);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:78:hardcoded string:	            courseSku["combinationType"] = get(courseSku, "type", "").toLowerCase()
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:83:hardcoded array:	            let { tabletSku } = await getTabletSku(updatedStudentDetails[i]);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:86:hardcoded object:	            courseSkuArray = updateTabletId({ tabletId, courseSku: flattenDeep(courseSkuArray) })
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:90:hardcoded string:	        updatedStudentDetails[i]["formValues"] = { ...updatedStudentDetails[i] };
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:91:hardcoded string:	        updatedStudentDetails[i]["items"] = flattenDeep(courseSkuArray);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:97:hardcoded variable:	            const bocpInitialClass = initialClass;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:98:hardcoded variable:	            const bocpFinalClass = finalClass;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:99:hardcoded array:	            const tlpDetails = await fetchCombinationPrices({ byjusInitialClass: bocpInitialClass, byjusFinalClass: bocpFinalClass, validity, tlpFinalClass: extensionGrade, student:updatedStudentDetails[i], productType });
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:100:hardcoded string:	            const tlpSkus = get(tlpDetails, "skuArray", []);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:109:hardcoded string:	    maxPrice = await getUpdatedTotalPrice({ totalPrice: maxPrice, role: loggedInUserRole, productCombination: "byjus_classes_upgrade" });
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:111:hardcoded string:	    if (paymentType === "subscription") {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:117:hardcoded object:	        && productConstant.UPGRADE_VERTICAL_TRIAL_CAMPAIGN_BDA_VERTICAL({ vertical, campaign})
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:131:hardcoded string:	        const totalTabletPrice = tabletSkuArray.reduce((acc, ele) => acc + get(ele, "basePrice", 0), 0);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:136:hardcoded number:	    minPrice = (Math.floor(minPrice / 1000)) * 1000
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:138:hardcoded variable:	    const products = skuArray;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:139:hardcoded variable:	    let discountDetails = {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:140:hardcoded number:	        discountedPrice: 0,
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:142:hardcoded number:	        bonusPointsDiscount: 0
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:144:hardcoded variable:	    const bonusPointsDiscount = await getBonusPointsDiscount(identifier);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:145:hardcoded number:	    if (parseInt(bonusPointsDiscount) > 0) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:146:hardcoded string:	        discountDetails['discountedPrice'] = minPrice - bonusPointsDiscount;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:147:hardcoded string:	        discountDetails['areBonusPointsUsed'] = true;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:148:hardcoded string:	        discountDetails['bonusPointsDiscount'] = bonusPointsDiscount;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:152:hardcoded string:	            productCombination: "byjus_classes_upgrade",
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:158:hardcoded array:	            mentoringDetails: [],
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:160:hardcoded string:	            areBonusPointsUsed: get(discountDetails, 'areBonusPointsUsed'),
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:161:hardcoded string:	            bonusPointsDiscount: get(discountDetails, 'bonusPointsDiscount'),
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:162:hardcoded string:	            discountedPrice: get(discountDetails, 'discountedPrice'),
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:171:hardcoded variable:	const getUpgradeOrderDetails = async (orderDetail, productCombination, orderPunchingType) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:172:hardcoded string:	    let { board, initialClass, finalClass, subCourse, byjusFinalClass = "", state = "" } = orderDetail;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:173:hardcoded string:	    let gradeCombinationDetails = { byjus_classes: [], tlp_classes: [] }, productSelectionType = "";
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:174:hardcoded variable:	    let i = Number(initialClass);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:175:hardcoded array:	    let byjus_classes = [], tlp_classes = [];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:176:hardcoded object:	    let query = {};
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:178:hardcoded string:	        let grade = "";
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:179:hardcoded string:	        query['board'] = (board) ? board : null;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:180:hardcoded number:	        if ([4, 5, 11, 12, 1, 2, 3].includes(i)) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:181:hardcoded string:	            query['board'] = null;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:183:hardcoded number:	        else if ([6, 7, 8, 9, 10].includes(i)) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:184:hardcoded string:	            query["board"] = board === "STATE" ? getBoardForState(state) : board;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:187:hardcoded number:	        if (i == 11 || i == 12) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:188:hardcoded string:	            query['grade'] = '11+12';
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:189:hardcoded string:	            query['course'] = subCourse;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:193:hardcoded string:	            query['grade'] = grade
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:195:hardcoded string:	        const productDetail = await ProductDetail.findOne(query).select('cohort_id').lean();
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:196:hardcoded variable:	        let cohortId = productDetail.cohort_id
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:197:hardcoded string:	        if (productCombination === "byjus_tlp") {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:199:hardcoded string:	        } else if (productCombination === "byjus_classes_plus_byjus_tlp") {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:208:hardcoded number:	        i = i + 1;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:210:hardcoded object:	    gradeCombinationDetails = { byjus_classes, tlp_classes };
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:211:hardcoded string:	    if (!isEmpty(byjus_classes) && !["RENEWAL_ORDER", "TRIAL_PACK_TO_BYJUS_CLASSES"].includes(orderPunchingType)) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:212:hardcoded string:	        productSelectionType = "byjus_classes_upgrade"
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:213:hardcoded string:	    } else if (orderPunchingType === "TRIAL_PACK_TO_BYJUS_CLASSES") {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:214:hardcoded string:	        productSelectionType = "byjus_trial_pack_upgrade"
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:215:hardcoded string:	    } else if (orderPunchingType === "RENEWAL_ORDER") {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:216:hardcoded string:	        productSelectionType = "renewal_order"
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:218:hardcoded string:	        productSelectionType = "tlp"
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:220:hardcoded object:	    return ({ gradeCombinationDetails, productSelectionType })
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:224:hardcoded variable:	const getStudentProfileDetails = async (productDetails) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:225:hardcoded array:	    const { students = [] } = productDetails;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:226:hardcoded string:	    let familyIdVal = '', premiumAccountId = '';
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:228:hardcoded number:	        for (let i = 0; i < students.length; i++) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:229:hardcoded array:	            if (students[i].userProfile) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:230:hardcoded string:	                const premiumAccountDoc = await PremiumAccount.findOne({ premium_account_id: students[i].userProfile }).select('familyReferenceNumber').lean()
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:231:hardcoded string:	                const { familyReferenceNumber = '' } = premiumAccountDoc;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:233:hardcoded array:	                premiumAccountId = students[i].userProfile
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:235:hardcoded variable:	            let studentProfileDetails = {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:236:hardcoded array:	                isExistingProfile: [undefined].includes(students[i].userProfile) ? false : true,
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:237:hardcoded string:	                existingPremiumId: [undefined].includes(students[i].userProfile) ? "" : premiumAccountId,
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:238:hardcoded string:	                existingFamilyId: [undefined].includes(students[i].userProfile) ? "" : familyIdVal,
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:240:hardcoded array:	            students[i].studentProfileDetails = studentProfileDetails;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:241:hardcoded array:	            delete students[i].userProfile
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:248:hardcoded variable:	const storeProductDetails = async (req, res) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:250:hardcoded object:	        let { tlpOrderData, productDetail, identifier, leadDetails } = req.body;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:251:hardcoded array:	        let { minPrice, maxPrice, finalPrice, paymentType, updatedStudentDetails = [], products, students } = productDetail;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:254:hardcoded string:	            throw new BadRequestError("Parameter missing");
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:256:hardcoded object:	        let { customerDetails: orderCustomerDetails, orderId, customerId: tlpCustomerId } = tlpOrderData;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:257:hardcoded number:	        const type = orderCustomerDetails[0].type
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:258:hardcoded variable:	        let draftOrder = await draftOrderConverterUtility.getDraftOrderConverter(tlpOrderData);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:259:hardcoded object:	        let { customerDetails = {}, addressDetails, salesDetails, contactDetails } = draftOrder
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:260:hardcoded object:	        let productDetails = {};
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:263:hardcoded string:	        if (type !== 'sibling') {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:264:hardcoded number:	            let { initialClass, finalClass, subCourse } = updatedStudentDetails[0];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:266:hardcoded string:	            let { board, state = "", items } = students[0];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:267:hardcoded variable:	            const orderDetail = {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:270:hardcoded variable:	            const getGradeCombinationDetail = await getUpgradeOrderDetails(orderDetail);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:271:hardcoded object:	            const { gradeCombinationDetails, productSelectionType } = getGradeCombinationDetail;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:272:hardcoded object:	            students = await getUpdatedProductDetailsWithHlpDetails({ students });
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:273:hardcoded string:	            students[0].hlpDetails["gradeCombinationDetails"] = gradeCombinationDetails;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:274:hardcoded number:	            students[0].productSelectionType = productSelectionType;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:275:hardcoded number:	            students[0].initialClass = initialClass
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:276:hardcoded string:	            students[0]["studentId"] = orderCustomerDetails[0].studentName;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:277:hardcoded number:	            const academicDetails = getNeoClassAcademicDetails(students[0]);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:278:hardcoded string:	            students[0]["academicDetails"] = academicDetails;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:280:hardcoded number:	                item.studentId = orderCustomerDetails[0].studentName
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:282:hardcoded string:	            students["items"] = items[0];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:283:hardcoded variable:	            const courseType = getCourseType(initialClass, finalClass);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:284:hardcoded string:	            students[0]["courseType"] = courseType;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:285:hardcoded string:	            productDetails["students"] = students[0]
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:288:hardcoded object:	            students = await getUpdatedProductDetailsWithHlpDetails({ students });
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:292:hardcoded string:	                    let { board, subCourse, state = "", items } = st;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:293:hardcoded variable:	                    let initialClass = st.initialClass, finalClass = st.finalClass;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:295:hardcoded string:	                    //let initialClassValue = initialClass.split('-');
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:296:hardcoded number:	                    //initialClass = initialClassValue[0];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:297:hardcoded object:	                    const orderDetail = { board, initialClass, finalClass, subCourse, state }
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:298:hardcoded variable:	                    let getGradeCombinationDetail = await getUpgradeOrderDetails(orderDetail);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:299:hardcoded object:	                    const { gradeCombinationDetails, productSelectionType } = getGradeCombinationDetail;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:300:hardcoded string:	                    st.hlpDetails["gradeCombinationDetails"] = gradeCombinationDetails;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:303:hardcoded array:	                    st.studentId = `${orderCustomerDetails[idx].studentName}-${idx}`
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:305:hardcoded array:	                        item.studentId = `${orderCustomerDetails[idx].studentName}-${idx}`
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:307:hardcoded string:	                    st["items"] = items;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:308:hardcoded variable:	                    const courseType = getCourseType(initialClass, finalClass);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:309:hardcoded string:	                    st["courseType"] = courseType;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:310:hardcoded variable:	                    const academicDetails = getNeoClassAcademicDetails(st);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:311:hardcoded string:	                    st["academicDetails"] = academicDetails;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:315:hardcoded object:	        const { customerId, customerType } = (!tlpCustomerId) ? await getDraftCustomerId(customerDetails, leadDetails) : { customerId: tlpCustomerId };
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:317:hardcoded string:	        productDetails["students"] = await getStudentProfileDetails({ students });
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:318:hardcoded string:	        productDetails["products"] = products;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:319:hardcoded string:	        productDetails["productType"] = type;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:320:hardcoded string:	        productDetails["minPrice"] = minPrice;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:321:hardcoded string:	        productDetails["maxPrice"] = maxPrice;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:322:hardcoded string:	        productDetails["finalPrice"] = finalPrice;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:323:hardcoded string:	        productDetails["paymentType"] = paymentType;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:326:hardcoded string:	            studentMobileNo: orderCustomerDetails[0]["studentMobile"] || "",
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:327:hardcoded string:	            parentMobileNo: orderCustomerDetails[0]["parentMobile"] || "",
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:331:hardcoded string:	        const finalProductPrice = get(productDetails, 'finalPrice', 0);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:334:hardcoded variable:	            const draftOrder = await checkIfDraftOrderExists(identifier);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:336:hardcoded string:	                await DraftOrder.findOneAndUpdate({ '_id': identifier }, {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:340:hardcoded string:	                        status: "product_saved",
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:341:hardcoded string:	                        orderPunchingType: "UPGRADE",
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:343:hardcoded string:	                            oldCourse: "tlp",
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:344:hardcoded string:	                            newCourse: "byjus_classes",
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:347:hardcoded string:	                        orderPunchingCategory: "byjus_classes",
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:357:hardcoded variable:	        const updateData = {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:367:hardcoded string:	            status: "product_saved"
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:370:hardcoded variable:	        const transactionId = await reserveBonusPoints(draftOrder);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:371:hardcoded string:	        if (transactionId !== "") {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:372:hardcoded string:	            updateData["bonusPointsDetails.transactionId"] = transactionId;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:375:hardcoded variable:	        const newOrder = new DraftOrder({
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:389:hardcoded string:	        logger.error({ method: 'storeProductDetails', error }, 'Error occured');
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:394:hardcoded variable:	const checkIsEmiAllowedOrNot = async (req, res) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:396:hardcoded object:	        let { referenceId, method, amount } = req.body;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:397:hardcoded string:	        logger.info({ method: 'checkIsEmiAllowedOrNot', message: `Checking is EMI allowed for the ${referenceId}` });
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:399:hardcoded string:	            throw new BadRequestError("Parameter missing");
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:402:hardcoded object:	        const result = await externalApiUtility.checkExistingRefEligibleForNewLoan({ referenceId, method, amount });
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:404:hardcoded string:	            eligibleForNewLoan: get(result, "eligibleForNewLoan", false)
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:407:hardcoded string:	        logger.error({ method: 'checkIsEmiAllowedOrNot', error }, 'Error occured');
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:412:hardcoded variable:	const updateTabletId = (details) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:413:hardcoded string:	    const { tabletId = '', courseSku = [] } = details;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/tlpToByjusClassController.js:416:hardcoded string:	            ele['tabletId'] = tabletId;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/controller.js:11:hardcoded variable:	const getUpgradeProduct = async (req, res) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/controller.js:12:hardcoded string:	    logger.info({ method: 'getTlpToByjusClassUpgrade' }, { message: "Fetching getTlpToByjusClassUpgrade Product" });
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/controller.js:14:hardcoded object:	    let { paymentType, productType, updatedStudentDetails, bhlpCourseDetails, productCombination} = req.body;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/controller.js:16:hardcoded number:	    let skuArray = [], skuPrice = 0;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/controller.js:20:hardcoded number:	        for(let i = 0; i < updatedStudentDetails.length; i++) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/controller.js:21:hardcoded array:	            let {tablet =null} =updatedStudentDetails[i];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/controller.js:22:hardcoded array:	            const { courseSku } = await getCourseSku(req, updatedStudentDetails[i]) 
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/controller.js:23:hardcoded array:	            const { tabletSku } = tablet ? await getTabletSku(updatedStudentDetails[i]) : null;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/controller.js:24:hardcoded array:	            const { formattedProducts, totalPrice } = getTotalSkuAndPrice({courseSku,tabletSku : [tabletSku]})
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/controller.js:25:hardcoded array:	            updatedStudentDetails[i] = await getUpdatedStudentDetails(updatedStudentDetails[i], formattedProducts)
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/controller.js:34:hardcoded object:	        const details = { req, totalPrice: skuPrice }
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/controller.js:35:hardcoded object:	        const { maxPrice, minPrice, discountedPrice, voucher, areBonusPointsUsed, bonusPointsDiscount } = await getUpdatedPrice(details)
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:5:hardcoded string:	const { SalesSkuMaster } = require('@byjus-orders/npgexemplum')
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:8:hardcoded variable:	const getCourseSku = async (req, student) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:10:hardcoded object:	    let { initialClass, finalClass, board, state, tablet, tabletId, validity } = student;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:12:hardcoded string:	    tabletId = tabletId ? tabletId.split("-")[1] : ''
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:15:hardcoded array:	    let skuArray = [], tabletSku = []
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:16:hardcoded variable:	    let grade = parseInt(initialClass)
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:20:hardcoded variable:	        let query = {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:21:hardcoded string:	            category: 'byjus_classes_upgrade',
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:24:hardcoded string:	            subType: 'live',
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:25:hardcoded object:	            board: getBoard({ grade, board, state }),
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:28:hardcoded variable:	        const product = await getSalesSku(query)
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:30:hardcoded number:	        grade += 1;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:34:hardcoded variable:	    const updatedSku = await getUpdatedCourseSku(skuArray, initialClass)
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:40:hardcoded variable:	const getTabletSku = async (details) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:41:hardcoded object:	    let { tablet:tabletId, studentId, uniqueTabletId } = details
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:42:hardcoded number:	    let price = 0
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:48:hardcoded array:	                [Op.or]: [
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:49:hardcoded object:	                    { skuId: `${tabletId}` },
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:50:hardcoded object:	                    { ohProductId: `${tabletId}` }
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:52:hardcoded string:	                status: "active"
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:61:hardcoded string:	        tabletSku["price"] = tabletSku.basePrice
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:62:hardcoded string:	        tabletSku["itemType"] = 'tablet'
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:63:hardcoded string:	        tabletSku['itemId'] = getSkuItemId()
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/dto.js:69:hardcoded object:	        throw new NotFoundError(`Tablet with SKU Id:${tabletId} is not found`);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/routes.js:6:hardcoded object:	    const router = Router({ mergeParams: true });
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:3:hardcoded string:	const { SalesSkuMaster } = require('@byjus-orders/npgexemplum')
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:7:hardcoded variable:	const getCourseSkuFromPg = async (productDetails) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:8:hardcoded object:	    let { productCombination, grade, board, type, subType, validity, state } = productDetails;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:10:hardcoded variable:	    const query = {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:11:hardcoded string:	        status: "active",
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:13:hardcoded object:	        grade: `${grade}`,
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:14:hardcoded string:	        board: [4, 5, '4', '5'].includes(grade) ? null : getBoardForState(state, board),
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:15:hardcoded string:	        type: 'service',
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:16:hardcoded string:	        subType: 'live',
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:17:hardcoded object:	        validity: `${validity}`
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:20:hardcoded variable:	    const product = await SalesSkuMaster.findOne({
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:28:hardcoded string:	            itemType: 'course'
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:32:hardcoded object:	        const errorMsg = getErrorMsg({ grade, board, validity, type });
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:36:hardcoded variable:	const getBoardForState = (state, board) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:37:hardcoded string:	    if (["CBSE", "ICSE"].includes(board)) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:45:hardcoded variable:	const getDiscPrice = (details) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:46:hardcoded object:	    const { initialClass, finalClass, subCourse, state } = details;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:47:hardcoded number:	    let maxPrice = 0;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:49:hardcoded number:	    if (initialClass === 11) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:50:hardcoded number:	        maxPrice += productConstant.TLP_TO_BYJUS_CLASSES_K12_BASE_PRICE[subCourse];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:56:hardcoded number:	    if (finalClass == 12) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:57:hardcoded number:	        if (![11, 12].includes(initialClass)) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:58:hardcoded number:	            maxPrice += productConstant.TLP_TO_BYJUS_CLASSES_K12_BASE_PRICE[subCourse];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:59:hardcoded number:	            continuousClasses = finalClass - initialClass - 2;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:62:hardcoded number:	            continuousClasses = 0;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:68:hardcoded number:	    maxPrice += productConstant.TLP_TO_BYJUS_CLASSES_BASE_PRICE + (continuousClasses - 1) * (productConstant.TLP_TO_BYJUS_CLASSES_CONTINUOUS_PRICE);
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:72:hardcoded variable:	const getNonDiscPrice = (details) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:73:hardcoded object:	    const { initialClass, finalClass, subCourse } = details;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:74:hardcoded number:	    let maxPrice = 0;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:76:hardcoded number:	    if (initialClass === 11) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:77:hardcoded number:	        maxPrice += productConstant.TLP_TO_BYJUS_CLASSES_K12_BASE_PRICE[subCourse];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:78:hardcoded number:	    } else if (initialClass === 12 && finalClass === 12) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:79:hardcoded number:	        maxPrice += productConstant.TLP_TO_BYJUS_CLASSES_12th_BASE_PRICE[subCourse];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:86:hardcoded number:	    if (finalClass == 12) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:87:hardcoded number:	        if (![11, 12].includes(initialClass)) {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:88:hardcoded number:	            maxPrice += productConstant.TLP_TO_BYJUS_CLASSES_K12_BASE_PRICE[subCourse];
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:89:hardcoded number:	            continuousClasses = finalClass - initialClass - 2;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:92:hardcoded number:	            continuousClasses = 0;
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:102:hardcoded variable:	const getUpdatedPrice = (details) => {
microservices-middleware/server/src/upgradeordermanagement/byjusclass/btlp/upgradeBetaHelper.js:103:hardcoded object:	    const { validity, initialClass, finalClass } = details;
