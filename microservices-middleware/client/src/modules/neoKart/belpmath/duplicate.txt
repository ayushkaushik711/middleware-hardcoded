microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:1:hardcoded object:import React, { Component } from 'react';
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:3:hardcoded object:import { get, find, isEqual } from 'lodash';
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:5:hardcoded object:import { saveProductDetails, addLoader, removeLoader, resetPrice, saveCashbackDetails } from 'modules/product/productReducer';
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:8:hardcoded string:} from 'modules/product/components/productHelper';
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:9:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:10:hardcoded file path:import ProductDetailsForm from 'modules/product/components/ProducDetailsForm';
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:11:hardcoded file path:import FetchPrices from 'modules/product/components/FetchPrices';
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:12:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:13:hardcoded object:import { validateProfileSelection } from 'modules/ordertype/upgrade/trialpack/components/products/UpgradeProductHelper'
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:14:hardcoded object:import { getBelpMathFields, getTablets, filterInitialClass, filterFinalClass, filterInitialYear, getDeviceTypeOptions } from '../../ordertype/belpmath/helper/BelpMathHelper';
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:15:hardcoded object:import { BELP_MATH_SALES_PROGRAM_ID } from '../utils/spIds'
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:16:hardcoded object:import { filterFinalClassSprGrades, getTabletRecipes, getSortedGrades, getUpperCase } from './helper/NeoKartBelpMathHelper'
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:17:hardcoded object:import { IS_UPGRADE_VERTICAL } from 'modules/product/utils/productConstant';
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:19:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:20:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:21:hardcoded string:    leadDetails: get(state, 'auth.leadDetails'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:22:hardcoded string:    salesDetails: get(state, "details.salesDetails"),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:23:hardcoded string:    customerDetails: get(state, 'details.customerDetails'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:24:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:25:hardcoded string:    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:26:hardcoded string:    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:27:hardcoded string:    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:28:hardcoded string:    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:29:hardcoded string:    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:30:hardcoded string:    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:31:hardcoded string:    listOfManagers: get(state, 'product.eligibleManagerList', [])
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:34:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:58:hardcoded object:            productConfig: {},
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:59:hardcoded array:            fields: [],
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:68:hardcoded object:        const { validity } = this.state;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:69:hardcoded object:        const { productCombination, identifier, existingProfiles, authDetails, productType, user } = this.props;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:70:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:71:hardcoded object:        const { featureEnableList } = authDetails || {};
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:72:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user);
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:74:hardcoded variable:        const details = await productDetailsForm.getProductDetails();
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:75:hardcoded string:        const productDetails = get(details, 'productDetails') || {};
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:77:hardcoded string:            productDetails['tabletId'] = this.state[`tabletId`];
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:78:hardcoded string:            productDetails['usageMode'] = this.state[`isByjusMathNativeApp`] ? "native_app" : "browser";
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:79:hardcoded string:            productDetails['subCourse'] = "";
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:81:hardcoded string:        productDetails['validity'] = validity;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:84:hardcoded number:        if (existingProfiles.length > 0 && productDetails) {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:85:hardcoded variable:            const isValidate = validateProfileSelection(productDetails);
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:90:hardcoded variable:            const payload = {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:94:hardcoded string:                mentoringCount: get(details, 'mentoringCount'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:95:hardcoded string:                couponDetails: get(details, 'couponDetails'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:98:hardcoded array:                mentoringDetails: [],
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:99:hardcoded array:                bhlpCourseDetails: [],
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:104:hardcoded object:                url: `/api/neoKartIntegration/belpMath/product/${productType}`
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:111:hardcoded object:        const { identifier, productCombination } = this.props;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:112:hardcoded object:        const { initialClass } = this.state;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:114:hardcoded string:        let orderPunchingType = (initialClass === '0') ? "advance_order" : "NORMAL_ORDER";
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:116:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:128:hardcoded string:                url: '/api/product/storeProductDetails',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:129:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:132:hardcoded string:                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:136:hardcoded object:                this.setState({ error: null });
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:138:hardcoded string:                this.navigateToScreen('address');
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:140:hardcoded object:                this.setState({ error }, () => {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:149:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:150:hardcoded string:        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:159:hardcoded object:        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:162:hardcoded object:            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:164:hardcoded string:                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:168:hardcoded string:                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:171:hardcoded string:                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:172:hardcoded object:                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:181:hardcoded object:        const { showProfileSelectionOption, existingProfiles, authDetails, salesDetails, leadDetails } = this.props;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:182:hardcoded string:        !selectedCourse && this.handleChanges('K10/K12', 'course');
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:183:hardcoded string:        const teamManager = get(salesDetails, "directSalesByTeamManager", "");
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:185:hardcoded object:        const { productType, user, productCombination, listOfManagers } = this.props;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:186:hardcoded object:        const { vertical } = user;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:187:hardcoded number:        const { Products = [], Courses = [], Boards = [], Tablets = [], PreK3EligibleManagers = [] } = productConfig || {};
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:189:hardcoded object:        const productConfiguration = find(Products, { formattedName: productType }) || {};
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:190:hardcoded object:        const selectedCourseConfig = find(Courses, { formattedName: selectedCourse }) || {};
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:191:hardcoded string:        const selectedBoardConfig = find(Boards, { formattedName: (selectedBoard || "CBSE") }) || {};
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:192:hardcoded string:        const classes = getClasses(selectedBoardConfig, user, '', productLearningType, leadDetails, salesDetails, PreK3EligibleManagers);
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:193:hardcoded string:        let boardOptions = get(selectedCourseConfig, 'boards');
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:194:hardcoded string:        boardOptions = boardOptions.filter(ele => ele.value !== 'STATE');
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:196:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user);
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:197:hardcoded object:        const { env, featureEnableList } = authDetails;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:198:hardcoded string:        const isDevEnv = ["development", "local"].includes(env)
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:200:hardcoded variable:        let fields = [{
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:201:hardcoded string:            type: 'hidden',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:202:hardcoded string:            name: 'course',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:203:hardcoded string:            label: 'Select Course',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:204:hardcoded string:            options: get(productConfiguration, 'courses'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:205:hardcoded string:            value: 'K10/K12',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:206:hardcoded string:            message: "Please select Course"
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:208:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:209:hardcoded string:            name: 'board',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:210:hardcoded string:            label: 'Select Board',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:214:hardcoded string:            message: "Please select Board",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:216:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:217:hardcoded string:            name: 'initialClass',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:218:hardcoded string:            label: "Select Initial Grade",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:220:hardcoded object:            options: filterInitialClass({ classes, productType, env, isPrivilegedUser, featureEnableList }),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:222:hardcoded string:            message: "Please Select Initial Grade"
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:224:hardcoded string:            type: (productType === 'combo') ? 'select' : "hidden",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:225:hardcoded string:            name: 'finalClass',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:226:hardcoded string:            label: "Select Final Grade",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:227:hardcoded string:            required: (productType === 'combo') ? true : false,
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:228:hardcoded object:            options: filterFinalClass({ classes, selectedInitialClass, featureEnableList, env, productType, productCombination }),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:230:hardcoded string:            message: "Please Select Final Grade"
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:232:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:233:hardcoded string:            name: 'validity',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:234:hardcoded string:            label: "Select Initial Year",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:236:hardcoded object:            options: filterInitialYear({ env, isPrivilegedUser, featureEnableList }),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:238:hardcoded string:            message: "Please Select Initial Year"
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:240:hardcoded object:        ...getBelpMathFields({ props: this.props, handleChanges: this.handleChanges, isPrivilegedUser, env, isByjusMathNativeApp, initialGrade: this.state.initialClass, validity, featureEnableList }),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:242:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:243:hardcoded object:            options: getTablets({ Tablets, productCombination, bfsProductType, env, salesDetails, listOfManagers, isPrivilegedUser, teamManager, user, isByjusMathNativeApp, productType, featureEnableList }),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:244:hardcoded string:            name: 'tablet',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:245:hardcoded string:            label: 'Select Tablet',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:247:hardcoded string:            message: "Please select Tablet",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:250:hardcoded string:            type: (showProfileSelectionOption && existingProfiles.length > 0 ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:252:hardcoded string:            name: 'userProfile',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:253:hardcoded string:            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:255:hardcoded string:            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:257:hardcoded string:                display: 'block',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:258:hardcoded string:                height: '30px',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:259:hardcoded string:                lineHeight: '30px',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:261:hardcoded number:            required: (showProfileSelectionOption && existingProfiles.length > 0 ? true : false)
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:268:hardcoded array:          var fields = [];
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:269:hardcoded number:          for(var i=0, len = inputFields.length; i<len; i++ ) {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:271:hardcoded array:                label:inputFields[i],
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:272:hardcoded array:                value:inputFields[i]
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:279:hardcoded variable:        const sprRecipes = this.state.sprResponse.docs;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:280:hardcoded variable:        let sprGrades = sprRecipes.map(item => item.gradeName).filter((value, index, self) => self.indexOf(value) === index)
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:282:hardcoded variable:        const sprGradesFields = this.convertToFormFields(sprGrades);
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:283:hardcoded variable:        const sprBoards = sprRecipes.map(item => item.boardName).filter((value, index, self) => self.indexOf(value) === index)
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:284:hardcoded variable:        const sprBoardsFields = this.convertToFormFields(sprBoards);
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:285:hardcoded variable:        const sprValidity = sprRecipes.map(item => item.validity).filter((value, index, self) => self.indexOf(value) === index)
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:286:hardcoded variable:        const sprValidityFields = this.convertToFormFields(sprValidity);
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:290:hardcoded object:        const { showProfileSelectionOption, existingProfiles, authDetails, salesDetails, leadDetails } = this.props;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:291:hardcoded string:        !selectedCourse && this.handleChanges('K10/K12', 'course');
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:292:hardcoded string:        const teamManager = get(salesDetails, "directSalesByTeamManager", "");
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:294:hardcoded object:        const { productType, user, productCombination, listOfManagers } = this.props;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:295:hardcoded object:        const { vertical } = user;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:296:hardcoded number:        const { Products = [], Courses = [], Boards = [], Tablets = [], PreK3EligibleManagers = [] } = productConfig || {};
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:298:hardcoded object:        const productConfiguration = find(Products, { formattedName: productType }) || {};
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:299:hardcoded object:        const selectedCourseConfig = find(Courses, { formattedName: selectedCourse }) || {};
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:300:hardcoded string:        const selectedBoardConfig = find(Boards, { formattedName: (selectedBoard || "CBSE") }) || {};
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:301:hardcoded string:        const classes = getClasses(selectedBoardConfig, user, '', productLearningType, leadDetails, salesDetails, PreK3EligibleManagers);
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:302:hardcoded string:        let boardOptions = get(selectedCourseConfig, 'boards');
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:303:hardcoded string:        boardOptions = boardOptions.filter(ele => ele.value !== 'STATE');
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:305:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user);
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:306:hardcoded object:        const { env, featureEnableList } = authDetails;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:307:hardcoded string:        const isDevEnv = ["development", "local"].includes(env)
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:309:hardcoded variable:        let fields = [{
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:310:hardcoded string:            type: 'hidden',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:311:hardcoded string:            name: 'course',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:312:hardcoded string:            label: 'Select Course',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:313:hardcoded string:            options: get(productConfiguration, 'courses'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:314:hardcoded string:            value: 'K10/K12',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:315:hardcoded string:            message: "Please select Course"
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:317:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:318:hardcoded string:            name: 'board',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:319:hardcoded string:            label: 'Select Board',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:323:hardcoded string:            message: "Please select Board",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:325:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:326:hardcoded string:            name: 'initialClass',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:327:hardcoded string:            label: "Select Initial Grade",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:331:hardcoded string:            message: "Please Select Initial Grade"
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:333:hardcoded string:            type: (productType === 'combo') ? 'select' : "hidden",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:334:hardcoded string:            name: 'finalClass',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:335:hardcoded string:            label: "Select Final Grade",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:336:hardcoded string:            required: (productType === 'combo') ? true : false,
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:339:hardcoded string:            message: "Please Select Final Grade"
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:341:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:342:hardcoded string:            name: 'validity',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:343:hardcoded string:            label: "Select Initial Year",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:347:hardcoded string:            message: "Please Select Initial Year"
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:349:hardcoded object:        ...getBelpMathFields({ props: this.props, handleChanges: this.handleChanges, isPrivilegedUser, env, isByjusMathNativeApp, initialGrade: this.state.initialClass, validity, featureEnableList }),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:351:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:352:hardcoded object:            options: getTablets({ Tablets, productCombination, bfsProductType, env, salesDetails, listOfManagers, isPrivilegedUser, teamManager, user, isByjusMathNativeApp, productType, featureEnableList }),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:353:hardcoded string:            name: 'tablet',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:354:hardcoded string:            label: 'Select Tablet',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:356:hardcoded string:            message: "Please select Tablet",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:359:hardcoded string:            type: (showProfileSelectionOption && existingProfiles.length > 0 ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:361:hardcoded string:            name: 'userProfile',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:362:hardcoded string:            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:364:hardcoded string:            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:366:hardcoded string:                display: 'block',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:367:hardcoded string:                height: '30px',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:368:hardcoded string:                lineHeight: '30px',
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:370:hardcoded number:            required: (showProfileSelectionOption && existingProfiles.length > 0 ? true : false)
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:377:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:378:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:381:hardcoded string:        if (name === "validity") {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:382:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ validity: "", bfsBatch: "", bfsProductType: "" });
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:386:hardcoded string:        if (name === "board") {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:387:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ initialClass: "", finalClass: "", tablet: "", validity: "", bfsBatch: "", bfsProductType: "" });
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:388:hardcoded variable:            //const transientRecipes = filterRecipes(value, this.state.sprResponse.docs);
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:395:hardcoded string:        if (name === "initialClass") {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:396:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ finalClass: "", tablet: "", validity: "", bfsBatch: "", bfsProductType: "" });
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:399:hardcoded string:        if (name === "courseType") {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:400:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ initialClass: "", subCourse: "", tablet: "", validity: "", board: "" });
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:403:hardcoded string:        if (name === "bfsProductType") {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:404:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ tablet: "" });
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:407:hardcoded string:        if (name === "tablet") {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:408:hardcoded number:            detailsForm && detailsForm.setFieldsValue({ selectD4SDCard: false });
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:410:hardcoded array:                [`tabletId`]: `T-${value}`,
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:411:hardcoded number:                [`selectD4SDCard`]: false,
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:417:hardcoded array:            [name]: value,
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:423:hardcoded object:        this.setState({ error });
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:428:hardcoded object:            this.setState({ productConfig: nextProps.productConfig }, async () => {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:434:hardcoded object:            const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:435:hardcoded variable:            const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:437:hardcoded string:                board: "", initialClass: "", finalClass: "",
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:438:hardcoded string:                tablet: "", bfsBatch: "", bfsProductType: ""
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:446:hardcoded string:        CallApi({ url: '/api/neoKartIntegration/getRecipes', method: 'POST', body: {spId : BELP_MATH_SALES_PROGRAM_ID}  , onlyResponseDatas: true })
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:468:hardcoded object:        const { productDetails, productConfig, productType } = this.props;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:470:hardcoded string:        if (productType === get(productDetails, 'productType')) {
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:471:hardcoded string:            const formValues = get(productDetails, 'students[0].formValues');
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:475:hardcoded string:                course: get(formValues, 'course'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:476:hardcoded string:                board: get(formValues, 'board'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:477:hardcoded string:                initialClass: get(formValues, 'initialClass'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:478:hardcoded string:                finalClass: get(formValues, 'finalClass'),
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:479:hardcoded string:                subCourse: get(formValues, 'subCourse')
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:485:hardcoded string:        this.setState({ productConfig, course: 'K10/K12' });
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:489:hardcoded object:        const { error, productConfig, productDetails, errorActions, bfsProductType, tablet } = this.state;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:490:hardcoded object:        const { changeNextBtnMode, productType, productCombination, authDetails } = this.props;
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:491:hardcoded object:        const { env } = authDetails || {};
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:492:hardcoded array:        const fields = this.state.isSprResponsePresent ? this.getFieldsFromKMS() : (productConfig ? this.getFields() : []); 
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:493:hardcoded variable:        const deviceType = getDeviceTypeOptions(env, tablet)
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:494:hardcoded object:        const initialValue = { ...getProductFormInitialValue(productDetails), deviceType: deviceType }
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:498:hardcoded object:                <ErrorWrapper error={error} errorActions={errorActions} />
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:500:hardcoded string:                    ref="productDetailsForm"
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:501:hardcoded object:                    productType={productType}
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:502:hardcoded object:                    fields={fields}
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:503:hardcoded object:                    initialValues={initialValue}
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:506:hardcoded string:                    ref='fetchComp'
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:507:hardcoded object:                    onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:508:hardcoded object:                    getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:509:hardcoded object:                    changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:510:hardcoded object:                    productType={productType}
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:511:hardcoded object:                    setError={this.setError}
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:512:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:513:hardcoded object:                    bfsProductType={bfsProductType}
microservices-middleware/client/src/modules/neoKart/belpmath/NeoKartBelpMathProductPage.js:521:hardcoded object:export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(ComboProduct);
