microservices-middleware/client/src/modules/quotationbeta/customer/CustomerHeader.js:5:hardcoded string:	} from './Styles'
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerHeader.js:7:hardcoded variable:	const CustomerHeader = (props) => {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerHeader.js:8:hardcoded object:	    const { customerId, quotationId } = props
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerHeader.js:13:hardcoded string:	                <UserIcon ><i class="fa fa-user" aria-hidden="true"></i></UserIcon>
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerHeader.js:15:hardcoded string:	                    <IdBadge mg="1.3rem">{customerId}</IdBadge>
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerHeader.js:18:hardcoded string:	                    <IdBadge mg="50rem">{quotationId}</IdBadge>
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:17:hardcoded string:	} from "./Styles";
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:20:hardcoded variable:	const QuotationBetaSalesAndCustomerPage = (props) => {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:21:hardcoded object:	    const { history } = props;
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:22:hardcoded array:	    const [loading, setLoading] = useState(false);
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:23:hardcoded array:	    const [error, setError] = useState(null);
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:24:hardcoded array:	    const [quotationStudent, setQuotationStudent] = useRecoilState(
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:27:hardcoded object:	    const { quotationId, leadId, customerId, quotationStatus } = quotationStudent;
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:28:hardcoded array:	    const [customerDetails, setCustomerDetails] = useState({});
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:29:hardcoded array:	    const [addressDetails, setAddressDetails] = useState({});
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:30:hardcoded array:	    const [city, setCity] = useState([]);
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:31:hardcoded array:	    const [state, setState] = useState([]);
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:32:hardcoded array:	    const [country, setCountry] = useState([]);
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:33:hardcoded number:	    const [zipCode, setZipCode] = useState(0);
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:34:hardcoded variable:	    const basicRef = useRef(null);
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:35:hardcoded variable:	    const addressRef = useRef(null);
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:36:hardcoded array:	    const [formValues, setFormValues] = useState({});
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:40:hardcoded array:	    }, []);
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:42:hardcoded variable:	    const getFormattedValues = (details) => {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:43:hardcoded object:	        let { addressLine, city, country, state, zipCode } = details;
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:44:hardcoded variable:	        let formatAddressPayload = {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:46:hardcoded string:	            city: get(city, "value", "") ? get(city, "value", "") : city,
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:52:hardcoded object:	        return { formatAddressPayload };
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:55:hardcoded variable:	    const onClickProceed = async () => {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:56:hardcoded variable:	        const basicFormValues = basicRef.current.validateFormAndGetValues();
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:58:hardcoded variable:	        const addressFormValues = addressRef.current.validateFormAndGetValues();
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:61:hardcoded object:	            const { formatAddressPayload } = getFormattedValues(
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:65:hardcoded variable:	            const body = {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:73:hardcoded variable:	                const response = await CallApi({
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:74:hardcoded string:	                    url: "/api/quotation-beta/updateCustomerDetails",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:75:hardcoded string:	                    method: "POST",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:79:hardcoded variable:	                let status = quotationStatus;
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:80:hardcoded number:	                if (STAGE[3].includes(status)) {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:93:hardcoded string:	            setError("Form values are missing");
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:97:hardcoded variable:	    const getSalesCustomerDetails = () => {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:98:hardcoded variable:	        const body = {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:103:hardcoded string:	            url: "/api/quotation-beta/getCustomerDetails",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:104:hardcoded string:	            method: "POST",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:108:hardcoded variable:	                const data = response.data;
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:109:hardcoded object:	                const { customerData, addressData } = data;
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:120:hardcoded variable:	    const handleOnChange = async (value) => {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:122:hardcoded number:	            if (value.length === 6) {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:123:hardcoded variable:	                const payload = {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:126:hardcoded variable:	                const response = await CallApi({
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:127:hardcoded string:	                    url: "/api/quotation-beta/getPincodeInfo",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:128:hardcoded string:	                    method: "POST",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:132:hardcoded string:	                const data = get(response, "data", []);
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:133:hardcoded string:	                const cities = get(data, 'city', []);
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:134:hardcoded variable:	                const cityListOptions = !isArray(cities)
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:136:hardcoded object:	                    : cities?.map((city) => { return { value: city, label: city } });
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:138:hardcoded string:	                setCountry(get(data, "country", ""));
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:139:hardcoded string:	                setState(get(data, "state", ""));
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:141:hardcoded string:	                setFormValues(prevState => ({ ...prevState, ['city']: cityListOptions }))
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:142:hardcoded object:	                setAddressDetails({});
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:151:hardcoded variable:	    const handleOnAddressChange = (e, name, options) => {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:153:hardcoded array:	            let record = []
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:159:hardcoded array:	            setFormValues(prevState => ({ ...prevState, [name]: record }))
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:163:hardcoded variable:	    const validateValues = (formValues) => {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:164:hardcoded object:	        let validationErrors = {};
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:165:hardcoded variable:	        const emailRegex = /\S+@\S+\.\S+/;
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:167:hardcoded string:	            if (key === "email") {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:168:hardcoded array:	                if (!emailRegex.test(formValues[key])) {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:169:hardcoded array:	                    validationErrors[key] = `Enter a valid emailId`;
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:176:hardcoded variable:	    const validateAddressValues = (formValues) => {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:177:hardcoded object:	        let validationErrors = {};
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:178:hardcoded variable:	        let regexNumber = /\d/g;
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:179:hardcoded array:	        let regexSpecial = /[`!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]/g;
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:180:hardcoded number:	        var zipcode = /(^\d{6}$)/
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:182:hardcoded string:	            if (["state", "city", "country"].includes(key)) {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:184:hardcoded string:	                    regexNumber.test(get(formValues[key], 'value') ? get(formValues[key], 'value') : formValues[key]) ||
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:185:hardcoded string:	                    regexSpecial.test(get(formValues[key], 'value') ? get(formValues[key], 'value') : formValues[key])
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:187:hardcoded array:	                    validationErrors[key] = `Enter a valid ${key}`;
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:190:hardcoded string:	            else if (key === 'zipCode') {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:192:hardcoded array:	                    !zipcode.test(formValues[key])
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:194:hardcoded array:	                    validationErrors[key] = `Enter a valid ${key}`;
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:202:hardcoded variable:	    const basicFields = [
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:204:hardcoded string:	            type: "text",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:205:hardcoded string:	            name: "name",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:206:hardcoded string:	            label: "Customer Name",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:207:hardcoded string:	            placeholder: "Customer Name",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:211:hardcoded string:	            type: "text",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:212:hardcoded string:	            name: "mobile",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:213:hardcoded string:	            label: "Mobile",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:217:hardcoded string:	            type: "text",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:218:hardcoded string:	            name: "email",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:219:hardcoded string:	            label: "Email",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:220:hardcoded string:	            placeholder: "email@domain.com",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:225:hardcoded variable:	    const addressFields = [
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:227:hardcoded string:	            type: "text",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:228:hardcoded string:	            name: "zipCode",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:229:hardcoded string:	            label: "Zipcode",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:230:hardcoded string:	            placeholder: "Zipcode",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:231:hardcoded number:	            maxLength: 6,
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:233:hardcoded string:	            value: isEmpty(zipCode) ? "" : zipCode,
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:237:hardcoded string:	            type: "text",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:238:hardcoded string:	            name: "addressLine",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:239:hardcoded string:	            label: "Address Line",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:240:hardcoded string:	            placeholder: "Address Line",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:244:hardcoded string:	            type: 'text',
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:245:hardcoded string:	            name: "country",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:246:hardcoded string:	            label: "Country",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:247:hardcoded string:	            placeholder: "Country",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:249:hardcoded string:	            value: isEmpty(country) ? "India" : country,
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:253:hardcoded string:	            type: "text",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:254:hardcoded string:	            name: "state",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:255:hardcoded string:	            label: "State",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:256:hardcoded string:	            placeholder: "State",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:258:hardcoded string:	            value: isEmpty(state) ? "" : state,
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:262:hardcoded string:	            type: !isEmpty(city) && isArray(city) ? "select" : "text",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:263:hardcoded string:	            name: "city",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:264:hardcoded string:	            label: "City",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:265:hardcoded string:	            placeholder: "City",
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:269:hardcoded string:	            onChange: (e) => handleOnAddressChange(e, "city", city),
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:275:hardcoded string:	            <LoadingWrapper loading={loading} message={"loading"}>
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:276:hardcoded object:	                <ErrorWrapper message={error} />
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:279:hardcoded object:	                        basicRef={basicRef}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:280:hardcoded object:	                        basicFields={basicFields}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:281:hardcoded object:	                        validateValues={validateValues}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:282:hardcoded object:	                        customerDetails={customerDetails}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:285:hardcoded object:	                        addressRef={addressRef}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:286:hardcoded object:	                        addressFields={addressFields}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:287:hardcoded object:	                        validateAddressValues={validateAddressValues}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:288:hardcoded object:	                        addressDetails={addressDetails}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:289:hardcoded object:	                        formValues={formValues}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerDetails.js:293:hardcoded string:	                    <ProceedButton onClick={onClickProceed} className="me-2">
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerBasicForm.js:8:hardcoded variable:	const CustomerBasicForm = (props) => {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerBasicForm.js:15:hardcoded string:	    const cardHeaderStyle = { margin: 10, height: 425, overflow: 'scroll' };
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerBasicForm.js:20:hardcoded string:	                <i class="fa fa-info-circle" aria-hidden="true"></i>
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerBasicForm.js:24:hardcoded object:	                ref={basicRef}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerBasicForm.js:25:hardcoded object:	                fields={basicFields}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerBasicForm.js:26:hardcoded number:	                cols={1}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerBasicForm.js:27:hardcoded object:	                style={cardHeaderStyle}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerBasicForm.js:28:hardcoded object:	                validateValues={validateValues}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerBasicForm.js:30:hardcoded string:	                    "name": get(customerDetails, "parentName", ""),
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerBasicForm.js:31:hardcoded string:	                    "mobile": get(customerDetails, "phone", ""),
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerBasicForm.js:32:hardcoded string:	                    "email": get(customerDetails, "email", "")
microservices-middleware/client/src/modules/quotationbeta/customer/QuotationProductDetails.js:8:hardcoded variable:	const QuotationProductForm = (props) => {
microservices-middleware/client/src/modules/quotationbeta/customer/QuotationProductDetails.js:9:hardcoded object:	    const {leadId, customerId, quotationId} = props;
microservices-middleware/client/src/modules/quotationbeta/customer/QuotationProductDetails.js:10:hardcoded array:	    const [loading, setLoading] = useState(false);
microservices-middleware/client/src/modules/quotationbeta/customer/QuotationProductDetails.js:11:hardcoded array:	    const [error, setError] = useState(null);
microservices-middleware/client/src/modules/quotationbeta/customer/QuotationProductDetails.js:15:hardcoded array:	    },[]);
microservices-middleware/client/src/modules/quotationbeta/customer/QuotationProductDetails.js:18:hardcoded string:	        <LoadingWrapper loading={loading} message={"loading"}>
microservices-middleware/client/src/modules/quotationbeta/customer/QuotationProductDetails.js:20:hardcoded string:	            <QuotationNavbar label={'Product'}>
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:8:hardcoded variable:	const CustomerAddressForm = (props) => {
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:17:hardcoded object:	    const { city } = formValues||{};
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:18:hardcoded string:	    const filterCity = !isEmpty(city) && isArray(city) ? get(city, '0') : city;
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:20:hardcoded string:	    const cardHeaderStyle = { margin: 10, height: 425, overflow: "scroll" };
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:24:hardcoded string:	                <i class="fa fa-address-card" aria-hidden="true"></i>
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:28:hardcoded object:	                ref={addressRef}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:29:hardcoded object:	                fields={addressFields}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:30:hardcoded number:	                cols={2}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:31:hardcoded object:	                validateValues={validateAddressValues}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:32:hardcoded object:	                style={cardHeaderStyle}
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:34:hardcoded string:	                    zipCode: !isEmpty(get(addressFields, "0.value"))
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:35:hardcoded string:	                        ? get(addressFields, "0.value")
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:36:hardcoded string:	                        : get(addressDetails, "zipCode"),
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:37:hardcoded string:	                    country: !isEmpty(get(addressFields, "2.value"))
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:38:hardcoded string:	                        ? get(addressFields, "2.value")
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:39:hardcoded string:	                        : get(addressDetails, "country"),
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:40:hardcoded string:	                    state: !isEmpty(get(addressFields, "3.value"))
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:41:hardcoded string:	                        ? get(addressFields, "3.value")
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:42:hardcoded string:	                        : get(addressDetails, "state"),
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:45:hardcoded string:	                        ? get(addressDetails, "addressLine")
microservices-middleware/client/src/modules/quotationbeta/customer/CustomerAddress.js:46:hardcoded string:	                        : "",
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:1:hardcoded string:	import styled from "@emotion/styled";
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:4:hardcoded variable:	export const ProceedButton = styled(Button)`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:5:hardcoded number:	    background-color: #6f8bc3;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:6:hardcoded number:	    border-color: #67799d;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:7:hardcoded number:	    width: 196px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:8:hardcoded number:	    margin-top: 40px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:9:hardcoded number:	    box-shadow: 0 8px 16px 0 rgb(0 0 0 / 16%);
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:11:hardcoded variable:	export const ButtonHeader = styled.div`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:16:hardcoded variable:	export const BackButton = styled(Button)`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:17:hardcoded number:	    background-color: #6f8bc3;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:18:hardcoded number:	    border-color: #67799d;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:19:hardcoded number:	    width: 196px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:20:hardcoded number:	    margin-top: 40px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:21:hardcoded number:	    margin-left: -800px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:22:hardcoded number:	    box-shadow: 0 8px 16px 0 rgb(0 0 0 / 16%);
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:25:hardcoded variable:	export const QuotationLabel = styled.label`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:26:hardcoded number:	    margin: 27px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:27:hardcoded number:	    padding-top: 0.1px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:28:hardcoded number:	    line-height: 30px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:29:hardcoded number:	    font-size: 18px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:32:hardcoded number:	    background-color: #813588;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:33:hardcoded number:	    border-color: #813588;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:34:hardcoded number:	    padding: 4px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:37:hardcoded variable:	export const IdBadge = styled(Badge)`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:38:hardcoded number:	    background-color: #FF8E32;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:39:hardcoded number:	    background-image: linear-gradient(to right, #FF8E32, #FF5263);
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:40:hardcoded number:	    height: 1.5rem;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:42:hardcoded object:	    margin-left: ${props => props.mg}
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:45:hardcoded variable:	export const CustomerCardHeader = styled.div`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:49:hardcoded variable:	export const CardHeader = styled.div`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:50:hardcoded number:	    padding: 0.75rem 1.25rem;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:51:hardcoded number:	    margin-bottom: 0;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:52:hardcoded number:	    background-color: rgb(225, 237, 237);
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:53:hardcoded number:	    border-radius: 19px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:57:hardcoded variable:	export const CustomerForm = styled.div`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:58:hardcoded number:	    padding: 0.75rem 1.26rem;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:59:hardcoded number:	    background: #c1cee9;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:62:hardcoded variable:	export const BadgeContainer = styled.div`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:67:hardcoded variable:	export const CardContainer = styled.div`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:72:hardcoded variable:	export const UserIcon = styled.div`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:73:hardcoded number:	    margin-left: 4px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:76:hardcoded variable:	export const Customer = styled.p`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:77:hardcoded number:	    height: 12px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:78:hardcoded number:	    font-size: 16px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:79:hardcoded number:	    font-weight: 600;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:82:hardcoded variable:	export const BasicHeader = styled.p`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:83:hardcoded number:	    height: 12px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:84:hardcoded number:	    font-size: 16px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:85:hardcoded number:	    font-weight: 600;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:86:hardcoded number:	    margin-top: -5px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:88:hardcoded number:	    margin-bottom: 28px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:89:hardcoded number:	    margin-left: 8px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:92:hardcoded variable:	export const AddressHeader = styled.p`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:93:hardcoded number:	    height: 12px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:94:hardcoded number:	    font-size: 16px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:95:hardcoded number:	    font-weight: 600;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:96:hardcoded number:	    margin-top: -5px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:98:hardcoded number:	    margin-bottom: 28px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:99:hardcoded number:	    margin-left: 8px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:102:hardcoded variable:	export const CustomerDetails = styled.div`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:107:hardcoded variable:	export const BasicDetails = styled.div`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:108:hardcoded number:	    padding-top: 84px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:109:hardcoded number:	    padding-left: 40px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:110:hardcoded number:	    padding-right: 40px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:111:hardcoded number:	    background: #e2e9ed;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:112:hardcoded number:	    width: 600px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:113:hardcoded number:	    height: 350px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:114:hardcoded number:	    border-radius: 37px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:115:hardcoded number:	    margin-top: 20px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:116:hardcoded number:	    box-shadow: 0 8px 16px 0 rgb(0 0 0 / 16%);
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:118:hardcoded variable:	export const AddressDetails = styled.div`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:119:hardcoded number:	    padding-top: 84px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:120:hardcoded number:	    padding-left: 40px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:121:hardcoded number:	    padding-right: 40px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:122:hardcoded number:	    background: #e2e9ed;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:123:hardcoded number:	    width: 600px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:124:hardcoded number:	    height: 350px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:125:hardcoded number:	    border-radius: 37px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:126:hardcoded number:	    margin-top: 20px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:127:hardcoded number:	    box-shadow: 0 8px 16px 0 rgb(0 0 0 / 16%);
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:129:hardcoded variable:	export const HeaderDiv = styled.div`
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:131:hardcoded number:	    margin-top: -31px;
microservices-middleware/client/src/modules/quotationbeta/customer/Styles.js:132:hardcoded number:	    margin-left: 180px;
