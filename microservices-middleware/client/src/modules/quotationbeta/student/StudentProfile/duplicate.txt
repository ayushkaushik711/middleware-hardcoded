microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:1:hardcoded object:import React, {useState, useEffect, useRef} from "react";
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:2:hardcoded object:import { Button, Row, Col, Alert } from "reactstrap";
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:3:hardcoded object:import { get } from "lodash";
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:4:hardcoded object:import { useRecoilState } from 'recoil';
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:6:hardcoded file path:import AntDFormBuilder from 'components/form/AntDFormBuilder';
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:7:hardcoded file path:import InfoWrapper from "components/InfoWrapper";
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:8:hardcoded file path:import ErrorWrapper from "components/ErrorWrapper";
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:9:hardcoded file path:import LoadingWrapper from "components/LoadingWrapper";
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:10:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:11:hardcoded object:import { quotationStudentDetails } from 'store/atom';
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:13:hardcoded file path:import StudentForm from '../StudentForm';
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:14:hardcoded object:import {ProfileContainer} from './Styles';
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:16:hardcoded variable:const StudentProfile = (props) => {
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:17:hardcoded object:    const { quotation, onClickSelectProfile } = props;
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:18:hardcoded object:    const {quotationId} = quotation;
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:19:hardcoded variable:    const profileForm = useRef();
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:20:hardcoded array:    const [quotationStudent, setQuotationStudent] = useRecoilState(quotationStudentDetails)
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:21:hardcoded array:    const [error, setError] = useState();
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:22:hardcoded array:    const [info, setInfo] = useState();
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:23:hardcoded array:    const [loading, setLoading] = useState(false);
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:24:hardcoded array:    const [formValues, setFormValues] = useState({
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:25:hardcoded string:        profile: '',
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:27:hardcoded array:    const [profileList, setProfileList] = useState([]);
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:29:hardcoded variable:    const search = window.location.search;
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:30:hardcoded variable:    const params = new URLSearchParams(search);
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:31:hardcoded string:    let primaryNumber = params.get('studentMobile');
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:32:hardcoded string:    let studentName = params.get('studentName');
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:35:hardcoded object:        fetchStudentProfile({});
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:36:hardcoded array:    }, []);
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:38:hardcoded variable:    const fetchStudentProfile = async(studentDetails) => {
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:40:hardcoded object:            const {notification} = studentDetails;
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:41:hardcoded string:            setInfo("");
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:44:hardcoded variable:            const response = await CallApi({
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:45:hardcoded string:                url: '/api/quotation-beta/studentByPhone',
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:46:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:47:hardcoded object:                body: { primaryNumber, quotationId, studentName }
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:49:hardcoded string:            const details = get(response, 'data', {});
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:50:hardcoded string:            const studentProfiles = get(details, 'students', []);
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:51:hardcoded variable:            const profileOptions = studentProfiles.map(item=>{
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:52:hardcoded object:                return { label: item.studentName, value: item.premium_account_id, data: item}
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:63:hardcoded variable:    const handleChanges = (value, name) => {
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:69:hardcoded variable:    const profileFormDetails = () => {
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:70:hardcoded string:        const spName = get(quotationStudent, 'students.spDetails.name', '');
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:71:hardcoded string:        const studentId = get(quotationStudent, 'students.studentId', '');
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:72:hardcoded string:        const disabled = ['byjus_home_tuition'].includes(spName) && studentId;
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:74:hardcoded variable:        const initialValues = formValues;
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:75:hardcoded variable:        const formItemLayout = {
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:77:hardcoded number:              xs: { span: 6 },
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:78:hardcoded number:              sm: { span: 6 },
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:81:hardcoded number:              xs: { span: 16 },
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:82:hardcoded number:              sm: { span: 16 },
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:85:hardcoded variable:        const formFields = [
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:87:hardcoded string:                type: 'select',
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:88:hardcoded string:                name: 'profile',
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:89:hardcoded string:                label: 'Profiles',
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:93:hardcoded string:                message: 'Please select student profile',
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:100:hardcoded number:                <Col xs={6}>
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:102:hardcoded object:                        ref={profileForm}
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:103:hardcoded object:                        fields={formFields}
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:104:hardcoded object:                        initialValues={initialValues}
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:105:hardcoded object:                        formItemLayout={formItemLayout}
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:108:hardcoded string:                <Col style={{"paddingTop": "1rem"}}>
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:109:hardcoded string:                    <Button color="success" onClick={onClick} disabled={disabled}>Select Student</Button>
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:115:hardcoded variable:    const onClick = () => {
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:116:hardcoded string:        const profileId = get(formValues, 'profile');
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:117:hardcoded string:        const profileDetails = profileList.find((item)=>get(item, 'value')===profileId)
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:122:hardcoded string:        <LoadingWrapper loading={loading} message={"loading"}>
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:124:hardcoded object:            <StudentForm addStudent={fetchStudentProfile} studentProfiles={profileList}/>
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:125:hardcoded string:            {info && <InfoWrapper type="info" descriptionBody={info} />}
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:126:hardcoded object:            {error && <ErrorWrapper error={error} />}
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:127:hardcoded object:            {profileFormDetails()}
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/index.js:128:hardcoded string:            <Alert style={{marginTop:"2rem"}} color="info">Add Student Button is disabled if profile count is equal to or more than 3</Alert>
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/Styles.js:1:hardcoded string:import styled from "@emotion/styled";
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/Styles.js:3:hardcoded variable:export const ProfileContainer = styled.div`
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/Styles.js:4:hardcoded number:    box-shadow: 0rem 0.2rem 0.5rem #c6c6c6;
microservices-middleware/client/src/modules/quotationbeta/student/StudentProfile/Styles.js:6:hardcoded number:    padding: 0.8rem;
