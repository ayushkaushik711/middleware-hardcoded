microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:6:hardcoded variable:	const SlotSection = (props, ref) => {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:7:hardcoded object:	    const { setLoading, setResetPrice, handleGlobalSlotChanges, setShowPrice, globalSelectedSlots} = props;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:8:hardcoded object:	    const { subject, frequency, slots } = props;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:10:hardcoded array:	    const [selectedBatch, updateSelectedBatch] = useState([]);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:11:hardcoded array:	    const [globalSlots, setGlobalSlots] = useState([]);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:12:hardcoded array:	    const [globalTutorIds, setGlobalTutorIds] = useState([]);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:18:hardcoded array:	        let updatedTutorIds = [];
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:20:hardcoded object:	            const {tutorIds} = item;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:26:hardcoded array:	        updateSelectedBatch([])
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:28:hardcoded array:	    }, []);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:31:hardcoded variable:	    const handleSlotChanges = (name, value, params) => {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:32:hardcoded object:	        const {slotIndex} = params;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:33:hardcoded string:	        if(name=="dayOfWeek"){
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:35:hardcoded object:	            handleGlobalSlotChanges(value, name, {});
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:38:hardcoded array:	            let slotBatch = [];
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:40:hardcoded string:	                if(get(item, "slotIndex", 0)<slotIndex){
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:44:hardcoded string:	            if(subject && subject.toLowerCase()=='science'){
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:45:hardcoded variable:	                let glblSelectedSlotsList = values(globalSelectedSlots);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:47:hardcoded string:	                    if(item.subject && item.subject.toLowerCase()=='mathematics'){
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:59:hardcoded object:	    const getSlotRow = ({index, selectedSubject}) => {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:62:hardcoded object:	                index={index}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:63:hardcoded object:	                globalSlots={globalSlots}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:64:hardcoded object:	                globalTutorIds={globalTutorIds}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:65:hardcoded object:	                handleSlotChanges={handleSlotChanges}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:66:hardcoded object:	                subject={subject}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:67:hardcoded object:	                selectedBatch={selectedBatch}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:68:hardcoded object:	                setResetPrice={setResetPrice}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:69:hardcoded object:	                setShowPrice={setShowPrice}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:70:hardcoded object:	                globalSelectedSlots={globalSelectedSlots}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:77:hardcoded object:	        <p>{subject}</p>
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:78:hardcoded number:	        {frequency && Array.from({length: frequency}, (_, i) => i + 1).map((index) => {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slotSection.js:79:hardcoded object:	            return getSlotRow({index, selectedSubject: subject});
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:9:hardcoded variable:	const Slots = (props, ref) => {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:10:hardcoded array:	    const [loading, setLoading] = useState(false);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:11:hardcoded variable:	    const slotFormRef = useRef();
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:12:hardcoded array:	    const [slotFormValues, setSlotFormValues] = useState({});
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:13:hardcoded array:	    const {handleSlotChanges, index, subject, selectedBatch = [], globalSlots, globalTutorIds, setResetPrice, setShowPrice, globalSelectedSlots} = props;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:17:hardcoded array:	     }, [globalSelectedSlots])
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:20:hardcoded variable:	        let selectIndexList = selectedBatch.map(item=>item.slotIndex);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:24:hardcoded array:	                dayList: [],
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:25:hardcoded array:	                timeList: [],
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:26:hardcoded object:	                dayOfWeek: {},
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:27:hardcoded object:	                startMinute: {}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:32:hardcoded variable:	        let localTutorList = globalTutorIds;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:33:hardcoded number:	        if(index>1) {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:35:hardcoded object:	                const {tutorIds} = item;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:41:hardcoded string:	        console.log('localTutorList', index, localTutorList);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:44:hardcoded array:	        let localSlots = [];
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:45:hardcoded variable:	        const selBatchList = selectedBatch.map(item=>item.slotKey);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:46:hardcoded string:	        if(index==1 && subject.toLowerCase()!='science'){
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:51:hardcoded variable:	                let commonTutorList = intersection(localTutorList, item.tutorIds);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:52:hardcoded variable:	                let allowed = true;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:54:hardcoded object:	                    let {startMinute, dayOfWeek} = batch;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:55:hardcoded number:	                    let minTime = startMinute > 90? parseInt((startMinute-90)%1000): startMinute;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:56:hardcoded number:	                    let maxTime = parseInt((startMinute+90)%1000);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:63:hardcoded number:	                if( commonTutorList.length>0 && !selBatchList.includes(item.slotKey) && allowed){
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:69:hardcoded string:	        const daysAvailable = groupBy(localSlots, "dayOfWeek");
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:70:hardcoded variable:	        const days = keys(daysAvailable);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:71:hardcoded variable:	        let dayList = days.map((item)=>{
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:74:hardcoded array:	                label: dayMapping[item]
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:84:hardcoded array:	    }, [selectedBatch, globalSlots, globalTutorIds])
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:86:hardcoded variable:	    const filterGlobalSlots = (globalSlotDetails) => {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:88:hardcoded variable:	            let glblSelectedSlotsList = values(globalSlotDetails);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:89:hardcoded string:	            let glblSlots = glblSelectedSlotsList.map(item=>get(item,'slotKey', ''))
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:92:hardcoded variable:	            let updateGlobalSlots = filterDiffSubjectSlots(glblSelectedSlotsList, globalSlots)
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:93:hardcoded string:	            const daysAvailable = groupBy(updateGlobalSlots, "dayOfWeek");
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:94:hardcoded variable:	            const days = keys(daysAvailable);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:95:hardcoded variable:	            let dayList = days.map((item)=>{
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:98:hardcoded array:	                    label: dayMapping[item]
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:102:hardcoded string:	            if(glblSelectedSlotsList.length>0 && subject && subject.toLowerCase()=='science') {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:103:hardcoded string:	                let sciencSlot = glblSelectedSlotsList.find(item=>item.subject && item.subject.toLowerCase()=='science');
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:104:hardcoded array:	                let filteredGlobalSlots = []
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:107:hardcoded variable:	                        let allowed = true;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:109:hardcoded object:	                            let {startMinute, dayOfWeek} = batch;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:110:hardcoded number:	                            let minTime = startMinute > 90? parseInt((startMinute-90)%1000): startMinute;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:111:hardcoded number:	                            let maxTime = parseInt((startMinute+90)%1000);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:124:hardcoded object:	                        dayOfWeek: {},
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:125:hardcoded object:	                        startMinute: {},
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:141:hardcoded variable:	    const filterDiffSubjectSlots = (globalSlotList, slotList) => {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:142:hardcoded string:	        let glblSlots = globalSlotList.map(item=>get(item,'slotKey', ''))
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:143:hardcoded variable:	        let diffSubSlot = globalSlotList.find(item=>item.subject!=subject);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:145:hardcoded array:	            let updateGlobalSlots = []
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:147:hardcoded number:	                if(glblSlots.length==0 || (!glblSlots.includes(item.slotKey))){
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:156:hardcoded variable:	    const slotForm = (details) => {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:157:hardcoded object:	        const { slotFormValues, handleSlotSelection } = details;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:162:hardcoded variable:	        const slotFields = [
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:164:hardcoded string:	                type: "readonly",
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:165:hardcoded string:	                name: "mode",
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:167:hardcoded object:	                placeholder: `Slot ${index}`
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:170:hardcoded string:	                type: "select",
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:171:hardcoded string:	                name: "dayOfWeek",
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:175:hardcoded string:	                placeholder: 'Select Day'
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:178:hardcoded string:	                type: "select",
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:179:hardcoded string:	                name: "startMinute",
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:183:hardcoded string:	                placeholder: 'Select Time'
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:189:hardcoded string:	      const getIstTime = (slotTime = "") => {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:190:hardcoded string:	        let slotTimings = slotTime.split(":");
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:191:hardcoded number:	        if(slotTimings.length>0){
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:192:hardcoded string:	            let hours = slotTimings[0] || "0";
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:193:hardcoded number:	            hours = parseInt(hours) + 5;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:194:hardcoded string:	            let mins = slotTimings[1] || "0";
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:195:hardcoded number:	            mins = parseInt(mins) + 30;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:196:hardcoded number:	            let updatedMins = parseInt((mins % 60));
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:197:hardcoded number:	            const extraHr = parseInt((mins / 60));
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:198:hardcoded variable:	            let updatedHours = hours + extraHr;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:199:hardcoded number:	            if(updatedMins<10){
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:200:hardcoded number:	                updatedMins = `0${updatedMins}`;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:202:hardcoded number:	            if(updatedHours<10){
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:203:hardcoded number:	                updatedHours = `0${updatedHours}`
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:205:hardcoded object:	            return `${updatedHours}:${updatedMins}`
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:209:hardcoded variable:	      const handleSlotSelection = async (value, name, params) => {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:212:hardcoded object:	        const { data } = params;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:213:hardcoded string:	        if(name === "dayOfWeek") {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:214:hardcoded variable:	            const selectedDay = value;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:215:hardcoded object:	            const {slotBatches={}} = slotFormValues || {};
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:216:hardcoded variable:	            let filteredSlots = slotBatches.filter(item=>item.dayOfWeek == selectedDay);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:220:hardcoded object:	                startMinute: {},
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:221:hardcoded object:	                timeList: filteredSlots.map((item)=>{ return {value: item.slotKey, label: getIstTime(item.startMinuteHHMM)}})
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:224:hardcoded string:	            handleSlotChanges("dayOfWeek", `slot-${index}-${subject}`, {slotIndex: index});           
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:225:hardcoded string:	        } else if(name==="startMinute"){
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:226:hardcoded object:	            let {slotBatches} = slotFormValues;
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:227:hardcoded variable:	            let selectedSlotDetails = slotBatches.find(item=>item.slotKey == value);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:228:hardcoded variable:	            let selectedSlotDetailsClone = {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:232:hardcoded object:	            handleSlotChanges(`slot-${index}-${subject}`, value, selectedSlotDetailsClone);
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:236:hardcoded array:	          [name]: params ? (data ? data : false) : true,
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:241:hardcoded variable:	    const getSlotRow = (index) => {
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:243:hardcoded object:	            <Row key={index}>
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:244:hardcoded object:	                <SlotCard key={`slot-${index}`}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:245:hardcoded string:	                    style={{ marginTop: "1rem", cursor: "pointer", backgroundColor: "#d8f3fa" }}>
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:247:hardcoded object:	                        ref={slotFormRef}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:248:hardcoded object:	                        initialValues={slotFormValues}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:249:hardcoded object:	                        fields={slotForm({ handleSlotSelection, ...props, slotFormValues, slotFormValues })}
microservices-middleware/client/src/modules/quotationbeta/product/category/fresh/bht/differenttutor/slot.js:250:hardcoded number:	                        cols={3}
