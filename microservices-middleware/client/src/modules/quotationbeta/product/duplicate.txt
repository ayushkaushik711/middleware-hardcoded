microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:1:hardcoded object:import React, { useState, useRef } from 'react';
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:2:hardcoded object:import { get } from 'lodash';
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:3:hardcoded object:import { Row, Col, Label } from 'reactstrap';
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:4:hardcoded object:import { useRecoilState } from 'recoil';
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:5:hardcoded file path:import moment from 'moment';
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:6:hardcoded file path:import Notify from 'react-s-alert';
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:8:hardcoded file path:import callApi from 'api/callApi';
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:9:hardcoded object:import { quotationStudentDetails } from 'store/atom';
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:10:hardcoded file path:import FormBuilder from 'components/form/ReactstrapFormBuilder';
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:11:hardcoded object:import { RemoveVoucher, ApplyVoucher } from './styles';
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:13:hardcoded variable:const Voucher = (props, ref) => {
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:14:hardcoded object:    const { setLoading, setError, enableVoucher, setShowPrice } = props;
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:15:hardcoded variable:    const voucherRef = useRef();
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:16:hardcoded array:    const [voucher, setVoucher] = useState(null);
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:17:hardcoded array:    const [expiryDate, setExpiryDate] = useState()
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:18:hardcoded array:    const [voucherLogs, setVoucherLogs] = useState({})
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:19:hardcoded array:    const [quotationStudent, setQuotationStudent] = useRecoilState(quotationStudentDetails);
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:20:hardcoded array:    const [isVoucherApplied, setIsVoucherApplied] = useState(false);
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:22:hardcoded object:    const { salesEmail, quotationId, studentId } = quotationStudent;
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:23:hardcoded variable:    const search = window.location.search;
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:24:hardcoded variable:    const params = new URLSearchParams(search);
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:25:hardcoded string:    const studentMobile = params.get('studentMobile');
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:27:hardcoded variable:    const onChangeVoucher = (value, name, params) => {
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:31:hardcoded variable:    const onClickApplyVoucher = async () => {
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:35:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:42:hardcoded string:                url: '/api/quotation-beta/applyVoucher',
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:43:hardcoded string:                method: "POST",
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:44:hardcoded object:                body: { ...payload }
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:46:hardcoded string:                const res = get(response, 'data');
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:47:hardcoded object:                const { status, auditLogs, expiryDate, message: responseMessage, voucherDetails } = res;
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:68:hardcoded variable:    const onClickRemoveVoucher = async () => {
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:72:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:81:hardcoded string:                url: '/api/quotation-beta/removeVoucher',
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:82:hardcoded string:                method: "POST",
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:83:hardcoded object:                body: { ...payload }
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:85:hardcoded string:                const res = get(response, 'data');
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:86:hardcoded object:                const { status, message: responseMessage } = res;
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:90:hardcoded array:                    setVoucherLogs([])
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:93:hardcoded object:                        voucherDetails: {}
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:95:hardcoded string:                    setVoucher("")
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:111:hardcoded number:                <Col xs={1}  >
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:114:hardcoded number:                <Col xs={6}>
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:116:hardcoded object:                        ref={voucherRef}
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:118:hardcoded string:                            type: 'text',
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:119:hardcoded string:                            name: 'voucher',
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:128:hardcoded string:                        style={{ color: "red" }}
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:129:hardcoded number:                        cols={1}>
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:132:hardcoded string:                <Col xs={5} style={{ marginTop: "-16px" }}>
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:134:hardcoded object:                        disabled={enableVoucher && !isVoucherApplied ? false : true}
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:135:hardcoded object:                        onClick={() => { onClickApplyVoucher() }}
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:140:hardcoded object:                        disabled={enableVoucher && isVoucherApplied ? false : true}
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:141:hardcoded object:                        onClick={() => { onClickRemoveVoucher() }}
microservices-middleware/client/src/modules/quotationbeta/product/Voucher.js:146:hardcoded string:                {isVoucherApplied && <small>Voucher Expires on < b> {moment(expiryDate).format('YYYY-MM-DD')}. </b></small>}
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:1:hardcoded object:import React, { useEffect, useState } from 'react';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:2:hardcoded object:import { get } from 'lodash';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:3:hardcoded object:import { useRecoilState } from 'recoil';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:5:hardcoded object:import { salesProgramDetailState } from 'store/atom';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:7:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:9:hardcoded file path:import Btc from 'modules/quotationbeta/product/category/fresh/btc/shopCart';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:10:hardcoded file path:import Btlp from 'modules/quotationbeta/product/category/fresh/btlp/shopCart';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:11:hardcoded file path:import Bht from 'modules/quotationbeta/product/category/fresh/bht/shopCart';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:14:hardcoded variable:const ProductPageMapping = (props) => {
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:15:hardcoded object:    const { salesProgramId, quotationId, isPriviledgedUser } = props
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:16:hardcoded string:    const [salesProgramDetails, setSalesProgramDetails] = useState('');
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:17:hardcoded string:    const [salesProgramName, setSalesProgramName] = useState('');
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:18:hardcoded array:    const [loading, setLoading] = useState(false);
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:19:hardcoded array:    const [error, setError] = useState();
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:20:hardcoded array:    const [siblingDetails, setSiblingDetails] = useState({});
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:21:hardcoded array:    const [spDetailsFromRecoil, setSpDetailsInRecoilState] = useRecoilState(salesProgramDetailState)
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:27:hardcoded array:    }, []);
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:29:hardcoded variable:    const getSalesProgramDetails = async () => {
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:34:hardcoded variable:                const response = await CallApi({
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:35:hardcoded string:                    url: '/api/quotation-beta/getSalesProgramById',
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:36:hardcoded string:                    method: 'POST',
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:37:hardcoded object:                    body: { salesProgramId }
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:39:hardcoded string:                const details = get(response, 'data', {});
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:40:hardcoded string:                const programDetails = get(details, 'salesProgramDetails', {});
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:44:hardcoded string:                    spName: get(programDetails, 'name')
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:46:hardcoded string:                setSalesProgramName(get(programDetails, "name", ""))
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:55:hardcoded variable:    const getQuotationDetails = async () => {
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:60:hardcoded variable:                const response = await CallApi({
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:61:hardcoded string:                    url: '/api/quotation-beta/studentByQuotationId',
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:62:hardcoded string:                    method: 'POST',
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:63:hardcoded object:                    body: { quotationId }
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:65:hardcoded string:                const details = get(response, 'data.students.0', {});
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:77:hardcoded string:            {(salesProgramName === "htp_at_btc") && <Btc siblingDetails={siblingDetails} isPriviledgedUser={isPriviledgedUser}></Btc>}
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:78:hardcoded string:            {(salesProgramName === "byjus_home_tuition") && <Bht siblingDetails={siblingDetails} isPriviledgedUser={isPriviledgedUser}></Bht>}
microservices-middleware/client/src/modules/quotationbeta/product/ProductPageMapping.js:79:hardcoded string:            {(salesProgramName === "tablet_learning_program_byjus_aakash_byjus") && <Btlp></Btlp>}
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:1:hardcoded object:import React, { useState, useRef, useEffect } from 'react';
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:2:hardcoded object:import { isEmpty } from 'lodash';
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:3:hardcoded object:import { Button, Row, Col } from 'reactstrap';
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:4:hardcoded object:import { Tag } from 'antd';
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:5:hardcoded object:import { useRecoilState } from 'recoil';
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:7:hardcoded file path:import callApi from 'api/callApi';
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:8:hardcoded object:import { quotationStudentDetails } from 'store/atom';
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:9:hardcoded file path:import FormBuilder from 'components/form/ReactstrapFormBuilder';
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:10:hardcoded object:import { PriceDetailSection } from './styles'
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:12:hardcoded variable:const FetchPrice = (props, ref) => {
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:13:hardcoded object:    const { setLoading, setError, getProductDetails, resetPrice, showPrice, setShowPrice } = props;
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:14:hardcoded variable:    const finalPriceRef = useRef();
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:15:hardcoded array:    const [minPrice, setMinPrice] = useState(null);
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:16:hardcoded array:    const [maxPrice, setMaxPrice] = useState(null);
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:17:hardcoded array:    const [products, setProducts] = useState([]);
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:18:hardcoded array:    const [discountedPrice, setDiscountedPrice] = useState(null);
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:19:hardcoded array:    const [finalPrice, setFinalPrice] = useState(null);
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:20:hardcoded array:    const [discountDetails, setDiscountDetails] = useState({});
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:21:hardcoded array:    const [quotationStudent, setQuotationStudent] = useRecoilState(quotationStudentDetails);
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:25:hardcoded array:    }, [resetPrice, showPrice]);
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:27:hardcoded variable:    const callPriceReset = () => {
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:30:hardcoded array:        setProducts([])
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:35:hardcoded object:            product: {}
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:39:hardcoded variable:    const onClickFetchPrices = async () => {
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:44:hardcoded variable:        const details = getProductDetails && await getProductDetails();
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:45:hardcoded object:        const { url, payload, errormsg } = details
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:53:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:54:hardcoded object:                body: { ...payload }
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:56:hardcoded object:                const { data } = response;
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:57:hardcoded array:                const { minPrice, maxPrice, discountedPrice, products = [], discountDetails = {} } = data
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:64:hardcoded object:                    product: { ...details, ...data }
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:75:hardcoded variable:    const onChangeFinalPrice = (value, name, params) => {
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:76:hardcoded object:        const { product } = quotationStudent
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:80:hardcoded object:            product: { ...product, finalPrice: value }
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:84:hardcoded variable:    const discountDetailsComp = () => {
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:85:hardcoded object:        let { offers, totalDiscountedPrice, offerId } = discountDetails;
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:86:hardcoded object:        let { offerCalculationType, offerValue } = offers || {};
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:90:hardcoded string:            <div className='text-purple m-1' style={{ fontWeight: '500', color: '#a353ef' }}>
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:91:hardcoded string:                {`Offer - ${offerId} : ${totalDiscountedPrice}${offerCalculationType === "percentage" ? '%' : '/-'} is applicable`}
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:98:hardcoded string:                <Col xs={6} style={{ paddingInline: "1rem" }}>
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:99:hardcoded object:                    {discountDetails && discountDetailsComp()}
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:100:hardcoded string:                    <Button style={{ marginTop: '1rem', backgroundColor: "green" }}
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:101:hardcoded object:                        onClick={() => { onClickFetchPrices() }}>
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:104:hardcoded object:                    <p>{showPrice}</p>
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:107:hardcoded string:                            {minPrice && <Tag color="purple">Maximum Price : {maxPrice}</Tag>}
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:108:hardcoded string:                            {minPrice && <Tag color="purple">Minimum price : {minPrice}</Tag>}
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:109:hardcoded string:                            {discountedPrice && <Tag color="purple">Discounted Price : {discountedPrice}</Tag>}
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:113:hardcoded object:                        ref={finalPriceRef}
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:114:hardcoded object:                        initialValues={finalPrice}
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:116:hardcoded string:                            type: 'number',
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:117:hardcoded string:                            name: 'finalPrice',
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:118:hardcoded string:                            label: 'Final Price',
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:119:hardcoded number:                            min: minPrice || 0,
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:124:hardcoded number:                        cols={4}>
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:127:hardcoded string:                <Col xs={6} style={{ marginTop: "1rem" }}>
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:129:hardcoded object:                        {!isEmpty(products) && <strong>Products : </strong>}
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:133:hardcoded object:                                    const { skuName } = product;
microservices-middleware/client/src/modules/quotationbeta/product/FetchPrice.js:134:hardcoded object:                                    return (<li key={index}>{skuName} </li>);
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:1:hardcoded file path:import React from 'react';
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:2:hardcoded string:import styled from "@emotion/styled";
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:3:hardcoded object:import { Button, Row, Col, Input, Card } from 'reactstrap';
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:5:hardcoded variable:export const ProductPageHeader = styled.header`
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:7:hardcoded number:    border-radius: 1rem;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:9:hardcoded number:    box-shadow: 0 8px 16px 0 rgb(0 0 0 / 16%);
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:11:hardcoded number:    padding: 1.5rem;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:15:hardcoded variable:export const ProductPageSection = styled.section`
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:17:hardcoded number:    border-radius: 1rem;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:19:hardcoded number:    box-shadow: 0 8px 16px 0 rgb(0 0 0 / 16%);
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:20:hardcoded number:    padding: 1.5rem;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:21:hardcoded number:    margin-bottom: 1rem
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:24:hardcoded variable:export const ProductPageFooter = styled.footer`
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:25:hardcoded number:    padding: 1.5rem;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:27:hardcoded variable:export const Divider = styled.hr`
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:29:hardcoded variable:export const PriceDetailSection = styled.div`
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:30:hardcoded number:    margin-top: .5rem;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:31:hardcoded number:    margin-bottom: 1rem;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:34:hardcoded variable:export const ApplyVoucher = styled(Button)`
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:35:hardcoded number:    background-color: #629ddb;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:38:hardcoded variable:export const RemoveVoucher = styled(Button)`
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:39:hardcoded number:    margin: 1rem;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:43:hardcoded variable:export const SubHeader = styled.p`
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:44:hardcoded number:    font-weight: 800;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:45:hardcoded number:    margin-top: 15px;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:48:hardcoded variable:export const TutorSubHeader = styled.p`
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:49:hardcoded number:    font-weight: 800;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:50:hardcoded number:    margin-top: 10px;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:53:hardcoded variable:export const TutorDiv = styled.div`
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:54:hardcoded number:    margin-top: 23px;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:55:hardcoded number:    width: 100%;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:57:hardcoded number:    padding: 10px;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:58:hardcoded number:    background: #cdd5d8;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:61:hardcoded variable:export const SlotInput = styled(Input)`
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:62:hardcoded number:    width: 212px;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:63:hardcoded number:    font-weight: 700;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:64:hardcoded number:    margin-top: 36px;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:66:hardcoded variable:export const SlotCard = styled(Card)`
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:69:hardcoded number:    width: 80%;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:70:hardcoded number:    padding: 10px;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:73:hardcoded number:export const SlotHeader = styled.h5`   
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:74:hardcoded number:    margin-top: 14px;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:77:hardcoded variable:export const SlotTiming = styled(Input)`
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:78:hardcoded number:    width: 100px;
microservices-middleware/client/src/modules/quotationbeta/product/styles.js:79:hardcoded number:    margin-left: 33px;
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:1:hardcoded object:import React , {useState} from 'react';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:2:hardcoded object:import { Container } from 'reactstrap';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:3:hardcoded object:import { useRecoilState } from 'recoil';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:4:hardcoded object:import { get } from 'lodash';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:6:hardcoded object:import { quotationStudentDetails } from 'store/atom';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:8:hardcoded file path:import LoadingWrapper from 'components/LoadingWrapper';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:9:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:11:hardcoded file path:import QuotationNavbar from '../components/QuotationNavbar';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:12:hardcoded object:import { ProductPageHeader, ProductPageSection, ProductPageFooter } from './styles';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:13:hardcoded file path:import ProductProceed from './ProductPageFooter';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:14:hardcoded file path:import ProductPageMapping from './ProductPageMapping';
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:16:hardcoded object:const { leadquaredRelatedPermissions } = require('../../../utility/screenPermission');
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:18:hardcoded variable:const ProductPage = (props) => {
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:19:hardcoded object:    const { history, authDetails = {} } = props;
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:20:hardcoded string:    const { user = '' } = authDetails || {};
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:21:hardcoded string:    const userPermissions = get(user, 'permissions', []);
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:22:hardcoded array:    const [loading, setLoading] = useState(false);
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:23:hardcoded array:    const [error, setError] = useState(null);
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:24:hardcoded array:    const [quotationStudent, setQuotationStudent] = useRecoilState(quotationStudentDetails);
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:25:hardcoded object:    const {salesProgramId, quotationId, studentId, leadId, customerId, studentName} = quotationStudent
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:26:hardcoded variable:    const isPriviledgedUser = userPermissions.includes(leadquaredRelatedPermissions.allownMultipleOrderOnSameProspectId);
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:28:hardcoded object:    const updateLoading = (value) => { setLoading(value) }
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:29:hardcoded object:    const updateError = (value) => { setError(value) }
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:31:hardcoded variable:    const onClickQuotation = () => {
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:32:hardcoded string:        const url = `/quotation-beta${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:36:hardcoded variable:    const onClickStudent = () => {
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:37:hardcoded string:        const url = `/quotation-beta/home${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:42:hardcoded string:        <LoadingWrapper loading={loading} message={"loading"}>
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:43:hardcoded object:            <ErrorWrapper error={error} message={error} />
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:46:hardcoded string:                    label={"Student"}
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:47:hardcoded object:                    history={history}
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:48:hardcoded object:                    quotationId={quotationId}
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:49:hardcoded object:                    studentName={studentName}
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:52:hardcoded string:                <ProductPageSection style={{backgroundColor: "#f0f5f5", marginBlock: "1rem"}}> 
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:53:hardcoded object:                    <ProductPageMapping salesProgramId={salesProgramId} quotationId={quotationId} isPriviledgedUser={isPriviledgedUser}></ProductPageMapping>
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:57:hardcoded object:                        history={history}
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:58:hardcoded object:                        setLoading={updateLoading}
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:59:hardcoded object:                        setError={updateError}
microservices-middleware/client/src/modules/quotationbeta/product/ProductPage.js:60:hardcoded object:                        isPriviledgedUser={isPriviledgedUser}
