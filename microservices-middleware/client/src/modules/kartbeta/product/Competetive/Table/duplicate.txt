microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:1:hardcoded object:import React, { useState, useEffect } from "react";
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:2:hardcoded object:import { Table } from "reactstrap";
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:3:hardcoded object:import { isEmpty, get, sortBy, range } from "lodash";
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:5:hardcoded file path:import CallApi from "api/callApi";
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:7:hardcoded file path:import ProductRow from "../Row";
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:10:hardcoded object:  const { attributeDetails, masterDetails } = props;
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:11:hardcoded array:  const [loading, setLoading] = useState(false);
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:12:hardcoded array:  const [error, setError] = useState(null);
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:13:hardcoded array:  const [showAllRows, setShowAllRows] = useState(false);
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:14:hardcoded array:  const [salesPrograms, setSalesPrograms] = useState([]);
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:15:hardcoded string:  const courseList = get(masterDetails, "courses", []);
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:16:hardcoded string:  const subCourseList = get(masterDetails, "subCourses", []);
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:17:hardcoded object:  const {course, subCourse } = attributeDetails;
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:18:hardcoded variable:  const courseDetails = courseList.find((item)=>item.value==course)
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:19:hardcoded variable:  const subCourseDetails = subCourseList.find((item)=>item.value==subCourse)
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:28:hardcoded array:  }, [attributeDetails]);
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:30:hardcoded variable:  const getSalesProgram = async()=>{
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:33:hardcoded variable:          const response = await CallApi({
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:34:hardcoded string:              url: '/api/kart-beta/salesprogram/list',
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:35:hardcoded string:              method: 'GET'
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:37:hardcoded string:          const details = get(response, 'data', {});
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:38:hardcoded string:          const programList = get(details, 'salesPrograms', []);      
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:50:hardcoded string:        <tr style={{ background: "#FFFFFF", borderBottom: "1px solid #DFDFDF"}}>
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:51:hardcoded string:          <th style={{ border: "none"}}></th>
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:52:hardcoded string:          <th style={{ border: "none"}}>Offline</th>
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:53:hardcoded string:          <th style={{ border: "none"}}>Online</th>
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:54:hardcoded string:          <th style={{ border: "none"}}>CRP</th>
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:63:hardcoded object:          masterDetails={masterDetails}
microservices-middleware/client/src/modules/kartbeta/product/Competetive/Table/index.js:64:hardcoded object:          salesPrograms={salesPrograms}
