microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:11:hardcoded object:	  const { attributeDetails, masterDetails } = props;
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:12:hardcoded array:	  const [loading, setLoading] = useState(false);
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:13:hardcoded array:	  const [error, setError] = useState(null);
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:14:hardcoded array:	  const [showAllRows, setShowAllRows] = useState(false);
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:15:hardcoded array:	  const [formValues, setFormValues] = useState({});
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:16:hardcoded array:	  const [salesPrograms, setSalesPrograms] = useState([]);
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:18:hardcoded string:	  const gradeList = get(masterDetails, "grades", []);
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:19:hardcoded object:	  const {initialGrade, finalGrade, board } = attributeDetails;
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:20:hardcoded variable:	  const initialGradeItem = gradeList.find((item)=>item.value==initialGrade)
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:21:hardcoded variable:	  const finalGradeItem = gradeList.find((item)=>item.value==finalGrade)
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:23:hardcoded string:	  const start = parseInt(get(initialGradeItem, "label"));
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:24:hardcoded string:	  const end = parseInt(get(finalGradeItem, "label"))
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:25:hardcoded number:	  const selectGrades = gradeList.filter((item)=> range(start, end+1).includes(parseInt(item.label)))
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:27:hardcoded variable:	  const grades = sortBy(selectGrades, 
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:28:hardcoded array:	    [function(item) { return parseInt(item.label) }]);
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:36:hardcoded array:	  }, [attributeDetails]);
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:38:hardcoded variable:	  const getSalesProgram = async()=>{
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:41:hardcoded variable:	          const response = await CallApi({
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:42:hardcoded string:	              url: '/api/kart-beta/salesprogram/list',
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:43:hardcoded string:	              method: 'GET'
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:45:hardcoded string:	          const details = get(response, 'data', {});
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:46:hardcoded string:	          const programList = get(details, 'salesPrograms', []);      
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:55:hardcoded variable:	  const handleOnClick = (details) => {
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:65:hardcoded string:	        <tr style={{ background: "#FFFFFF", borderBottom: "1px solid #DFDFDF"}}>
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:66:hardcoded string:	          <th style={{ border: "none"}}></th>
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:67:hardcoded string:	          <th style={{ border: "none"}}>Offline</th>
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:68:hardcoded string:	          <th style={{ border: "none"}}>Online</th>
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:69:hardcoded string:	          <th style={{ border: "none"}}>CRP</th>
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:75:hardcoded object:	            initialGrade={initialGrade}
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:76:hardcoded object:	            finalGrade={finalGrade}
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:77:hardcoded object:	            handleOnClick={handleOnClick}
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:78:hardcoded object:	            masterDetails={masterDetails}
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:79:hardcoded object:	            salesPrograms={salesPrograms}
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:86:hardcoded object:	                gradeDetails={item}
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:87:hardcoded object:	                key={index}
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:88:hardcoded object:	                selectedPrograms={formValues}
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:89:hardcoded object:	                masterDetails={masterDetails}
microservices-middleware/client/src/modules/kartbeta/product/K12/Table/index.js:90:hardcoded object:	                salesPrograms={salesPrograms}
