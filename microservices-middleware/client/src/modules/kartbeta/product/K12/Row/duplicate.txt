microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:1:hardcoded object:import React, { useState, useEffect } from "react";
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:2:hardcoded object:import { Input } from "reactstrap";
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:3:hardcoded object:import { get, startCase, upperCase, isEmpty } from "lodash";
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:8:hardcoded string:    selectedPrograms = { online: "", offline: "", crp: "" },
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:9:hardcoded object:    masterDetails={},
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:10:hardcoded array:    salesPrograms=[]
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:12:hardcoded object:  const {label: grade, value: gradeId} = gradeDetails;
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:13:hardcoded array:  const [formValues, setFormValues] = useState({
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:18:hardcoded string:    const onlineProgram = salesPrograms.filter((item)=>item.mol=='online');
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:19:hardcoded string:    const offlineProgram = salesPrograms.filter((item)=>item.mol=='offline');
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:22:hardcoded array:}, [salesPrograms])
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:24:hardcoded string:  const disableOffline = get(selectedPrograms, "offline") ? true : false;
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:25:hardcoded string:  const disableOnline = get(selectedPrograms, "online") ? true : false;
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:26:hardcoded array:  const [disabledOnline, setDisabledOnline] = useState(disableOnline);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:27:hardcoded array:  const [disabledOffline, setDisabledOffline] = useState(disableOffline);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:29:hardcoded string:  const crpProgram = salesPrograms.filter((item)=>item.mol=='crp');
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:30:hardcoded array:  const [onlineList, setOnlineList] = useState([]);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:31:hardcoded array:  const [offlineList, setOfflineList] = useState([]);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:33:hardcoded variable:  const handleOnChange = async (event) => {
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:34:hardcoded variable:    const name = event.target.name;
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:35:hardcoded variable:    const value = event.target.value;
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:36:hardcoded string:    if (name === "online") {
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:37:hardcoded variable:      const selectedProgram = salesPrograms.find((item)=>item.spId==value);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:38:hardcoded array:      const programList = get(selectedProgram, `spBundle`, []);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:39:hardcoded string:      const offlineProg = programList.find((item) => get(item, "secondarySalesProgram.mol") === "offline");
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:42:hardcoded string:        offline: get(offlineProg, "secondarySalesProgram.spId", ""),
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:43:hardcoded array:        [name]: value
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:46:hardcoded string:    else if (name === "crp") {
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:47:hardcoded variable:      const selectedProgram = salesPrograms.find((item)=>item.spId==value);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:48:hardcoded array:      const programList = get(selectedProgram, `spBundle`, []);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:49:hardcoded string:      const offlineProg = programList.find((item) => get(item, "secondarySalesProgram.mol") === "offline");
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:50:hardcoded string:      const onlineProg = programList.find((item) => get(item, "secondarySalesProgram.mol") === "online");
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:56:hardcoded string:        offline: get(offlineProg, "secondarySalesProgram.spId", ""),
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:57:hardcoded string:        online: get(onlineProg, "secondarySalesProgram.spId", ""),
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:58:hardcoded array:        [name]: value
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:62:hardcoded array:        [name]: value
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:68:hardcoded string:    <tr style={{ background: "#FFFFFF", border: "none"}}>
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:69:hardcoded string:      <td style={{ border: "none"}}>Grade <span style={{color: "#EA7648"}}>{grade}</span></td>
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:70:hardcoded string:      <td style={{ border: "none"}}>
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:72:hardcoded string:          type="select"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:73:hardcoded string:          aria-label="Default select example"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:74:hardcoded object:          onChange={handleOnChange}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:75:hardcoded string:          name="offline"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:76:hardcoded string:          value={get(formValues, "offline")}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:77:hardcoded object:          disabled={disabledOffline}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:79:hardcoded string:            background: "#ECE9FC",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:80:hardcoded string:            fontFamily: "unset",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:81:hardcoded string:            fontStyle: "normal",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:82:hardcoded string:            fontWeight: "500",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:83:hardcoded string:            fontSize: "14px",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:84:hardcoded string:            lineHeight: "21px",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:85:hardcoded string:            color: "#7644D4",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:86:hardcoded string:            width: "90%"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:91:hardcoded object:            return <option value={item.spId}>{upperCase(item.name)}</option>;
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:95:hardcoded string:      <td style={{ border: "none"}}>
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:97:hardcoded string:          type="select"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:98:hardcoded string:          aria-label="Default select example"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:99:hardcoded object:          onChange={handleOnChange}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:100:hardcoded string:          name="online"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:101:hardcoded string:          value={get(formValues, "online")}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:102:hardcoded object:          disabled={disabledOnline}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:104:hardcoded string:            background: "#ECE9FC",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:105:hardcoded string:            fontFamily: "unset",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:106:hardcoded string:            fontStyle: "normal",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:107:hardcoded string:            fontWeight: "500",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:108:hardcoded string:            fontSize: "14px",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:109:hardcoded string:            lineHeight: "21px",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:110:hardcoded string:            color: "#7644D4",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:111:hardcoded string:            width: "90%"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:116:hardcoded object:            return <option value={item.spId}>{startCase(item.name)}</option>;
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:120:hardcoded string:      <td style={{ border: "none"}}>
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:122:hardcoded string:          type="select"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:123:hardcoded string:          aria-label="Default select example"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:124:hardcoded object:          onChange={handleOnChange}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:125:hardcoded string:          value={get(formValues, "crp")}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:126:hardcoded string:          name="crp"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:128:hardcoded string:            background: "#ECE9FC",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:129:hardcoded string:            fontFamily: "unset",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:130:hardcoded string:            fontStyle: "normal",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:131:hardcoded string:            fontWeight: "500",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:132:hardcoded string:            fontSize: "14px",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:133:hardcoded string:            lineHeight: "21px",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:134:hardcoded string:            color: "#7644D4",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:135:hardcoded string:            width: "90%"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/index.js:140:hardcoded object:            return <option value={item.spId}>{upperCase(item.name)}</option>;
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:1:hardcoded object:import React, { useEffect, useState } from "react";
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:2:hardcoded object:import { Input, Button } from "reactstrap";
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:3:hardcoded object:import { get, startCase, upperCase, isEmpty } from "lodash";
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:6:hardcoded object:  const { initialGrade, finalGrade, handleOnClick, masterDetails, salesPrograms } = props;
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:7:hardcoded array:  const [formValues, setFormValues] = useState({
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:8:hardcoded string:    online: "",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:9:hardcoded string:    offline: "",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:10:hardcoded string:    crp: ""
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:12:hardcoded array:  const [disabledOnline, setDisabledOnline] = useState(false);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:13:hardcoded array:  const [disabledOffline, setDisabledOffline] = useState(false);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:15:hardcoded string:  const crpProgram = salesPrograms.filter((item)=>item.mol=='crp');
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:16:hardcoded array:  const [onlineList, setOnlineList] = useState([]);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:17:hardcoded array:  const [offlineList, setOfflineList] = useState([]);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:18:hardcoded array:  const {grades = [], boards = [], courses = []} = masterDetails || {};
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:19:hardcoded variable:  const initialGradeItem = grades.find((item)=>item.value==initialGrade)
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:20:hardcoded variable:  const finalGradeItem = grades.find((item)=>item.value==finalGrade)
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:25:hardcoded string:        online: "",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:26:hardcoded string:        offline: "",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:27:hardcoded string:        crp: ""
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:32:hardcoded array:  }, [initialGrade]);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:35:hardcoded string:      const onlineProgram = salesPrograms.filter((item)=>item.mol=='online');
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:36:hardcoded string:      const offlineProgram = salesPrograms.filter((item)=>item.mol=='offline');
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:39:hardcoded array:  }, [salesPrograms])
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:41:hardcoded variable:  const handleOnChange = async (event) => {
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:42:hardcoded variable:    const name = event.target.name;
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:43:hardcoded variable:    const value = event.target.value;
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:44:hardcoded string:    if (name === "online") {
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:45:hardcoded variable:      const selectedProgram = salesPrograms.find((item)=>item.spId==value);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:46:hardcoded array:      const programList = get(selectedProgram, `spBundle`, []);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:47:hardcoded string:      const offlineProg = programList.find((item) => get(item, "secondarySalesProgram.mol") === "offline");
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:52:hardcoded string:        offline: get(offlineProg, "secondarySalesProgram.spId", ""),
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:53:hardcoded array:        [name]: value
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:56:hardcoded string:    else if (name === "crp") {
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:57:hardcoded variable:      const selectedProgram = salesPrograms.find((item)=>item.spId==value);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:58:hardcoded array:      const programList = get(selectedProgram, `spBundle`, []);
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:59:hardcoded string:      const offlineProg = programList.find((item) => get(item, "secondarySalesProgram.mol") === "offline");
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:60:hardcoded string:      const onlineProg = programList.find((item) => get(item, "secondarySalesProgram.mol") === "online");
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:66:hardcoded string:        offline: get(offlineProg, "secondarySalesProgram.spId", ""),
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:67:hardcoded string:        online: get(onlineProg, "secondarySalesProgram.spId", ""),
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:68:hardcoded array:        [name]: value
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:72:hardcoded array:        [name]: value
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:77:hardcoded variable:  const onClickExpand = () => {
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:83:hardcoded string:      <tr style={{ background: "#FFFFFF", border: "none"}}>
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:84:hardcoded string:        <td style={{ border: "none"}}>
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:86:hardcoded string:            Class <span style={{color: "#EA7648"}}>{get(initialGradeItem, "label")} - {get(finalGradeItem, "label")}</span>
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:89:hardcoded string:            variant="primary"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:90:hardcoded string:            type="submit"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:91:hardcoded string:            style={{ marginTop: "8%", marginRight: "50%" }}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:92:hardcoded object:            onClick={onClickExpand}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:97:hardcoded string:        <td style={{ border: "none"}}>
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:99:hardcoded string:            type="select"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:100:hardcoded string:            aria-label="Default select example"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:101:hardcoded object:            onChange={handleOnChange}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:102:hardcoded string:            name="offline"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:103:hardcoded string:            value={get(formValues, "offline")}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:104:hardcoded object:            disabled={disabledOffline}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:106:hardcoded string:              background: "#ECE9FC",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:107:hardcoded string:              fontFamily: "unset",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:108:hardcoded string:              fontStyle: "normal",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:109:hardcoded string:              fontWeight: "500",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:110:hardcoded string:              fontSize: "14px",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:111:hardcoded string:              lineHeight: "21px",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:112:hardcoded string:              color: "#7644D4",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:113:hardcoded string:              width: "90%"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:118:hardcoded object:              return <option value={item.spId}>{upperCase(item.name)}</option>;
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:122:hardcoded string:        <td style={{ border: "none"}}>
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:124:hardcoded string:            type="select"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:125:hardcoded string:            aria-label="Default select example"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:126:hardcoded object:            onChange={handleOnChange}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:127:hardcoded string:            name="online"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:128:hardcoded string:            value={get(formValues, "online")}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:129:hardcoded object:            disabled={disabledOnline}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:131:hardcoded string:              background: "#ECE9FC",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:132:hardcoded string:              fontFamily: "unset",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:133:hardcoded string:              fontStyle: "normal",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:134:hardcoded string:              fontWeight: "500",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:135:hardcoded string:              fontSize: "14px",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:136:hardcoded string:              lineHeight: "21px",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:137:hardcoded string:              color: "#7644D4",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:138:hardcoded string:              width: "90%"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:143:hardcoded object:              return <option value={item.spId}>{startCase(item.name)}</option>;
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:147:hardcoded string:        <td style={{ border: "none"}}>
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:149:hardcoded string:            type="select"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:150:hardcoded string:            aria-label="Default select example"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:151:hardcoded object:            onChange={handleOnChange}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:152:hardcoded string:            name="crp"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:153:hardcoded string:            value={get(formValues, "crp")}
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:155:hardcoded string:              background: "#ECE9FC",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:156:hardcoded string:              fontFamily: "unset",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:157:hardcoded string:              fontStyle: "normal",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:158:hardcoded string:              fontWeight: "500",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:159:hardcoded string:              fontSize: "14px",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:160:hardcoded string:              lineHeight: "21px",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:161:hardcoded string:              color: "#7644D4",
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:162:hardcoded string:              width: "90%"
microservices-middleware/client/src/modules/kartbeta/product/K12/Row/Combo.js:167:hardcoded object:              return <option value={item.spId}>{upperCase(item.name)}</option>;
