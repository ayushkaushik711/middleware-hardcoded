microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:1:hardcoded object:import React, { Component } from 'react';
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:3:hardcoded object:import { get } from 'lodash';
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:5:hardcoded object:import { Button } from 'reactstrap';
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:6:hardcoded object:import { Layout, Steps, Icon } from 'antd';
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:8:hardcoded file path:import LoadingWrapper from '../../../components/LoadingWrapper';
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:9:hardcoded file path:import ErrorWrapper from '../../../components/ErrorWrapper';
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:10:hardcoded file path:import InfoWrapper from '../../../components/InfoWrapper';
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:12:hardcoded string:import './style.scss';
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:14:hardcoded object:const { Header, Footer, Content } = Layout;
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:15:hardcoded object:const { Step } = Steps;
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:17:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:18:hardcoded string:    user: get(state, 'auth.details.user'),
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:19:hardcoded string:    authDetails: get(state, 'auth.details', {}),
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:20:hardcoded string:    leadDetails: get(state, 'auth.leadDetails', {}),
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:23:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:37:hardcoded string:            case 'sales':
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:39:hardcoded string:                    sales: "process",
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:40:hardcoded string:                    product: "wait"
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:42:hardcoded string:            case 'product':
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:44:hardcoded string:                    sales: "finish",
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:45:hardcoded string:                    product: "process"
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:47:hardcoded string:            case 'address':
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:49:hardcoded string:                    sales: "finish",
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:50:hardcoded string:                    product: "finish",
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:51:hardcoded string:                    address: "process"
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:54:hardcoded object:                return {};
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:59:hardcoded string:        //return status === "process" ? "loading" : null;
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:64:hardcoded variable:        let prevBtn = false;
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:65:hardcoded variable:        let nextBtn = false;
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:67:hardcoded string:        if (step === "sales") {
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:70:hardcoded string:        else if (step === "product") {
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:74:hardcoded string:        else if (step === "address") {
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:78:hardcoded object:        this.setState({ prevBtn, nextBtn });
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:82:hardcoded object:        const { step } = this.props;
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:83:hardcoded object:        const stepStatusMap = this.getStepStatusMap(step) || {};
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:86:hardcoded string:            <Steps percent={60} style={{ margin: '1%', paddingRight: '2%' }}>
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:87:hardcoded string:                <Step title="Details"
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:88:hardcoded string:                    status={stepStatusMap["sales"]}
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:89:hardcoded string:                    description="Sales And Customer Details."
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:91:hardcoded string:                <Step title="Product"
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:92:hardcoded string:                    status={stepStatusMap["product"]}
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:93:hardcoded string:                    description="Product And Scholarship Details." />
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:94:hardcoded string:                <Step title="Address"
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:95:hardcoded string:                    status={stepStatusMap["address"]}
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:96:hardcoded string:                    description="Customer Address Details." />
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:102:hardcoded object:        const { step, prevBtnDisable = false, nextBtnDisable = false, loading, error } = this.props;
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:105:hardcoded object:            this.setState({ step, prevBtnDisable, nextBtnDisable });
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:125:hardcoded object:        const { step, prevBtnDisable = false, nextBtnDisable = false } = this.props;
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:127:hardcoded object:        this.setState({ step, prevBtnDisable, nextBtnDisable });
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:132:hardcoded object:        const { prevBtn, nextBtn, prevBtnDisable, nextBtnDisable, loading, error } = this.state;
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:135:hardcoded string:            prevBtnText = "Prev", nextBtnText = "Next",
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:139:hardcoded object:            <LoadingWrapper loading={loading} message={loadMessage}>
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:141:hardcoded string:                    <Header style={{ height: 'auto', background: '#fff', margin: '3%' }}>
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:142:hardcoded object:                        {this.buildSteps()}
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:145:hardcoded object:                        {error && <ErrorWrapper error={error} message={errorMessage} />}
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:146:hardcoded object:                        {children}
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:150:hardcoded object:                            onClick={() => { onClickPrevBtn && onClickPrevBtn() }}
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:151:hardcoded object:                            disabled={prevBtnDisable}
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:152:hardcoded string:                            className="prev-btn"
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:153:hardcoded string:                            color="info">{prevBtnText}</Button>
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:156:hardcoded object:                            onClick={() => { onClickNextBtn && onClickNextBtn() }}
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:157:hardcoded object:                            disabled={nextBtnDisable}
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:158:hardcoded string:                            className="next-btn"
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:159:hardcoded string:                            color="info">{nextBtnText}</Button>
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:161:hardcoded string:                        <div style={{ padding: "20px" }}></div>
microservices-middleware/client/src/modules/quotation/applayout/QuotationAppLayout.js:169:hardcoded object:export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(QuotationAppLayout);
