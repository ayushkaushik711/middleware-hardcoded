microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:3:hardcoded variable:	const gradients = {
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:4:hardcoded string:	    blue: "linear-gradient(to right, #63A4FF, #63A4FF)",
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:5:hardcoded string:	    yellow: "linear-gradient(to right, #e5be19, #e5be19)",
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:6:hardcoded string:	    green: "linear-gradient(to right, #00B712, #00B712)",
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:7:hardcoded string:	    grey: "linear-gradient(to right, #2F4353, #2F4353)",
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:8:hardcoded string:	    default: "linear-gradient(to right, #ff5263, #ff5263)",
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:11:hardcoded variable:	export const badgeControl = (status) => {
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:12:hardcoded string:	    let badgeColor = "";
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:14:hardcoded string:	    if (status === "agent_details_saved") {
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:17:hardcoded string:	    if (status === "customer_details_saved") {
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:20:hardcoded string:	    if (status === "product_saved") {
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:23:hardcoded string:	    if (status === "address_details_saved") {
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:26:hardcoded string:	    if (status === "pov_pending") {
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:29:hardcoded string:	    if (status === "otp_verification_sent") {
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:32:hardcoded string:	    if (status === "otp_verified") {
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:35:hardcoded string:	    if (status === "otp_verification_pending") {
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:42:hardcoded variable:	export const STATUS = {
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:43:hardcoded string:	    CREATED: "created",
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:44:hardcoded string:	    SCHOOL_SAVED: "school_saved",
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:45:hardcoded string:	    ADDRESS_SAVED: "address_saved",
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:46:hardcoded string:	    PRODUCT_SAVED: "product_saved",
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:47:hardcoded string:	    PAYMENT_SAVED: "payment_saved",
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:48:hardcoded string:	    REVIEW_PENDING: "review_pending",
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:49:hardcoded string:	    APPROVED: "approved",
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:50:hardcoded string:	    REJECTED: "rejected"
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:53:hardcoded variable:	export const getStage = (status) => {
microservices-middleware/client/src/modules/quotationschool/components/QuotationNavbar/utils/BadgeControl.js:54:hardcoded string:	    const stage = Object.keys(STATUS).find((item)=>STATUS[item].includes(status)) || "0";
