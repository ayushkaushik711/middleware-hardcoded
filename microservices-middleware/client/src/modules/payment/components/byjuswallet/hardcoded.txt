microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:10:hardcoded variable:	const WalletCash = forwardRef((props, ref) => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:11:hardcoded object:	    const { refreshComp, getAllFilledPayment } = props;
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:13:hardcoded string:	    const [phone, setPhone] = useState('');
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:14:hardcoded string:	    const [walletDetails, setWalletDetails] = useState('');
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:15:hardcoded array:	    const [walletPayment, setWalletPayment] = useState(null);
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:17:hardcoded string:	    const mobileNoFromState = useSelector(state => get(state, 'auth.leadDetails.studentMobile'));
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:19:hardcoded string:	    if (mobileNoFromState !== '' && phone === '') {
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:20:hardcoded string:	        const getOnlyMobileNo = mobileNoFromState.split('-')[1];
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:26:hardcoded array:	    }, [refreshComp])
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:30:hardcoded string:	            const walletCashUsing = get(walletPayment, 'amount', 0);
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:31:hardcoded string:	            if (walletCashUsing > get(walletDetails, 'cashBalance', 0)) {
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:32:hardcoded string:	                message.error('You have insufficient balance in your wallet');
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:39:hardcoded variable:	    const getByjuWalletDetails = async () => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:41:hardcoded string:	            url: '/api/payment/byjuswallet/walletCashDetails',
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:42:hardcoded string:	            method: 'POST',
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:47:hardcoded object:	            const { data } = res;
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:54:hardcoded variable:	    const handleChange = (value, name) => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:56:hardcoded string:	            const customerId = get(walletDetails, 'customerId', '');
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:66:hardcoded variable:	    const byjusWalletCash = () => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:67:hardcoded variable:	        const fields = [
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:69:hardcoded string:	                type: 'text',
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:70:hardcoded string:	                name: 'byjusWalletCash',
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:75:hardcoded string:	                type: 'number',
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:76:hardcoded string:	                name: 'walletCashAmount',
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:77:hardcoded string:	                label: 'Amount',
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:79:hardcoded string:	                message: 'Please enter amount',
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:80:hardcoded number:	                min: 0
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:83:hardcoded variable:	        const formItemLayout = {
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:85:hardcoded number:	                xs: { span: 4 },
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:86:hardcoded number:	                sm: { span: 4 },
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:89:hardcoded number:	                xs: { span: 12 },
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:90:hardcoded number:	                sm: { span: 12 },
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:96:hardcoded object:	                    fields={fields}
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:97:hardcoded number:	                    cols={3}
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:98:hardcoded object:	                    formItemLayout={formItemLayout}
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletCash.js:100:hardcoded string:	                        byjusWalletCash: `Byju's Wallet Cash (${walletDetails ? currencyFormatter(walletDetails.cashBalance, 'INR') : currencyFormatter(0, 'INR')})`
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:4:hardcoded variable:	export const checkIfAllGiftCardPaymentAllowed = ( walletDetails, emiDetails, finalPrice, success ) => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:5:hardcoded variable:	    let checkForNonEmi = true;
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:7:hardcoded number:	    const walletItemsAmount = walletDetails.reduce((oldVal, ele) => oldVal + parseInt(ele.amount), 0)
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:8:hardcoded string:	    const emiAmount = get(emiDetails, '0.amount', 0);
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:12:hardcoded number:	        whether any gift card is not required while punching order like order is 16000 and gift cards added are 16000 and 1000 ,
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:13:hardcoded number:	        then this 1000 gift is extra, we can't allow this.
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:14:hardcoded number:	        or if everything is fine and suppose order is 16000 and gift cards are 10000 and 8000,
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:15:hardcoded number:	        then we will cut 2000 from one of these gift cards and send it as 6000 + 10000 or 8000n + 8000 to cxms, and get 2000 as refund in wallet
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:19:hardcoded string:	        if(ele.provider === 'BYJUS_GIFT_CARD' && parseInt(ele.amount) <= walletItemsAmount - finalPrice){
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:20:hardcoded string:	          message.error('Gift card amount should be less than or equal to final price')
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:26:hardcoded string:	        if( ele.provider === 'BYJUS_GIFT_CARD' && parseInt(ele.amount) > ele.amount - (walletItemsAmount - finalPrice)){
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:33:hardcoded number:	    checkForNonEmi = walletItemsAmount === 0;
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:34:hardcoded number:	    walletDetails = walletDetails.filter(payment => payment.amount > 0 && !isNaN(parseInt(payment.amount)))
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:42:hardcoded variable:	export const evaluateRemainingAmount = ( totalPaymentFilled, finalPrice) => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:43:hardcoded number:	    let balancePayment = 0; 
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:44:hardcoded array:	    Object.entries(totalPaymentFilled).filter(([key, value]) => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:49:hardcoded number:	    const isBalancePayment = (finalPrice - balancePayment) >= 0;
microservices-middleware/client/src/modules/payment/components/byjuswallet/walletHelper.js:50:hardcoded string:	    const balanceButtonColor = finalPrice - balancePayment > 0 ? 'warning' : finalPrice - balancePayment == 0 ? 'success' : 'danger';
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:10:hardcoded variable:	const ByjusWallet = () => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:11:hardcoded string:	    const [mobileNumber, setMobileNumber] = useState("");
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:12:hardcoded string:	    const [walletDetails, setWalletDetails] = useState("");
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:13:hardcoded string:	    const [giftCardDetails, setGiftCardDetails] = useState("");
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:14:hardcoded array:	    const [open, setOpen] = useState(false);
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:15:hardcoded number:	    const [giftCardBalance, setGiftCardBalance] = useState(0);
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:16:hardcoded array:	    const [collapseWallet, setCollapseWallet] = useState(false);
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:17:hardcoded number:	    const [totalBonusPoints, setTotalBonusPoints] = useState(0);
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:18:hardcoded number:	    const [conversionFactor, setConversionFactor] = useState(0);
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:20:hardcoded string:	    let mobile = useSelector(state => get(state, "auth.leadDetails.studentMobile", ""));
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:21:hardcoded string:	    let pathName = useSelector(state => get(state, "router.location.pathname", ""));
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:22:hardcoded string:	    let user = useSelector(state => get(state, "auth.details.user", ""));
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:23:hardcoded string:	    const env = useSelector(state => get(state, "auth.details.env", ""));
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:24:hardcoded variable:	    const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:25:hardcoded string:	    mobile = mobile.split('-')[1] || "";
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:32:hardcoded string:	        if (mobileNumber != "" && walletDetails === "" && isPrivilegedUser) {
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:38:hardcoded string:	        if (giftCardDetails != "") {
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:39:hardcoded variable:	            const giftCardBalance = giftCardDetails.reduce((acc, curr) =>
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:40:hardcoded number:	                acc + Number(curr.amount), 0
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:44:hardcoded array:	    }, [mobileNumber, giftCardDetails])
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:46:hardcoded variable:	    const getWalletDetails = async () => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:48:hardcoded string:	            url: '/api/payment/byjuswallet/walletCashDetails',
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:49:hardcoded string:	            method: 'POST',
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:50:hardcoded object:	            body: { phone: mobileNumber }
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:52:hardcoded object:	            const { data } = response;
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:59:hardcoded variable:	    const getGiftCardDetails = async () => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:61:hardcoded string:	            url: '/api/payment/byjuswallet/giftCardDetails',
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:62:hardcoded string:	            method: 'POST',
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:63:hardcoded object:	            body: { phone: mobileNumber }
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:65:hardcoded object:	            const { data } = response;
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:72:hardcoded variable:	    const getBonusPoints = async () => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:74:hardcoded string:	            url: '/api/payment/byjuswallet/bonusPointDetails',
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:75:hardcoded string:	            method: 'POST',
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:80:hardcoded object:	            const { data } = res;
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:81:hardcoded string:	            setTotalBonusPoints(prevState => get(data, 'amount', 0));
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:82:hardcoded string:	            setConversionFactor(prevState => get(data, 'conversionFactor', 0));
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:88:hardcoded variable:	    const walletGiftCard = () => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:92:hardcoded string:	                    <CardHeader className='card-header bg-summary text-white' onClick={() => setCollapseWallet(!collapseWallet)}>Byju's Wallet Details
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:93:hardcoded string:	                        <div style={{ float: 'right' }}>
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:95:hardcoded string:	                                <i style={{ color: `${collapseWallet ? "green" : "Chocolate"}` }} className={`fa fa-arrow-circle-${collapseWallet ? "up" : "down"}`}></i>
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:99:hardcoded object:	                    <Collapse isOpen={collapseWallet}>
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:100:hardcoded string:	                        <div className="row justify-content-center">
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:101:hardcoded string:	                            <Col md="12">
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:103:hardcoded object:	                                    {walletGiftTable()}
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:113:hardcoded variable:	    const walletGiftModal = () => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:116:hardcoded object:	                <Modal isOpen={open} toggle={() => setOpen(false)}>
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:117:hardcoded object:	                    <ModalHeader toggle={() => setOpen(false)}>
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:121:hardcoded object:	                        {walletGiftTable()}
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:124:hardcoded string:	                        <Button color="info" onClick={() => setOpen(false)}>
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:133:hardcoded variable:	    let walletGiftTable = () => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:134:hardcoded object:	        let { cashBalance, customerId } = walletDetails || {};
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:136:hardcoded string:	            customerId = get(giftCardDetails, '0.receiverCustomerId', '')
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:139:hardcoded string:	            <div className='container'>
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:140:hardcoded string:	                <Table className='align-middle' bordered style={{ textAlign: 'center' }} >
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:147:hardcoded string:	                        <td className='align-middle' rowspan="3">{customerId}</td>
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:149:hardcoded string:	                        <td>{walletDetails ? currencyFormatter(cashBalance, "INR") : currencyFormatter(0, "INR")}</td>
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:153:hardcoded string:	                        <td>{giftCardDetails ? currencyFormatter(giftCardBalance, "INR") : currencyFormatter(0, "INR")}</td>
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:157:hardcoded string:	                        <td>{parseInt(totalBonusPoints)} ({currencyFormatter(totalBonusPoints * conversionFactor, "INR")})</td>
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:168:hardcoded string:	                    {pathName === "/" ?
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:170:hardcoded object:	                            {walletGiftCard()}
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:173:hardcoded string:	                        <div><Button className="mr-4 float-right" outline color="info" style={{ width: "fit-content" }} onClick={() => setOpen(true)} >
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:174:hardcoded string:	                            <i className="bjs-cxms-wallets"></i>
microservices-middleware/client/src/modules/payment/components/byjuswallet/Wallet.js:176:hardcoded object:	                            {walletGiftModal()}
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:10:hardcoded variable:	const BonusPoints = () => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:12:hardcoded string:	    const [phone, setPhone] = useState('');
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:13:hardcoded number:	    const [totalBonusPoints, setTotalBonusPoints] = useState(0);
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:14:hardcoded number:	    const [conversionFactor, setConversionFactor] = useState(0);
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:15:hardcoded array:	    const [arePointsZero, setArePointsZero] = useState(true);
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:16:hardcoded string:	    const [customerId, setCustomerId] = useState('');
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:17:hardcoded array:	    const [canUseBonusPoints, setCanUseBonusPoints] = useState(false);
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:19:hardcoded variable:	    const dispatch = useDispatch();
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:20:hardcoded string:	    const mobileNoFromState = useSelector(state => get(state, 'auth.leadDetails.studentMobile'));
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:21:hardcoded string:	    const identifier = useSelector(state => get(state, 'details.identifier'));
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:23:hardcoded string:	    if (mobileNoFromState !== '' && phone === '') {
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:24:hardcoded string:	        const getOnlyMobileNo = mobileNoFromState.split('-')[1];
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:30:hardcoded array:	    }, []);
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:32:hardcoded variable:	    const getBonusPoints = async () => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:34:hardcoded string:	            url: '/api/payment/byjuswallet/bonusPointDetails',
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:35:hardcoded string:	            method: 'POST',
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:40:hardcoded object:	            const { data } = res;
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:41:hardcoded string:	            if (parseInt(get(data, 'amount', 0)) != 0) {
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:44:hardcoded string:	            setTotalBonusPoints(prevState => get(data, 'amount', 0));
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:45:hardcoded string:	            setConversionFactor(prevState => get(data, 'conversionFactor', 0));
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:46:hardcoded string:	            setCustomerId(get(data, 'customerId', ''));
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:52:hardcoded variable:	    const saveBonusPoints = async (isSave) => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:55:hardcoded string:	            url: '/api/payment/byjuswallet/useBonusPoints',
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:56:hardcoded string:	            method: 'POST',
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:65:hardcoded string:	                message.success('Bonus points applied successfully');
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:67:hardcoded string:	                message.warning('Bonus points removed successfully');
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:70:hardcoded number:	            const { amount = 0, conversionFactor = 0 } = bonusPoints;
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:73:hardcoded number:	            if (parseInt(amount) == 0) {
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:74:hardcoded string:	                message.error('You have no bonus points to use');
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:78:hardcoded string:	                message.warning('Please check bonus points again');
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:83:hardcoded variable:	    const handleChange = (e) => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:93:hardcoded string:	    return (<div className='pb-3'>
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:94:hardcoded string:	        <input className='ml-3' type="checkbox" disabled={arePointsZero} value={canUseBonusPoints} id="bonusPoints" onClick={(e) => handleChange(e)} />
microservices-middleware/client/src/modules/payment/components/byjuswallet/BonusPoints.js:95:hardcoded string:	        <label htmlFor='bonusPoints' className='ml-2' style={{ color: 'grey', cursor: `${arePointsZero ? 'not-allowed' : 'pointer'}`, textDecorationLine: `${arePointsZero ? 'line-through' : 'none'}` }}>Use {totalBonusPoints} Bonus Points ({currencyFormatter((parseFloat(totalBonusPoints) * conversionFactor), 'INR')})</label>
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:7:hardcoded variable:	const WalletTransactions = forwardRef((props, ref) => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:8:hardcoded object:	    const  { refreshComp, getAllFilledPayment, removeFilledPayment } = props;
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:9:hardcoded array:	    const [isWalletOpen, setIsWalletOpen] = useState(false);
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:11:hardcoded variable:	    const walletCashRef = useRef(null);
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:12:hardcoded variable:	    const giftCardsRef = useRef(null);
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:16:hardcoded variable:	            const walletPayment = walletCashRef.current.getWalletCashDetails();
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:17:hardcoded variable:	            const giftCardsPayment = giftCardsRef.current.getGiftCardDetails();
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:19:hardcoded array:	                walletPayment: [walletPayment, ...giftCardsPayment],
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:29:hardcoded string:	                    <p className='card-header m-3 bg-summary text-white rounded' onClick={() => setIsWalletOpen(prevState => !prevState)}>
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:31:hardcoded string:	                        <span className='float-right mr-2'>
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:32:hardcoded object:	                            {isWalletOpen ? <BsArrowsExpand /> : <BsArrowsCollapse />}
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:35:hardcoded object:	                    <Collapse isOpen={isWalletOpen}>
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:36:hardcoded string:	                        <Card className="m-4 border-0">
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:42:hardcoded object:	                                    ref = {walletCashRef}
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:43:hardcoded object:	                                    refreshComp = {refreshComp}
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:44:hardcoded object:	                                    getAllFilledPayment = { getAllFilledPayment }
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:45:hardcoded object:	                                    removeFilledPayment = { removeFilledPayment }
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:48:hardcoded object:	                                    ref={giftCardsRef}
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:49:hardcoded object:	                                    refreshComp = {refreshComp}
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:50:hardcoded object:	                                    getAllFilledPayment = { getAllFilledPayment }
microservices-middleware/client/src/modules/payment/components/byjuswallet/WalletTransactions.js:51:hardcoded object:	                                    removeFilledPayment = { removeFilledPayment }
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:9:hardcoded variable:	const GiftCards = forwardRef((props, ref) => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:11:hardcoded object:	    const { refreshComp, getAllFilledPayment, removeFilledPayment } = props;
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:12:hardcoded string:	    const [phone, setPhone] = useState('');
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:13:hardcoded array:	    const [originalGiftCards, setOriginalGiftCards] = useState([]);
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:14:hardcoded array:	    const [giftCards, setGiftCards] = useState(null);
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:15:hardcoded array:	    const [selectedGiftCard, setSelectedGiftCard] = useState([]);
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:16:hardcoded number:	    const [giftCardAmount, setGiftCardAmount] = useState(0);
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:17:hardcoded number:	    const [totalGiftCardAmount, setTotalGiftCardAmount] = useState(0);
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:19:hardcoded string:	    const mobileNoFromState = useSelector(state => get(state, 'auth.leadDetails.studentMobile'));
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:21:hardcoded string:	    if (mobileNoFromState !== '' && phone === '') {
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:22:hardcoded string:	        const getOnlyMobileNo = mobileNoFromState.split('-')[1];
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:28:hardcoded array:	        setSelectedGiftCard([]);
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:29:hardcoded number:	        setGiftCardAmount(0);
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:33:hardcoded array:	    }, [refreshComp])
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:37:hardcoded variable:	            const filteredGiftCards = originalGiftCards.filter(item => selectedGiftCard.includes(item.giftCardId));
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:38:hardcoded variable:	            let formattedGiftCardsPayment = filteredGiftCards.map(item => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:40:hardcoded string:	                    provider: 'BYJUS_GIFT_CARD',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:49:hardcoded variable:	    const getGiftCards = async () => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:51:hardcoded string:	            url: '/api/payment/byjuswallet/giftCardDetails',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:52:hardcoded string:	            method: 'POST',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:57:hardcoded object:	            const { data } = res;
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:58:hardcoded number:	            const totalAmount = data.reduce((acc, item) => acc + parseFloat(item.amount), 0);
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:67:hardcoded variable:	    const getFormattedGiftCards = (giftCards) => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:68:hardcoded variable:	        const formattedGiftCards = giftCards.map(giftCard => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:70:hardcoded string:	                label: `${giftCard.giftCardId} - ${currencyFormatter(get(giftCard, "amount", 0), 'INR')}`,
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:77:hardcoded variable:	    const handleChange = (value, name) => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:78:hardcoded string:	        if (name === 'byjusGiftCard') {
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:79:hardcoded variable:	            const nonSelectedCards = originalGiftCards.filter(item => !value.includes(item.giftCardId));
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:83:hardcoded variable:	            const amount = originalGiftCards.filter(item => value.includes(item.giftCardId)).reduce((acc, curr) => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:87:hardcoded number:	            }, 0);
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:93:hardcoded variable:	    const byjusGiftCard = () => {
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:94:hardcoded variable:	        const fields = [
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:96:hardcoded string:	                type: 'select',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:97:hardcoded string:	                mode: 'multiple',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:98:hardcoded string:	                name: 'byjusGiftCard',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:99:hardcoded string:	                label: 'Gift Card',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:104:hardcoded string:	                type: 'number',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:105:hardcoded string:	                name: 'giftCardAmount',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:106:hardcoded string:	                label: 'Amount',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:108:hardcoded string:	                message: 'Please enter amount',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:112:hardcoded string:	                type: 'number',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:113:hardcoded string:	                name: 'totalGiftCardAmount',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:114:hardcoded string:	                label: 'Gift Card balance',
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:118:hardcoded variable:	        const formItemLayout = {
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:120:hardcoded number:	                xs: { span: 4 },
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:121:hardcoded number:	                sm: { span: 4 },
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:124:hardcoded number:	                xs: { span: 12 },
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:125:hardcoded number:	                sm: { span: 12 },
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:131:hardcoded object:	                    fields={fields}
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:132:hardcoded number:	                    cols={3}
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:133:hardcoded object:	                    formItemLayout={formItemLayout}
microservices-middleware/client/src/modules/payment/components/byjuswallet/GiftCards.js:134:hardcoded object:	                    initialValues={{giftCardAmount: giftCardAmount, byjusGiftCard: selectedGiftCard, totalGiftCardAmount}}
