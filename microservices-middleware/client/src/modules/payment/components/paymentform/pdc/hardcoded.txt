microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:14:hardcoded variable:	const PdcPaymentForm = (props) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:15:hardcoded object:	    const { leadDetails, setLoading, payment, leadPayments, user, selectedQuotation, featureKey, env, selectedProduct, updatePdcPaymentsStatus } = props;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:16:hardcoded string:	    const quotation = get(selectedQuotation, "quotationId", "");
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:17:hardcoded object:	    const { prospectId, accountNumber } = leadDetails;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:18:hardcoded string:	    const leadPhoneNo = get(leadDetails, "studentMobile", "").split("-")[get(leadDetails, "studentMobile", "").split("-").length - 1];
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:20:hardcoded array:	    const [leadPayment, setLeadPayment] = useState([]);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:21:hardcoded array:	    const [showCreatePaymentForm, setShowCreatePaymentForm] = useState(false);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:22:hardcoded array:	    const [collapseGateway, setCollapseGateway] = useState(false);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:23:hardcoded array:	    const [pdcSchedulesDetails, setPdcSchedulesDetails] = useState({});
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:24:hardcoded array:	    const [paymentInitiated, setPaymentInitiated] = useState(false);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:25:hardcoded array:	    const [pdcSchedulesInitiated, setPdcSchedulesInitiated] = useState(false);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:26:hardcoded array:	    const [isDpPaid, setIsDpPaid] = useState(false);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:28:hardcoded variable:	    const dispatch = useDispatch();
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:33:hardcoded array:	    }, [payment, paymentInitiated]);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:35:hardcoded variable:	    const setLeadPayments = (lspay) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:36:hardcoded array:	        setLeadPayment([lspay])
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:39:hardcoded variable:	    const checkIfPdcSchedulesInitiated = (response) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:41:hardcoded variable:	        let status = true;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:43:hardcoded string:	            if(schedule.status === 'pending') {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:50:hardcoded variable:	    const getLeadPayments = () => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:51:hardcoded string:	        dispatch(loadPaymentAssociatedWithLead("", prospectId, accountNumber, leadPhoneNo));
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:55:hardcoded variable:	    const checkIfPdcDpInitiated = (response, isPdcPaid) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:56:hardcoded variable:	        const totalDpInitialValue = payment?.reduce((acc, curr) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:57:hardcoded string:	            if(curr?.type == "pdc_ccr") return acc;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:58:hardcoded number:	            return acc + parseInt(curr.amount) || 0;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:59:hardcoded number:	        }, 0);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:60:hardcoded variable:	        const idDpPaid = response?.dpDetails?.amount == totalDpInitialValue;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:65:hardcoded variable:	    const getPdcSchedulesDetails = async () => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:69:hardcoded string:	            method: 'POST',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:75:hardcoded string:	                response.data.dpDetails.date = moment(response.data.dpDetails.date).format('ll');
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:77:hardcoded string:	                    schedule.installmentDate = moment(schedule?.installmentDate, 'YYYY/MM/DD')
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:80:hardcoded variable:	                const isPdcPaid= checkIfPdcSchedulesInitiated(response?.data);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:89:hardcoded variable:	    const gatewayPaymentTable = () => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:91:hardcoded string:	            <Table striped size="md">
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:103:hardcoded object:	                        <tr key={idx}>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:104:hardcoded string:	                            <th scope="row">{idx + 1}</th>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:105:hardcoded object:	                            <td>{payment.referenceId}</td>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:106:hardcoded object:	                            <td>{startCase(payment.paymentPartner || payment.paymentTransferPartner)}</td>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:107:hardcoded object:	                            <td>{payment.amount}</td>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:108:hardcoded object:	                            <td>{startCase(payment.status)}</td>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:116:hardcoded variable:	    const onClickCreatePayment = () => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:117:hardcoded number:	        if ((quotation.length > 0 && !isEmpty(selectedQuotation)) || (isEmpty(quotation))) {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:120:hardcoded string:	            message.error('Select Quotation before creating any payment');
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:124:hardcoded variable:	    const collapseDpForm = () => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:129:hardcoded variable:	    const pdcDpHeader = () => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:131:hardcoded string:	            <CardHeader className='card-header bg-summary text-white' onClick={() => setCollapseGateway(!collapseGateway)}> Pre-Paid Payments/ Down-Payments
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:132:hardcoded string:	                    <div style={{ float: "right" }}>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:133:hardcoded string:	                        <span>Payment Count: <Badge color="success">{leadPayment.length}</Badge></span>{"  "}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:135:hardcoded string:	                            <i style={{ color: `${collapseGateway ? "green" : "Chocolate"}` }} className={`fa fa-arrow-circle-${collapseGateway ? "up" : "down"}`}></i>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:142:hardcoded variable:	    const pdcDpBody = () => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:144:hardcoded object:	            <Collapse isOpen={collapseGateway}>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:146:hardcoded string:	                        <div className="row justify-content-center">
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:147:hardcoded string:	                            <Col md="12">
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:149:hardcoded string:	                                    {leadPayment.length === 0 && <Alert color="info">No Payments generated against this lead. Click on the create payment button to generate payments.</Alert>}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:150:hardcoded number:	                                    {leadPayment.length > 0 && gatewayPaymentTable()}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:151:hardcoded string:	                                    <Button outline color="info" onClick={() => onClickCreatePayment()}>Create Payment</Button>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:157:hardcoded object:	                                    leadDetails={leadDetails}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:158:hardcoded object:	                                    loading={(load) => setLoading(load)}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:159:hardcoded object:	                                    leadPayments={(leadPayment) => setLeadPayments(leadPayment)}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:160:hardcoded object:	                                    onClickCloseForm={collapseDpForm}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:161:hardcoded object:	                                    user={user}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:162:hardcoded object:	                                    selectedQuotation={selectedQuotation}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:163:hardcoded object:	                                    env={env}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:164:hardcoded object:	                                    featureKey={featureKey}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:165:hardcoded object:	                                    selectedProduct={selectedProduct}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:175:hardcoded variable:	    const pdcSchedulesSummary = () => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:190:hardcoded string:	                        <th scope="row">1</th>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:191:hardcoded object:	                        <td>{pdcSchedulesDetails?.dpDetails?.date}</td>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:192:hardcoded object:	                        <td>{pdcSchedulesDetails?.dpDetails?.amount}</td>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:194:hardcoded string:	                        <td><Badge color={!isDpPaid ? 'warning' : 'success'}>{isDpPaid ? 'Initiated' : 'Pending'}</Badge></td>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:197:hardcoded object:	                        <tr key={idx}>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:198:hardcoded string:	                            <th scope="row">{schedule?.installmentNo + 1}</th>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:199:hardcoded string:	                            <td>{schedule?.installmentDate?.format('ll')}</td>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:200:hardcoded object:	                            <td>{schedule?.totalAmount}</td>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:202:hardcoded string:	                            <td><Badge color={schedule?.status == 'pending' ? 'warning' : 'success'}>{startCase(schedule?.status)}</Badge></td>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:213:hardcoded number:	                <H3>PDC Payments</H3>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:214:hardcoded string:	                <button style={{ float: "right", marginTop: '-30px' }} onClick={getLeadPayments}>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:215:hardcoded string:	                    <i style={{ width: "18px", height: '18px' }} className='fa fa-refresh'></i>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:219:hardcoded object:	                    {pdcSchedulesSummary()}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:221:hardcoded object:	                {pdcDpHeader()}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:222:hardcoded object:	                {pdcDpBody()}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:226:hardcoded array:	                    pdcSchedules={pdcSchedulesDetails?.pdcSchedules || []}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:227:hardcoded object:	                    user={user}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:228:hardcoded object:	                    loading={(load) => setLoading(load)}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:229:hardcoded object:	                    selectedQuotation= {selectedQuotation}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:230:hardcoded object:	                    leadDetails={leadDetails}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcForm.js:231:hardcoded object:	                    setPaymentInitiated={setPaymentInitiated}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:14:hardcoded variable:	const PdcSchedulesForm = (props) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:15:hardcoded object:	    const { pdcSchedules, loading, selectedQuotation, leadDetails, setPaymentInitiated, user } = props;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:16:hardcoded object:	    const { prospectId, userEmail, studentEmail, studentName, studentMobile, accountNumber } = leadDetails;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:17:hardcoded string:	    const mobileNo = studentMobile?.split('-')[studentMobile?.split('-').length - 1];
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:18:hardcoded string:	    const [quotationId, setQuotationId] = useState(get(selectedQuotation, "quotationId", ""));
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:19:hardcoded array:	    const [collapsePdcCq, setCollapsePdcCq] = useState(false);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:20:hardcoded array:	    const [error, setError] = useState(null);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:21:hardcoded object:	    const mobileNumber = getMaskedMobileDetails({customerMobileNo: studentMobile })
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:22:hardcoded array:	    const [formValues, setFormValues] = useState({
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:26:hardcoded string:	        provider: 'PDC'
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:29:hardcoded array:	    const [scheduleDetails, setScheduleDetails] = useState([]);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:33:hardcoded array:	    }, [pdcSchedules])
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:35:hardcoded string:	    const authToken = useSelector(state => get(state, 'auth.details.token', null));
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:36:hardcoded variable:	    const url = getConnectionUrl();
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:38:hardcoded variable:	    const createPayment = async () => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:40:hardcoded variable:	        const props = {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:47:hardcoded variable:	        const payload = createPayload(props);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:54:hardcoded string:	            method: 'POST',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:67:hardcoded variable:	    const refreshPdcPayments = () => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:70:hardcoded number:	        }, 3000);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:73:hardcoded variable:	    const getBankDetails = async (index) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:74:hardcoded variable:	        const schedule = scheduleDetails.find(schedule => schedule?.id === index);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:75:hardcoded variable:	        const value = schedule?.ifscCode?.toUpperCase();
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:79:hardcoded object:	            url: `/api/payment/banks/getBankName/${value}`,
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:80:hardcoded string:	            method: 'GET',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:83:hardcoded string:	                setError('Bank name not found');
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:88:hardcoded string:	                            bankName: ""
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:94:hardcoded string:	                setError('');
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:111:hardcoded variable:	    const changeScheduleDetails = (name, value, index) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:116:hardcoded array:	                    [name]: value
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:123:hardcoded variable:	    const onFileChange = (response, id, isRemove) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:128:hardcoded string:	                    fileUrl: isRemove ? "" : response.fileUrl,
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:135:hardcoded variable:	    const handleChanges = (value, name) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:138:hardcoded array:	            [name]: value
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:142:hardcoded variable:	    const userDetails = () => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:143:hardcoded variable:	        const initialValues = formValues;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:144:hardcoded variable:	        const fields = [
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:146:hardcoded string:	                type: "text",
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:147:hardcoded string:	                name: 'customerName',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:148:hardcoded string:	                label: 'Customer Name',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:152:hardcoded array:	                    pattern: /^[a-zA-Z ]*$/
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:156:hardcoded string:	                type: "email",
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:157:hardcoded string:	                name: 'customerEmail',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:158:hardcoded string:	                label: 'Customer Email',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:162:hardcoded string:	                    type: 'email'
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:166:hardcoded string:	                type: "text",
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:167:hardcoded string:	                name: 'mobileNo',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:168:hardcoded string:	                label: 'Mobile No.',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:171:hardcoded array:	                rules: mobileNumber ? [{}] : 
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:173:hardcoded number:	                    pattern: /^[0-9]*$/
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:180:hardcoded object:	                    fields={fields}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:181:hardcoded object:	                    initialValues={initialValues}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:189:hardcoded variable:	    const schedulesTable = (schedule, index) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:190:hardcoded string:	        const { id, fileUrl = "", installmentNo } = schedule;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:191:hardcoded variable:	        const fileList = [{
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:193:hardcoded object:	            name: fileUrl ? `${quotationId}-cheque-image-${installmentNo}` : null,
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:194:hardcoded string:	            status: 'done',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:197:hardcoded variable:	        const reqData = {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:204:hardcoded variable:	        const headers = {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:207:hardcoded variable:	        const fields = [
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:209:hardcoded string:	                type: "text",
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:210:hardcoded string:	                name: 'chequeNo',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:211:hardcoded string:	                label: 'Cheque Number',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:213:hardcoded string:	                message: 'Please enter cheque number',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:217:hardcoded string:	                    message: 'Please enter cheque number',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:221:hardcoded string:	                type: "number",
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:222:hardcoded string:	                name: 'totalAmount',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:223:hardcoded string:	                label: 'Total Amount',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:225:hardcoded string:	                message: 'Please enter total amount',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:230:hardcoded string:	                type: "text",
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:231:hardcoded string:	                name: 'ifscCode',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:232:hardcoded string:	                label: 'IFSC Code',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:234:hardcoded string:	                message: 'Please enter IFSC code',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:239:hardcoded string:	                    message: 'Please enter IFSC code to get Bank Name',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:243:hardcoded string:	                type: "text",
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:244:hardcoded string:	                name: 'bankName',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:245:hardcoded string:	                label: 'Bank Name',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:247:hardcoded string:	                message: 'Please enter bank name',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:251:hardcoded string:	                type: "datepicker",
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:252:hardcoded string:	                name: 'installmentDate',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:253:hardcoded string:	                label: 'Installment Date',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:255:hardcoded string:	                message: 'Please enter installment date',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:259:hardcoded string:	                type: "upload",
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:260:hardcoded string:	                name: 'fileUrl',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:261:hardcoded string:	                label: 'Cheque Image',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:262:hardcoded string:	                listType: "picture",
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:264:hardcoded string:	                message: 'Please upload cheque image',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:267:hardcoded object:	                action: `${url}/api/payment/pdc/uploadPdcCheque`,
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:276:hardcoded variable:	        const formItemLayout = {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:278:hardcoded number:	                xs: { span: 4 },
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:279:hardcoded number:	                sm: { span: 4 },
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:282:hardcoded number:	                xs: { span: 12 },
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:283:hardcoded number:	                sm: { span: 12 },
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:290:hardcoded string:	                    heading={`Schedule Cheque of ${moment(schedule?.installmentDate).format('MMM-DD-YYYY')}`}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:291:hardcoded object:	                    fields={fields}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:292:hardcoded object:	                    initialValues={schedule}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:293:hardcoded object:	                    formItemLayout={formItemLayout}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:302:hardcoded string:	            <CardHeader className='card-header bg-summary text-white' onClick={() => setCollapsePdcCq(!collapsePdcCq)}>PDC Cheque Payments
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:305:hardcoded string:	                        <Icon isOpen={collapsePdcCq} className={`fa fa-arrow-circle-${collapsePdcCq ? "up" : "down"}`}></Icon>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:309:hardcoded object:	            <Collapse isOpen={collapsePdcCq}>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:310:hardcoded string:	                <div className="row justify-content-center">
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:312:hardcoded string:	                        <div className="col-md-12">
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:313:hardcoded string:	                            <div className="alert alert-info">
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:318:hardcoded string:	                        <Col md="12">
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:320:hardcoded object:	                                {userDetails()}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:326:hardcoded object:	                                                <div key={index}>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:327:hardcoded object:	                                                    {schedulesTable(schedule, index)}
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/PdcSchedulesForm.js:335:hardcoded string:	                            <Button color="success" onClick={createPayment}>Create Payment</Button>
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:1:hardcoded string:	import styled from "@emotion/styled";
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:3:hardcoded variable:	export const Icon = styled.i`
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:4:hardcoded string:	    color: ${props => props.isOpen ? "green" : "Chocolate"};
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:5:hardcoded number:	    transition: color 0.5s ease;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:8:hardcoded variable:	export const RightSideText = styled.div`
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:12:hardcoded number:	export const H3 = styled.h3`
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:13:hardcoded number:	    font-size: 1.5rem;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:14:hardcoded number:	    font-weight: 500;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:15:hardcoded number:	    margin-bottom: 0.5rem;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:18:hardcoded variable:	export const Box = styled.div`
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:19:hardcoded number:	    margin-bottom: 1.5rem;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:22:hardcoded variable:	export const Table = styled.table`
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:23:hardcoded number:	    border: 1px solid #e6e6e6;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:24:hardcoded number:	    padding: 1rem;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:26:hardcoded number:	    border-spacing: 0;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:27:hardcoded number:	    font-size: 0.9rem;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:28:hardcoded number:	    color: #888f95;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:30:hardcoded number:	    border-radius: 0.25rem;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:32:hardcoded number:	    margin-bottom: 1rem;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:35:hardcoded number:	    border-spacing: 1rem 0;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:39:hardcoded variable:	export const Center = styled.div`
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/Styles.js:44:hardcoded variable:	export const GridBox = styled.div`
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:4:hardcoded variable:	const isValidPayload = (formValues, scheduleDetails) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:5:hardcoded object:	    const { customerName, customerEmail, mobileNo } = formValues;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:6:hardcoded array:	    if (!customerName || `${customerName}`.match(/[^a-zA-Z ]/g)) {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:7:hardcoded string:	        message.error('Customer name is required and should not contain special characters or numbers');
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:10:hardcoded number:	    if (!customerEmail || !`${customerEmail}`.match(/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/)) {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:11:hardcoded string:	        message.error('Customer email is required');
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:15:hardcoded string:	        message.error('Customer mobile is required');
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:19:hardcoded number:	        if (!schedule.chequeNo || schedule.chequeNo.match(/[^a-zA-Z0-9]/g)) {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:20:hardcoded string:	            message.error('Cheque number is required and should not contain special characters');
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:23:hardcoded number:	        if (schedule.chequeNo.length != 6) {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:24:hardcoded string:	            message.error('Cheque number should be 6 digits');
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:27:hardcoded array:	        if (!schedule.bankName || schedule.bankName.match(/[^a-zA-Z ]/g)) {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:28:hardcoded string:	            message.error('Bank name is required and should not contain special characters');
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:35:hardcoded variable:	const createPayload = (props) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:36:hardcoded object:	    const { formValues, scheduleDetails, prospectId, userEmail, accountNumber } = props;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:37:hardcoded variable:	    const isPayloadValid = isValidPayload(formValues, scheduleDetails);
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:41:hardcoded object:	    const { customerName, customerEmail, mobileNo } = formValues;
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:42:hardcoded variable:	    const payload = {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:47:hardcoded string:	        provider: 'pdc_ccr',
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:52:hardcoded number:	        beneficiary: scheduleDetails[0]?.beneficiary,
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:57:hardcoded string:	                txnDate: moment(schedule.installmentDate).format('YYYY-MM-DD'),
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:68:hardcoded variable:	const isFileSupported = (file) => {
microservices-middleware/client/src/modules/payment/components/paymentform/pdc/pdcHelper.js:72:hardcoded string:	    message.error('Only images are supported');
