microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:1:hardcoded file path:import React from 'react';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:2:hardcoded object:import { isEqual, isEmpty, get } from 'lodash';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:3:hardcoded number:import uuidv4 from 'uuid/v4';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:5:hardcoded file path:import NonEmiPaymentCard from './NonEmiPaymentCard';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:12:hardcoded array:      nonEmiPayments: [],
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:13:hardcoded array:      initialPayments: [],
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:15:hardcoded array:      nonEmiForms: [],
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:16:hardcoded array:      appliedPaymentForms: [],
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:17:hardcoded object:      paymentAssociatedWithLead: {} // Payments created against the lead in home page 
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:21:hardcoded object:  doInitialization = ({isInitialCall = false}) => {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:22:hardcoded object:    const { initialPayments, nonEmiPayments } = this.state;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:23:hardcoded number:    if (nonEmiPayments.length > 0) {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:25:hardcoded array:        nonEmiForms: []
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:31:hardcoded object:    const { nonEmiForms, maxAllowedDownPayments, paymentAssociatedWithLead } = this.state;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:32:hardcoded string:    let nonEmiPaymentDetails = get(paymentAssociatedWithLead, "dp", []);
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:35:hardcoded array:        const leadPayments = { dp: [...nonEmiPaymentDetails] }
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:36:hardcoded number:        if(!isInitialCall || leadPayments?.dp.length === 0){
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:37:hardcoded number:          leadPayments.dp.push({ initialValue: {}, identifier: uuidv4() })
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:40:hardcoded number:          nonEmiForms: [...nonEmiForms, { initialValue: {}, identifier: uuidv4() }],
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:47:hardcoded number:      const forms = initialPayments.map(ele => ({ initialValue: ele, identifier: uuidv4() }));
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:49:hardcoded array:        nonEmiForms: [...nonEmiForms, ...forms],
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:50:hardcoded number:        paymentAssociatedWithLead: { dp: [...nonEmiPaymentDetails, { initialValue: {}, identifier: uuidv4() }] }
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:56:hardcoded object:    const { nonEmiForms, paymentAssociatedWithLead } = this.state;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:57:hardcoded object:    const { removeFilledPayment } = this.props;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:58:hardcoded string:    let nonEmiPaymentDetails = get(paymentAssociatedWithLead, "dp", []);
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:60:hardcoded number:    if (nonEmiForms.length > 1 && isEmpty(nonEmiPaymentDetails)) {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:68:hardcoded array:      nonEmiPaymentDetails = nonEmiPaymentDetails.filter(ele => ![ele._id, ele.identifier].includes(identifier))
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:70:hardcoded object:        paymentAssociatedWithLead: { dp: nonEmiPaymentDetails }
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:76:hardcoded variable:    const result = {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:77:hardcoded array:      nonEmiDetails: [],
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:80:hardcoded object:    const refs = this.refs || {};
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:82:hardcoded array:      const nonEmiDetails = await refs[ref].validateFormAndGetValues();
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:93:hardcoded object:  onChangePaymentDetails = (identifier, paymentDetails = {}) => {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:94:hardcoded string:    const paymentModesAllowedOnce = ['CASH_ON_DELIVERY'];
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:95:hardcoded object:    const { appliedPaymentForms } = this.state;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:96:hardcoded variable:    const currentPartial = appliedPaymentForms.find(ele => ele === identifier);
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:98:hardcoded array:      this.setState({ appliedPaymentForms: [...appliedPaymentForms, identifier, paymentDetails.selectedMode] });
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:100:hardcoded object:      this.setState({ appliedPaymentForms: appliedPaymentForms.filter(ele => ele !== identifier) });
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:105:hardcoded array:    const { nonEmiForms=[], nonEmiPayments, appliedPaymentForms, paymentAssociatedWithLead } = this.state;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:106:hardcoded object:    const { paymentType, finalPrice, getAllFilledPayment ,leadPdcs} = this.props;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:107:hardcoded variable:    let initialValue = formItem.initialValue;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:108:hardcoded variable:    let identifier = formItem.identifier;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:109:hardcoded number:    let seqNo = index + 1
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:110:hardcoded variable:    let totalCount = nonEmiForms.length
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:111:hardcoded variable:    const paymentMap = {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:112:hardcoded string:      payu: "PAYU",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:113:hardcoded string:      razorpay: "RAZORPAY",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:114:hardcoded string:      gpay: "GPAY",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:115:hardcoded string:      shopse: "SHOPSE",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:116:hardcoded string:      bank_transfer: "BANK_TRANSFER",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:117:hardcoded string:      icr: "ICR",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:118:hardcoded string:      cashfree: "CASHFREE",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:119:hardcoded string:      paytm: "PAYTM",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:120:hardcoded string:      CCR: "CCR",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:121:hardcoded string:      SCR: "SCR",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:122:hardcoded string:      international_payment : "INTERNATIONAL_PAYMENT",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:123:hardcoded string:      PDC_CCR: "PDC_CCR",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:124:hardcoded string:      cashfree_pg : "CASHFREE_PG",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:125:hardcoded string:      PDC_CCR_BETA : "PDC_CCR"
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:128:hardcoded variable:    const isDpCreatedThroughKart = paymentAssociatedWithLead.dp;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:131:hardcoded string:      initialValue = { amount: formItem.amount, referenceId: formItem.referenceId, provider: paymentMap[get(formItem, "paymentPartner", "")] }
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:137:hardcoded object:        ref={`nonEmiPayment-${identifier}`}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:138:hardcoded object:        key={index}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:139:hardcoded object:        seqNo={seqNo}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:140:hardcoded object:        totalCount={totalCount}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:141:hardcoded object:        initialValue={initialValue}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:142:hardcoded object:        identifier={identifier}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:143:hardcoded object:        nonEmiPayments={nonEmiPayments}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:144:hardcoded object:        addPayment={this.addPayment}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:145:hardcoded object:        removePayment={(identifier) => this.removePayment(identifier)}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:146:hardcoded object:        finalPrice={finalPrice}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:147:hardcoded object:        onChangePaymentDetails={this.onChangePaymentDetails}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:148:hardcoded object:        appliedPaymentForms={appliedPaymentForms}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:149:hardcoded object:        paymentType={paymentType}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:150:hardcoded object:        isPaymentAssociatedWithLeads={!isEmpty(isDpCreatedThroughKart)}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:151:hardcoded object:        index={index}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:152:hardcoded object:        getAllFilledPayment={getAllFilledPayment}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:158:hardcoded object:    const { nonEmiPayments, initialPayments, maxAllowedDownPayments, paymentType, paymentAssociatedWithLead } = this.props;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:165:hardcoded object:      this.doInitialization({isInitialCall: true})
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:180:hardcoded object:        this.doInitialization({isInitialCall: true})
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:186:hardcoded object:    const { nonEmiForms, paymentAssociatedWithLead } = this.state;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:187:hardcoded object:    const { leadPdcs, paymentType } = this.props
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:188:hardcoded string:    let nonEmiPaymentDetails = get(paymentAssociatedWithLead, "dp", []);
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:189:hardcoded string:    if(paymentType === "PDC"){
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:190:hardcoded array:      nonEmiPaymentDetails = [...leadPdcs, ...nonEmiPaymentDetails]
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentContainer.js:195:hardcoded object:        {isEmpty(nonEmiPaymentDetails) ? nonEmiForms.map((ele, index) => this.getNonEmiForm(ele, index)): nonEmiPaymentDetails.map((ele, index) => this.getNonEmiForm(ele, index))}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:1:hardcoded file path:import React from 'react';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:4:hardcoded object:import { get, isEqual, isEmpty, merge } from 'lodash';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:5:hardcoded object:import { Button } from 'reactstrap';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:7:hardcoded file path:import AntDFormBuilder from '../../../../components/form/AntDFormBuilder';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:8:hardcoded object:import { getReferenceId } from '../paymentHelper';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:9:hardcoded file path:import UploadFile from '../../../upload/UploadFile';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:10:hardcoded object:import { saveError } from '../../paymentReducer';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:11:hardcoded number:import uuidv4 from 'uuid/v4';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:12:hardcoded file path:import InfoWrapper from '../../../../components/InfoWrapper';
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:14:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:24:hardcoded array:      nonEmiPayments: [],
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:25:hardcoded object:      initialValue: {},
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:26:hardcoded array:      formFields: [],
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:27:hardcoded array:      requiredDocuments: [],
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:28:hardcoded array:      additionalDetails: [],
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:29:hardcoded string:      helpText: "",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:35:hardcoded variable:    let result = {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:37:hardcoded number:      maxAllowedAmount: 0,
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:38:hardcoded string:      selectedMode: get(currentPayment, "formattedName", "")
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:41:hardcoded object:    const { finalPrice, paymentType } = this.props;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:43:hardcoded string:    if (paymentType === "NON_EMI") {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:44:hardcoded string:      const isPartial = get(currentPayment, "isPartial", false);
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:45:hardcoded string:      const maxAmountPercent = get(currentPayment, "maxAmountPercent");
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:47:hardcoded number:      result.maxAllowedAmount = isPartial ? (finalPrice * maxAmountPercent) / 100 : undefined
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:53:hardcoded object:    let { initialValue, nonEmiPayments, isPaymentAssociatedWithLeads } = this.state;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:54:hardcoded object:    const { onChangePaymentDetails, identifier, seqNo, paymentType, getAllFilledPayment } = this.props;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:55:hardcoded string:    const amount = get(this.props, "initialValue.amount", 0);
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:56:hardcoded variable:    const formFields = this.getProviderFormField();
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:57:hardcoded string:    let formInitialValue = {}, requiredDocuments = [], helpText = "", paymentDetails = {};
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:60:hardcoded variable:      const currentPayment = nonEmiPayments.find(nep => nep.formattedName === initialValue.provider);
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:61:hardcoded string:      requiredDocuments = get(currentPayment, "requiredDocuments", []);
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:62:hardcoded string:      helpText = get(currentPayment, "otherConfigurations.helpText", "");
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:67:hardcoded string:        const text = `In case of partial ${get(currentPayment, "name")}, maximum allowed amount is ${paymentDetails.maxAllowedAmount}`;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:68:hardcoded object:        helpText = helpText ? `${helpText}. ${text}` : text;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:70:hardcoded object:      const { initialValue: formValues, fields: remainingFields } = this.getRemainingFormFields({ nonEmiPayment: currentPayment, paymentDetails, initialValue, isPaymentAssociatedWithLeads });
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:74:hardcoded string:    if (seqNo == 1 && paymentType == 'subscription') {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:75:hardcoded string:      initialValue.provider = 'SUBSCRIPTION'
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:88:hardcoded object:    const { getAllFilledPayment, identifier } = this.props;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:93:hardcoded object:  getRemainingFormFields = ({ nonEmiPayment, paymentDetails, initialValue, isPaymentAssociatedWithLeads }) => {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:94:hardcoded string:    let { provider = '' } = initialValue;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:95:hardcoded object:    const { isDevEnv } = window
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:97:hardcoded string:    const isRandomReferenceId = get(nonEmiPayment, "otherConfigurations.isRandomReferenceId", false);
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:98:hardcoded string:    const additionalDetails = get(nonEmiPayment, "additionalDetails", []);
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:99:hardcoded string:    const isAppendRandomDigitToReferenceId = get(nonEmiPayment, "otherConfigurations.isAppendRandomDigitToReferenceId", false);
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:106:hardcoded variable:    const fields = [{
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:107:hardcoded string:      name: "referenceId",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:108:hardcoded string:      type: isRandomReferenceId ? "hidden" : "text",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:109:hardcoded string:      label: get(nonEmiPayment, "otherConfigurations.referenceIdLabel", "Reference ID"),
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:111:hardcoded string:      placeholder: "Enter Ref Id.",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:113:hardcoded number:        pattern: new RegExp(/^[a-zA-Z0-9-]+$/), message: `Not a valid Ref Id`
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:115:hardcoded string:      disabled: provider === "PDC_CCR"
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:118:hardcoded string:      name: "amount",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:119:hardcoded string:      type: (provider != "SUBSCRIPTION") ? 'number' : 'hidden',
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:120:hardcoded string:      label: 'Amount',
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:121:hardcoded string:      required: (provider != "SUBSCRIPTION") ? true : false,
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:122:hardcoded number:      min: 1,
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:125:hardcoded string:      disabled: provider === "PDC_CCR"
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:133:hardcoded string:        referenceId: get(initialValue, "referenceId", ""),
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:134:hardcoded string:        amount: get(initialValue, "amount", "")
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:143:hardcoded string:    else if (paymentDetails.selectedMode === "FOC") {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:144:hardcoded number:      maxAmount = 1;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:151:hardcoded object:    const { nonEmiPayments, isPaymentAssociatedWithLeads, initialValue } = this.state;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:152:hardcoded array:    const { appliedPaymentForms = [], identifier } = this.props;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:153:hardcoded object:    const { isDevEnv } = window
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:154:hardcoded array:    const fileds = [];
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:155:hardcoded number:    if (nonEmiPayments.length > 0) {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:156:hardcoded variable:      const providerOptions = nonEmiPayments.map(nep => {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:157:hardcoded string:        const formattedName = get(nep, "formattedName", '');
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:159:hardcoded string:          label: get(nep, "name", nep.formattedName),
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:161:hardcoded number:          /** Only 1 partial payment is allowed. Don't disable the one on which partail was used. */
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:162:hardcoded number:          disabled: appliedPaymentForms.length === 0 ? false : (appliedPaymentForms.includes(formattedName) ? true : false)
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:164:hardcoded number:      }).sort((a, b) => a.label < b.label ? -1 : 1);
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:167:hardcoded string:        name: "provider",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:168:hardcoded string:        type: 'select',
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:169:hardcoded string:        label: 'Payment Provider',
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:171:hardcoded string:        disabled: (initialValue.provider == 'SUBSCRIPTION' || (initialValue.provider == "PDC_CCR")) ? true : false,
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:174:hardcoded string:        message: "Please Select Payment Provider",
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:183:hardcoded string:      const initialValue = { provider, amount: "", referenceId: "" };
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:191:hardcoded object:    const { addPayment } = this.props;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:192:hardcoded object:    const { nonEmiForm } = this;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:195:hardcoded variable:    const formInitialValues = nonEmiForm && nonEmiForm.getFieldsValue();
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:203:hardcoded object:    const { removePayment, identifier } = this.props;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:208:hardcoded array:    const { additionalDetails = [] } = this.state;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:209:hardcoded object:    const result = {};
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:210:hardcoded number:    if (additionalDetails.length > 0) {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:212:hardcoded variable:        const name = ele.name;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:213:hardcoded array:        result[name] = formValues[name];
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:214:hardcoded array:        delete formValues[name];
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:222:hardcoded array:    const { requiredDocuments = [], isRandomReferenceId, isAppendRandomDigitToReferenceId } = this.state;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:223:hardcoded variable:    const result = {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:224:hardcoded object:      formValues: {},
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:227:hardcoded variable:    const formValues = await this.nonEmiForm.getFormValues();
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:230:hardcoded string:      const { provider = '', referenceId = '' } = formValues
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:237:hardcoded number:    if (requiredDocuments.length > 0) {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:238:hardcoded array:      result.formValues.attachments = [];
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:239:hardcoded object:      const refs = this.refs || {};
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:241:hardcoded array:        const files = refs[ref].getUploadedFiles();
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:242:hardcoded number:        if (files.length > 0) {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:245:hardcoded string:          this.setError("Please Upload All Required Documents");
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:261:hardcoded number:        ref={`uploadFrom${uuidv4()}`}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:262:hardcoded object:        key={index}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:263:hardcoded object:        documentDetails={docDetails}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:290:hardcoded object:    const { nonEmiPayments, initialValue, isPaymentAssociatedWithLeads, identifier, getAllFilledPayment } = this.props;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:291:hardcoded string:    const amount = get(initialValue, "amount", "");
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:301:hardcoded object:    let { formFields, requiredDocuments, helpText, isPaymentAssociatedWithLeads } = this.state;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:302:hardcoded object:    const { seqNo, totalCount, paymentType, index, initialValue = {} } = this.props;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:303:hardcoded object:    const { isDevEnv } = window
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:304:hardcoded string:    const provider = get(initialValue, "provider", "")
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:305:hardcoded string:    if (provider === "PDC_CCR") {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:306:hardcoded object:      formFields = formFields.map((fields) => { return { ...fields, disabled: true } })
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:308:hardcoded string:    const removeIconDisabled = ["PDC_CCR"] 
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:309:hardcoded string:    const heading = paymentType === "EMI" ? `Down Payment #${index + 1}` : `Payment #${index + 1}`;
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:310:hardcoded variable:    const formItemLayout = {
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:312:hardcoded number:        xs: { span: 4 },
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:313:hardcoded number:        sm: { span: 4 },
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:316:hardcoded number:        xs: { span: 12 },
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:317:hardcoded number:        sm: { span: 12 },
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:324:hardcoded object:          fields={formFields}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:325:hardcoded number:          cols={3}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:326:hardcoded object:          formItemLayout={formItemLayout}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:327:hardcoded object:          heading={heading}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:328:hardcoded string:          className="border-0"
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:329:hardcoded string:          headerClasses="bg-default"
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:330:hardcoded object:          wrappedComponentRef={(inst) => this.nonEmiForm = inst}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:331:hardcoded object:          initialValues={initialValue} />
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:333:hardcoded object:        {helpText && <InfoWrapper description={helpText} />}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:335:hardcoded object:        {requiredDocuments.map((docDetails, index) => this.renderUploadDoc(docDetails, index))}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:338:hardcoded string:          formFields.length > 0 && seqNo === totalCount && !["FOC", "FOC_SWAP", "FOC_DISPATCH"].includes(initialValue.provider) && <>
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:339:hardcoded string:            <Button color="success" onClick={this.addNonEmiPayment}>+</Button>{" "}
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:340:hardcoded string:            {!removeIconDisabled.includes(initialValue.provider) && <Button color="danger" onClick={this.removeNonEmiPayment}>-</Button>
microservices-middleware/client/src/modules/payment/components/nonemi/NonEmiPaymentCard.js:349:hardcoded object:export default connect(null, mapDispatchToProps, null, { forwardRef: true })(NonEmiPaymenCard);