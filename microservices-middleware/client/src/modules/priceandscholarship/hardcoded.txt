microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:29:hardcoded variable:	const mapStateToProps = state => ({
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:30:hardcoded string:	    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:31:hardcoded string:	    leadDetails: get(state, 'auth.leadDetails', {}),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:32:hardcoded string:	    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:33:hardcoded string:	    partnerIdentifierDetails: get(state, 'details.partnerIdentifierDetails', {}),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:34:hardcoded string:	    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:35:hardcoded string:	    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:36:hardcoded string:	    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:37:hardcoded string:	    specialScholarshipConfig: get(state, 'quotation.specialScholarshipConfig', []),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:38:hardcoded string:	    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:39:hardcoded string:	    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:40:hardcoded string:	    customerDetails: get(state, 'priceandscholarship.customerDetails', {}),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:41:hardcoded string:	    partnerAPIResponseDetails: get(state, 'priceandscholarship.partnerAPIResponseDetails', {}),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:42:hardcoded string:	    voucherDetails: get(state, "quotation.reviewDetails.voucherDetails", {})
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:45:hardcoded variable:	const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:79:hardcoded object:	            productConfig: {},
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:80:hardcoded array:	            fields: [],
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:83:hardcoded string:	            acstGiven: "",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:98:hardcoded object:	        this.setState({ nextBtnDisable: mode });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:102:hardcoded object:	        const { identifier, productCombination, partnerIdentifierDetails, leadDetails, customerDetails } = this.props;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:103:hardcoded object:	        let { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:104:hardcoded object:	        const { isScholarship, acstGiven,selectedCourseId,tabletStatus } = this.state
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:105:hardcoded string:	        const partnerId = get(partnerIdentifierDetails, "partnerId", "")
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:106:hardcoded string:	        const { userEmail, directSalesBy, prospectId = "" } = leadDetails
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:108:hardcoded variable:	        const details = await productDetailsForm.getProductDetails();
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:109:hardcoded variable:	        const scholarshipForm = this.scholarshipForm.current
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:110:hardcoded variable:	        const scholarshipDetails = scholarshipForm && await scholarshipForm.validateFields()
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:112:hardcoded string:	        const productDetails = get(details, 'productDetails');
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:116:hardcoded string:	            this.setError("Scholarship details incomplete");
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:120:hardcoded string:	        if (!isEmpty(scholarshipDetails) && ["yes", "no", "bnat"].includes(acstGiven)) {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:121:hardcoded number:	            let scholarshipAddedCount = 0
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:123:hardcoded array:	                if (!size(scholarshipDetails[key])) {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:124:hardcoded number:	                    scholarshipAddedCount = scholarshipAddedCount + 1
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:129:hardcoded string:	                this.setError("Scholarship details incomplete");
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:134:hardcoded object:	        productDetails.isTablet=getTabletStatus({selectedCourseId, tabletStatus});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:139:hardcoded string:	            productDetails.boardValue="";
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:143:hardcoded variable:	            const payload = {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:145:hardcoded string:	                productType: 'aakashCRP',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:158:hardcoded string:	                url: '/api/quotation/product/getProductPriceWithoutQuotation'
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:164:hardcoded object:	        const { history } = this.props;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:165:hardcoded string:	        const url = `${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:170:hardcoded object:	        const { acstGiven } = this.state
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:171:hardcoded object:	        const { leadDetails, partnerIdentifierDetails, partnerAPIResponseDetails, voucherDetails, customerDetails } = this.props
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:172:hardcoded object:	        const { students, minPrice, maxPrice, scholarshipDetails, finalPrice, aakashPriceBreakup, products, priceAndScholarshipId } = productDetails;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:176:hardcoded variable:	            const payload = {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:178:hardcoded number:	                productDetails: students[0].formValues,
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:179:hardcoded object:	                scholarshipDetails: { ...scholarshipDetails },
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:194:hardcoded string:	                url: '/api/quotation/product/storePriceAndScholarShip',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:195:hardcoded string:	                method: 'POST',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:198:hardcoded object:	                this.setState({ error: null });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:200:hardcoded object:	                this.setState({ showConfirmationModal: true, loading: false })
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:202:hardcoded object:	                this.setState({ error }, () => {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:210:hardcoded object:	        const { history } = this.props;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:211:hardcoded string:	        const url = `${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:220:hardcoded object:	        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:221:hardcoded object:	        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:222:hardcoded object:	        const { isScholarship, nextBtnDisable } = this.state
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:229:hardcoded variable:	        const details = await productDetailsForm.getProductDetails();
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:230:hardcoded variable:	        const scholarshipForm = this.scholarshipForm.current
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:231:hardcoded variable:	        const scholarshipDetails = scholarshipForm && await scholarshipForm.validateFields()
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:232:hardcoded string:	        const productDetails = get(details, 'productDetails');
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:236:hardcoded string:	            this.setError("Scholarship details incomplete");
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:240:hardcoded object:	            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:242:hardcoded string:	                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:246:hardcoded string:	                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:249:hardcoded string:	                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:250:hardcoded object:	                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:257:hardcoded object:	        let { productConfig,course: selectedCourse, city: selectedCity, state: selectedState, initialClass, integratedBatch ,branch:selectedBranch,isBranchSelected,courseDuration, typeOfClass: selectedTypeOfClass ,subCourse,courseIdOptions, isJct, selectedCourseId,tabletStatus,hasTablet,isCourseSelected} = this.state;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:258:hardcoded array:	        const { Boards = [], Products = [], branches: crpBranches, courseData = {},supplementaryTablets=[]} = productConfig || {};
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:259:hardcoded string:	        !selectedCourse && this.handleChanges('K10/K12', 'course');
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:260:hardcoded variable:	        const states = getStates(crpBranches)
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:261:hardcoded variable:	        const cities = getCities(crpBranches, selectedState)
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:262:hardcoded variable:	        const branches = getBranches(crpBranches, selectedCity)
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:263:hardcoded variable:	        let hasStateBoard=false,hasJct=false;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:266:hardcoded string:	        const { productType = "aakashCRP", authDetails, leadDetails } = this.props;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:267:hardcoded object:	        const productConfiguration = find(Products, { formattedName: productType }) || {};
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:268:hardcoded array:	        const { batch = [], typeOfClass = [] } = productConfiguration || {};
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:269:hardcoded string:	        const accountNo = get(leadDetails, 'accountNumber')
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:270:hardcoded object:	        const { env, user } = authDetails;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:271:hardcoded string:	        const vertical = (get(user, "vertical", ""))
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:272:hardcoded string:	        const unit = (get(user, "unit", ""))
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:273:hardcoded string:	        const isDevEnv = ["development", "local"].includes(env)
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:274:hardcoded string:	        const userPermissions = get(user, 'permissions', []);
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:275:hardcoded variable:	        const isPriviledgedUser = userPermissions.includes(leadquaredRelatedPermissions.allownMultipleOrderOnSameProspectId);
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:277:hardcoded string:	        const selectedBoardConfig = find(Boards, { formattedName: "CBSE" }) || {};
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:278:hardcoded variable:	        let classes = cloneDeep(getClasses(selectedBoardConfig));
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:280:hardcoded object:	        const akashSubCourses = getAakashSubCourses({ courseData, initialClass, productType});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:281:hardcoded object:	        const courseDurationOptions =  getDurationOptions({ initialClass: initialClass, courseData});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:282:hardcoded object:	        hasTablet = !isEmpty(selectedCourseId) ? getTabletStatus({selectedCourseId, tabletStatus}) : false
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:284:hardcoded variable:	        let fields = [
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:286:hardcoded string:	                type: 'hidden',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:287:hardcoded string:	                name: 'course',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:288:hardcoded string:	                label: 'Select Course',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:289:hardcoded string:	                options: get(productConfiguration, 'courses'),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:290:hardcoded string:	                value: 'K10/K12',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:291:hardcoded string:	                message: "Please select Course"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:293:hardcoded string:	                type: 'select',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:294:hardcoded string:	                name: 'state',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:295:hardcoded string:	                label: 'Select State',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:299:hardcoded string:	                message: "Please select State"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:302:hardcoded string:	                type: 'select',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:303:hardcoded string:	                name: 'city',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:304:hardcoded string:	                label: 'Select City',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:308:hardcoded string:	                message: "Please select City"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:310:hardcoded string:	                type: selectedCity ? 'select' : 'hidden',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:311:hardcoded string:	                name: 'branch',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:312:hardcoded string:	                label: 'Select Branch',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:316:hardcoded string:	                message: "Please select Branch"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:318:hardcoded string:	                type: 'select',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:319:hardcoded string:	                name: 'initialClass',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:320:hardcoded string:	                label: "Initial Grade",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:322:hardcoded object:	                options: filterAakashInitialClass({ classes: classes, integratedBatch: integratedBatch, isDevEnv, accountNo, vertical, isPriviledgedUser, unit }),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:324:hardcoded string:	                message: "Please select Initial Grade"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:326:hardcoded string:	                type: 'select',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:327:hardcoded string:	                name: 'board',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:328:hardcoded string:	                label: "Select Board",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:329:hardcoded string:	                value:(!hasStateBoard )?"CBSE":"",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:331:hardcoded string:	                 options:!hasStateBoard ? [{ label: "CBSE", value: "CBSE" }]:[{ label: "CBSE", value: "CBSE" }, { label: "STB", value: "STB" }],
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:333:hardcoded string:	                message: "Select Board"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:335:hardcoded string:	                type: this.state.hasStateBoardDropdown? 'select' : 'hidden',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:336:hardcoded string:	                name: 'boardValue',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:337:hardcoded string:	                label: "Select State Board",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:338:hardcoded string:	                required: (this.state.board==="STB")?true:false,
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:339:hardcoded string:	                options:[{ label: selectedState+" Board", value: selectedState+" Board", }],
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:341:hardcoded string:	                message: "Select State Board"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:343:hardcoded string:	                type: ELIGIBLE_ACCOUNTS_FOR_AAKASH_CRP.K12.includes(accountNo) ? 'readonly' : 'hidden',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:344:hardcoded string:	                name: "note",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:345:hardcoded string:	                label: "Note : For advance admission of class 10, select 11 in initial grade",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:348:hardcoded string:	                type: 'hidden',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:349:hardcoded string:	                name: 'finalClass',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:350:hardcoded string:	                label: "Final Grade",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:352:hardcoded object:	                options: filterAakashFinalClass({ initialClass: initialClass, classes: classes, isDevEnv }),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:354:hardcoded string:	                message: "Final Grade"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:356:hardcoded string:	                type: 'select',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:357:hardcoded string:	                name: 'subCourse',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:358:hardcoded string:	                label: 'Select Sub Course',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:362:hardcoded string:	                message: "Please select Sub Course"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:364:hardcoded string:	                type: 'select',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:365:hardcoded string:	                name: 'batch',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:366:hardcoded string:	                label: 'Select Preferred Batch',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:370:hardcoded string:	                message: "Please select Preferred Batch"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:372:hardcoded string:	                type: 'hidden',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:373:hardcoded string:	                name: 'integratedBatch',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:374:hardcoded string:	                label: "Do you want to enroll for integrated batch?",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:377:hardcoded string:	                type: integratedBatch ? 'hidden' : 'select',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:378:hardcoded string:	                name: 'typeOfClass',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:379:hardcoded string:	                label: 'Select ClassType',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:383:hardcoded string:	                message: "Please select Batch"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:385:hardcoded string:	                type: hasJct && isBranchSelected?'checkbox':'hidden',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:386:hardcoded string:	                name: 'isJct',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:387:hardcoded string:	                label: "JCT Required",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:392:hardcoded string:	                type:  'select',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:393:hardcoded string:	                name: 'courseDuration',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:394:hardcoded string:	                label: "Please Select Duration",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:398:hardcoded string:	                message: "Please Select Duration"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:400:hardcoded string:	                type: 'select',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:401:hardcoded string:	                name: 'selectedCourseId',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:402:hardcoded string:	                label: "Please Select Course",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:406:hardcoded string:	                message: "Please Select Course"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:409:hardcoded string:	                type: 'select',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:410:hardcoded string:	                name: 'selectedTablet',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:411:hardcoded string:	                label: 'Please Select Tablet',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:413:hardcoded string:	                message: "Please Select tablet"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:415:hardcoded string:	                type: 'hidden',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:416:hardcoded string:	                name: 'validity',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:417:hardcoded string:	                label: "Please Select Validity",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:419:hardcoded string:	                message: "Please Select Validity"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:421:hardcoded string:	                type: hasTablet && isCourseSelected? 'readonly' : 'hidden',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:422:hardcoded string:	                name: "isTablet",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:424:hardcoded string:	                label:  "Note: Tablet is already included in the pricing packaging. No separate selection is required. ",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:434:hardcoded object:	        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:435:hardcoded variable:	        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:436:hardcoded string:	        if (name == "state") {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:437:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ city: "", branch: "", initialClass: "",board:"",boardValue:"",finalClass: "",subCourse: "",batch: "",integratedBatch: "", typeOfClass: "", courseDuration:"",  selectedCourseId:""});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:438:hardcoded object:	            this.setState({hasStateBoardDropdown:false,isBranchSelected:false, isJct:false,hasTablet:false,isCourseSelected:false})
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:440:hardcoded string:	        if (name == "city") {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:441:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ branch: "", initialClass: "",board:"",boardValue:"",finalClass: "", subCourse: "",batch: "",integratedBatch: "", typeOfClass: "", courseDuration:"",  selectedCourseId:""});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:442:hardcoded object:	            this.setState({hasStateBoardDropdown:false,isBranchSelected:false, isJct:false,hasTablet:false,isCourseSelected:false})
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:445:hardcoded string:	        if (name == "branch") {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:446:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ initialClass: "",board:"",boardValue:"",finalClass: "", subCourse: "",batch: "",integratedBatch: "", typeOfClass: "", courseDuration:"",  selectedCourseId:""});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:447:hardcoded string:	            this.setState({isBranchSelected:true,hasStateBoardDropdown:false, isJct:false,hasTablet:false,isCourseSelected:false, board: "CBSE"})
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:450:hardcoded string:	        if (name == "initialClass") {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:451:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ board:"",boardValue:"", subCourse: "",batch: "",integratedBatch: "", typeOfClass: "", courseDuration:"",  selectedCourseId:""});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:452:hardcoded object:	            this.setState({isJct:false,hasStateBoardDropdown:false,hasTablet:false,isCourseSelected:false})
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:455:hardcoded string:	        if(name=="board" && value=="STB"){
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:456:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ boardValue:"", subCourse: "",batch: "",integratedBatch: "", typeOfClass: "", courseDuration:"",  selectedCourseId:""});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:457:hardcoded object:	            this.setState({hasStateBoardDropdown:true,isJct:false,hasTablet:false,isCourseSelected:false})
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:460:hardcoded string:	        if(name=="board" && value=="CBSE"){
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:461:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ boardValue:"", subCourse: "",batch: "",integratedBatch: "", typeOfClass: "", courseDuration:"",  selectedCourseId:""})
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:462:hardcoded object:	            this.setState({hasStateBoardDropdown:false,isJct:false,hasTablet:false,isCourseSelected:false})
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:465:hardcoded string:	        if(name=="boardValue"){
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:466:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({subCourse: "",batch: "",integratedBatch: "", typeOfClass: "", courseDuration:"",  selectedCourseId:""}) 
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:467:hardcoded object:	            this.setState({isJct:false,hasTablet:false,isCourseSelected:false})
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:470:hardcoded string:	        if(name=="subCourse"){
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:471:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({batch: "",integratedBatch: "", typeOfClass: "", courseDuration:"",  selectedCourseId:""}) 
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:472:hardcoded object:	            this.setState({isJct:false,hasTablet:false,isCourseSelected:false})
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:475:hardcoded string:	        if(name=="batch"){
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:476:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({integratedBatch: "", typeOfClass: "", courseDuration:"",  selectedCourseId:""}) 
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:477:hardcoded object:	            this.setState({isJct:false,hasTablet:false,isCourseSelected:false})
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:481:hardcoded string:	        if (name == "integratedBatch") {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:482:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ typeOfClass: "", courseDuration:"",  selectedCourseId:""});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:483:hardcoded object:	            this.setState({isJct:false,hasTablet:false,isCourseSelected:false})
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:486:hardcoded string:	        if(name=="typeOfClass"){
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:487:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ courseDuration:"",  selectedCourseId:""});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:488:hardcoded object:	            this.setState({isJct:false,hasTablet:false,isCourseSelected:false})  
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:491:hardcoded string:	        if(name=="isJct"){
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:492:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ courseDuration:"",  selectedCourseId:""});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:493:hardcoded object:	            this.setState({hasTablet:false,isCourseSelected:false})  
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:496:hardcoded string:	        if (name == "courseDuration") {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:497:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ selectedCourseId:""});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:498:hardcoded array:	            this.setState({courseIdOptions:[],hasTablet:false,isCourseSelected:false});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:501:hardcoded string:	        if(name=="selectedCourseId"){
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:502:hardcoded object:	            this.setState({isCourseSelected:true})   
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:505:hardcoded array:	            [name]: value,
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:512:hardcoded object:	        this.setState({ error });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:517:hardcoded object:	            this.setState({ productConfig: nextProps.productConfig }, async () => await this.getFields());
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:521:hardcoded object:	            this.setState({ loading: nextProps.loading })
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:526:hardcoded object:	        const { productDetails, productConfig, productType, leadDetails } = this.props;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:528:hardcoded string:	        const { studentName = "", studentMobile = "" } = leadDetails
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:529:hardcoded variable:	        const customerDetails = {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:531:hardcoded string:	            primaryMobileNo: studentMobile.includes("+91") ? studentMobile.split("-")[1] : studentMobile,
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:536:hardcoded string:	        if (productType === get(productDetails, 'productType')) {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:537:hardcoded string:	            const formValues = get(productDetails, 'students[0].formValues');
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:541:hardcoded string:	                course: get(formValues, 'course'),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:542:hardcoded string:	                board: get(formValues, 'board'),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:543:hardcoded string:	                initialClass: get(formValues, 'initialClass'),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:544:hardcoded string:	                finalClass: get(formValues, 'finalClass'),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:545:hardcoded string:	                subCourse: get(formValues, 'subCourse'),
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:550:hardcoded string:	        this.setState({ productConfig, course: 'K10/K12', customerDetails });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:559:hardcoded object:	        this.setState({ isScholarship: !this.state.isScholarship, error: null })
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:567:hardcoded object:	        const { authDetails } = this.props
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:568:hardcoded string:	        if (this.state.acstGiven !== "yes" && authDetails.env !== "production") {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:569:hardcoded object:	            this.setState({ isPSIDexist: false });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:576:hardcoded object:	        this.setState({ acstGiven: value, error: null });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:577:hardcoded string:	        if (value == "yes") {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:578:hardcoded object:	            this.setState({ isPSIDexist: false });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:586:hardcoded object:	        this.setState({ loading: true, isPSIDexist: true });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:589:hardcoded string:	            url: '/api/quotation/product/checkAakashPSID',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:590:hardcoded string:	            method: 'POST',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:591:hardcoded object:	            body: { customerDetails }
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:593:hardcoded string:	            const aakashPSID = get(response, 'data.aakashPSID', null);
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:595:hardcoded string:	            if (!size(aakashPSID) || ["null", null, ""].includes(aakashPSID)) {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:599:hardcoded string:	                    error: "No student found."
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:602:hardcoded variable:	                const partnerIdentifierDetails = {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:603:hardcoded string:	                    "identifierType": "PSID",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:604:hardcoded string:	                    "partnerId": aakashPSID
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:608:hardcoded object:	                this.setState({ loading: false, isPSIDexist: true });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:612:hardcoded object:	            this.setState({ error: JSON.stringify(error), loading: false, isPSIDexist: false });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:617:hardcoded string:	        const { initialClass = "" } = this.state;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:618:hardcoded string:	        let finalClass = "";
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:619:hardcoded string:	        if (initialClass.toString() == "11" || initialClass.toString() == "12") {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:620:hardcoded string:	            finalClass = "12"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:621:hardcoded string:	        } else if (initialClass.toString() == "12+") {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:622:hardcoded string:	            finalClass = "12+"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:628:hardcoded object:	        const { authDetails } = this.props;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:629:hardcoded object:	        const { env, user } = authDetails || {};
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:630:hardcoded string:	        const vertical = (get(user, "vertical", ""))
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:631:hardcoded variable:	        const unitInSnakeCase = snakeCase(unit);
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:636:hardcoded object:	        const { acstForm } = this;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:637:hardcoded string:	        const antDForm = get(acstForm, 'props.form');
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:638:hardcoded string:	        antDForm && antDForm.setFieldsValue({ "acst-given": "" });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:640:hardcoded object:	        this.setState({ acstGiven: null, isPSIDexist: true });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:644:hardcoded array:	        let getCourseIdOptions=[];
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:645:hardcoded array:	        let tabletOption=[];
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:646:hardcoded string:	         const {  branch, initialClass,subCourse, typeOfClass:selectedTypeOfClass,  courseDuration,courseIdOptions,isJct,board,boardValue="",tabletStatus}=this.state;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:649:hardcoded object:	           let courseIdOptionsData = await getProductCourseDetails({  branch, initialClass,subCourse, selectedTypeOfClass,  courseDuration,isJct,board,boardValue});
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:652:hardcoded object:	            this.setState({courseIdOptions:getCourseIdOptions, tabletStatus:tabletOption})
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:655:hardcoded object:	            //this.setState({ error, loading: false });
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:660:hardcoded object:	        this.setState({ showConfirmationModal: false, loading: false })
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:664:hardcoded object:	        const { error, productConfig, productLearningType, isScholarship, initialClass, acstGiven, loading, showConfirmationModal, isPSIDexist } = this.state;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:665:hardcoded object:	        const { productType, leadDetails, identifier, authDetails } = this.props;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:666:hardcoded object:	        const { isOutboundOrderPunchingRestricted } = authDetails;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:667:hardcoded string:	        const { LeadSource = "" } = leadDetails || {};
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:668:hardcoded array:	        const { scholarshipConfigs = [] } = productConfig || {};
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:669:hardcoded array:	        const fields = productConfig ? this.getFields() : [];
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:670:hardcoded number:	        const initialValues = { finalClass: this.getFinalClass(), validity: 2022 ,isJct:false,isTablet:false, supplementaryTablets:{}}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:671:hardcoded variable:	        const specialScholarshipConfig = this.props.specialScholarshipConfig;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:672:hardcoded object:	        const { user } = authDetails || {}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:673:hardcoded string:	        const { vertical = "", unit = "" } = user;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:674:hardcoded string:	        const userPermissions = get(user, 'permissions', []);
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:675:hardcoded variable:	        const isPriviledgedUser = userPermissions.includes(leadquaredRelatedPermissions.allownMultipleOrderOnSameProspectId);
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:676:hardcoded object:	        const { env } = authDetails;
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:677:hardcoded string:	        if (["development", "local"].includes(env)) {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:678:hardcoded string:	            if (LeadSource.toLowerCase().trim().replace(/\s+/g, '') === "outboundphonecall" && isOutboundOrderPunchingRestricted) {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:684:hardcoded object:	            <LoadingWrapper loading={loading}>
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:685:hardcoded string:	                {!this.decideAakashCRPOrderPunching(unit, isPriviledgedUser) && <p style={{ textAlign: "center", color: "Red" }}>User is not authenticated to use this tab</p>}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:686:hardcoded object:	                {this.decideAakashCRPOrderPunching(unit, isPriviledgedUser) && <> <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:688:hardcoded string:	                        ref="productDetailsForm"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:689:hardcoded object:	                        productLearningType={productLearningType}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:690:hardcoded object:	                        productType={productType}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:691:hardcoded object:	                        fields={fields}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:692:hardcoded object:	                        initialValues={initialValues}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:693:hardcoded string:	                        heading={"Pricing and Scholarship"}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:697:hardcoded string:	                        <div style={{ margin: "2%" }}>
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:698:hardcoded string:	                            <Input type="checkbox" defaultChecked={isScholarship} onChange={() => this.setScholarship()} />{' '}  <i class="fa fa-graduation-cap" aria-hidden="true"></i> Have you appeared for any Scholarship Exam ?
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:701:hardcoded object:	                            wrappedComponentRef={(inst) => this.acstForm = inst}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:703:hardcoded string:	                                type: 'select',
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:705:hardcoded string:	                                // label: "Have you appeared for any Aakash Scholarship Exam? (iACST/ACST/ANTHE/AKTHE)",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:706:hardcoded string:	                                // style: { width: 500, margin: "10px" },
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:708:hardcoded string:	                                // placeholder: "Select",
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:711:hardcoded string:	                                { label: "Exams Conducted by Aakash (ACST/ACST/ANTHE/AKTHE)", value: "yes" },
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:712:hardcoded string:	                                // { label: "Exam Conducted by BYJU'S (BNAT)", value: "bnat" },
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:713:hardcoded string:	                                { label: "None of the above", value: "no" }],
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:716:hardcoded string:	                        {acstGiven === "no" && isScholarship && specialScholarshipConfig && <SpecialScholarship
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:717:hardcoded object:	                            isUploadRequired={false} ref={this.scholarshipForm}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:718:hardcoded object:	                            scholarshipConfigs={specialScholarshipConfig} selectedClass={initialClass}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:719:hardcoded object:	                            identifier={identifier} authToken={authDetails.token}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:720:hardcoded object:	                            resetPrice={() => this.props.resetPrice(true)}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:721:hardcoded object:	                            getPsidforCatB={this.getPsidforCatB} />
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:723:hardcoded string:	                        {acstGiven === "yes" && scholarshipConfigs && isScholarship && <Scholarship ref={this.scholarshipForm} scholarshipConfigs={scholarshipConfigs} resetPrice={() => this.props.resetPrice(true)} />}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:724:hardcoded string:	                        {acstGiven === "bnat" && isScholarship && specialScholarshipConfig && <SpecialScholarship
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:725:hardcoded object:	                            acstGiven={acstGiven} isUploadRequired={false}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:726:hardcoded object:	                            ref={this.scholarshipForm} scholarshipConfigs={specialScholarshipConfig}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:727:hardcoded object:	                            selectedClass={initialClass} identifier={identifier} authToken={authDetails.token}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:728:hardcoded object:	                            resetPrice={() => this.props.resetPrice(true)}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:729:hardcoded object:	                            getPsidforCatB={this.getPsidforCatB} />
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:734:hardcoded string:	                        ref='fetchComp'
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:735:hardcoded object:	                        onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:736:hardcoded object:	                        getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:737:hardcoded object:	                        changeNextBtnMode={this.changeNextBtnMode}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:738:hardcoded object:	                        productType={productType}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:739:hardcoded object:	                        setError={this.setError}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:740:hardcoded string:	                        productCombination={"aakash_crp"}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:741:hardcoded object:	                        isScholarshipChecked={isScholarship}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:744:hardcoded string:	                    <Button loading={loading} className="next-btn" size="large" onClick={() => { this.onClickNextBtn() }} color="info">
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:745:hardcoded string:	                        <i class="fa fa-lock" aria-hidden="true"></i> Lock Price and Scholarship
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:747:hardcoded object:	                    {showConfirmationModal && <PriceAndScholarshipConfirmationModal onClose={this.onClosePriceAndScholarshipConfirmationModal} />}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:750:hardcoded string:	                            ref="customerInfoModalForm"
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:751:hardcoded object:	                            error={error}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:752:hardcoded object:	                            setError={this.setError}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:753:hardcoded object:	                            checkPSIDExist={this.checkPSIDExist}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:754:hardcoded object:	                            onCloseCustomerDetailForm={this.onCloseCustomerDetailForm}
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarship.js:765:hardcoded object:	export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(PriceAndScholarship);microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:12:hardcoded variable:	const mapStateToProps = state => ({
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:13:hardcoded string:	    customerDetails: get(state, 'priceandscholarship.customerDetails', {}),
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:14:hardcoded string:	    leadDetails: get(state, 'priceandscholarship.leadDetails', {})
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:17:hardcoded variable:	const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:35:hardcoded object:	        const { customerInfoFrom } = this;
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:36:hardcoded object:	        const { dobCheck, dob } = this.state
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:37:hardcoded variable:	        const customerInfoFromValues = customerInfoFrom && (await customerInfoFrom.getFormValues());
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:41:hardcoded object:	            let { customerDetails } = this.props;
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:43:hardcoded object:	                const { studentName, primaryMobileNo, parentName, dobCheck} = customerInfoFromValues;
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:45:hardcoded string:	                    "studentName": studentName, 
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:46:hardcoded string:	                    "primaryMobileNo": primaryMobileNo,
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:47:hardcoded string:	                    "parentName": parentName,
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:48:hardcoded string:	                    "dob": dob
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:50:hardcoded object:	                this.setState({ isModalVisible: false });
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:58:hardcoded string:	            ["dob"]: new Date(value),
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:59:hardcoded string:	            ["dobCheck"]: false
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:62:hardcoded object:	            this.setState({ dobCheck: true })
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:67:hardcoded array:	        this.setState({ [name]: value });
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:71:hardcoded object:	    //     const { customerDetails } = this.props;
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:81:hardcoded object:	        const { customerDetails } = this.state;
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:83:hardcoded variable:	        const fields = [
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:85:hardcoded string:	                type: 'text',
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:86:hardcoded string:	                name: 'studentName',
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:87:hardcoded string:	                label: 'Student Name',
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:90:hardcoded array:	                    pattern: new RegExp(/^[a-zA-Z\s\.]+$/), message: `Enter valid name`
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:92:hardcoded string:	                value: get(customerDetails, "studentName","")
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:94:hardcoded string:	                type: 'text',
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:95:hardcoded string:	                name: 'parentName',
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:96:hardcoded string:	                label: 'Parent Name',
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:99:hardcoded array:	                    pattern: new RegExp(/^[a-zA-Z\s\.]+$/), message: `Enter valid name`
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:101:hardcoded string:	                value: get(customerDetails, 'parentName', ''),
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:103:hardcoded string:	                type: 'number',
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:104:hardcoded string:	                name: 'primaryMobileNo',
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:105:hardcoded string:	                label: 'Contact No.',
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:107:hardcoded string:	                message: "Please enter Contact No.",
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:108:hardcoded string:	                value:  get(customerDetails, "primaryMobileNo",""),
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:110:hardcoded number:	                    pattern: new RegExp(/^(\+\d{1,3}[- ]?)?\d{10}$/), message: `Enter 10 digit valid Mobile No`
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:119:hardcoded object:	        const { customerDetails , error } = this.props;
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:123:hardcoded string:	                studentName: get(customerDetails,"studentName", ""),
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:124:hardcoded string:	                primaryMobileNo:  get(customerDetails,"primaryMobileNo", ""),
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:126:hardcoded string:	            dob: get(customerDetails, 'dob') ? new Date(get(customerDetails, 'dob')) : new Date(),
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:134:hardcoded object:	        this.setState({ isModalVisible: false });
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:139:hardcoded object:	        let { customerDetails, isModalVisible, error, dob, dobCheck } = this.state;
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:140:hardcoded variable:	        const customerDetailFields = this.getCustomerDetailFields();
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:142:hardcoded object:	        const { Item } = Form;
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:143:hardcoded variable:	        const defaultFormItemLayout = {
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:145:hardcoded number:	                xs: { span: 24 },
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:146:hardcoded number:	                sm: { span: 24 },
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:147:hardcoded number:	                lg: { span: 8 },
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:150:hardcoded number:	                xs: { span: 24 },
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:151:hardcoded number:	                sm: { span: 16 },
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:152:hardcoded number:	                lg: { span: 10 },
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:157:hardcoded string:	            <Modal title="Enter Student Details" 
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:158:hardcoded object:	            closable={false} visible={isModalVisible} onOk={this.getProductDetails} onCancel={this.onCloseModal}>
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:159:hardcoded string:	                {error && <ErrorWrapper error={"No student exist for the given detail."} />}
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:162:hardcoded object:	                    fields={customerDetailFields}
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:163:hardcoded object:	                    wrappedComponentRef={(inst) => this.customerInfoFrom = inst}
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:164:hardcoded object:	                    initialValues={{customerDetails}}
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:166:hardcoded string:	                <div className="cardborder-0" style={{ margin: 10 }}>
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:167:hardcoded string:	                    <div className="card-body">
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:168:hardcoded string:	                        <Form layout="vertical" {...defaultFormItemLayout} colon={true}>
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:170:hardcoded string:	                                label={<div><span style={{ "color": "red" }}> *</span><span> DOB :&nbsp;</span></div>}
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:173:hardcoded string:	                                    defaultValue={moment(dob, 'YYYY/MM/DD')}
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:174:hardcoded string:	                                    format='YYYY/MM/DD'
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:175:hardcoded object:	                                    onChange={(val) => this.onChangeStudentDOB(val)}
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:177:hardcoded string:	                                {dobCheck && <span style={{ "color": "red" }}>Please enter DOB.</span>}
microservices-middleware/client/src/modules/priceandscholarship/CustomerInfoModal.js:188:hardcoded object:	export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(CustomerInfoModal);
microservices-middleware/client/src/modules/priceandscholarship/priceAndScholarshipReducer.js:1:hardcoded string:	export const SAVE_CUSTOMER_DETAIL_REQUEST = '/sales/SAVE_CUSTOMER_DETAIL_REQUEST';
microservices-middleware/client/src/modules/priceandscholarship/priceAndScholarshipReducer.js:2:hardcoded string:	export const SAVE_CUSTOMER_DETAIL_SUCCESS = '/sales/SAVE_CUSTOMER_DETAIL_SUCCESS';
microservices-middleware/client/src/modules/priceandscholarship/priceAndScholarshipReducer.js:3:hardcoded string:	export const SAVE_CUSTOMER_DETAIL_FAILURE = '/sales/SAVE_CUSTOMER_DETAIL_FAILURE';
microservices-middleware/client/src/modules/priceandscholarship/priceAndScholarshipReducer.js:4:hardcoded string:	export const SAVE_PARTNER_API_RESPONSE_DETAILS = '/sales/SAVE_PARTNER_IDENTIFIER_DETAILS'
microservices-middleware/client/src/modules/priceandscholarship/priceAndScholarshipReducer.js:6:hardcoded object:	const saveCustomerRequest = () => ({ type: SAVE_CUSTOMER_DETAIL_REQUEST });
microservices-middleware/client/src/modules/priceandscholarship/priceAndScholarshipReducer.js:7:hardcoded object:	const saveCustomerSuccess = (response) => ({ type: SAVE_CUSTOMER_DETAIL_SUCCESS, response });
microservices-middleware/client/src/modules/priceandscholarship/priceAndScholarshipReducer.js:8:hardcoded object:	const savePartnerAPIResponseDetails = (partnerAPIResponseDetails) => ({ type: SAVE_PARTNER_API_RESPONSE_DETAILS, partnerAPIResponseDetails });
microservices-middleware/client/src/modules/priceandscholarship/priceAndScholarshipReducer.js:11:hardcoded variable:	export const saveCustomerDetails = ( customerDetails ) => dispatch => {
microservices-middleware/client/src/modules/priceandscholarship/priceAndScholarshipReducer.js:13:hardcoded object:	    return dispatch(saveCustomerSuccess({ customerDetails }));
microservices-middleware/client/src/modules/priceandscholarship/priceAndScholarshipReducer.js:16:hardcoded variable:	export const savePartnerAPIResponse = (partnerAPIResponseDetails) => dispatch => {
microservices-middleware/client/src/modules/priceandscholarship/priceAndScholarshipReducer.js:20:hardcoded object:	export default (state = {}, action) => {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarshipConfirmationModal.js:4:hardcoded variable:	const PriceAndScholarshipConfirmationModal = (props) => {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarshipConfirmationModal.js:5:hardcoded array:	    const [isModalVisible, setIsModalVisible] = useState(true);
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarshipConfirmationModal.js:7:hardcoded variable:	    const handleOk = () => {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarshipConfirmationModal.js:12:hardcoded variable:	    const handleCancel = () => {
microservices-middleware/client/src/modules/priceandscholarship/PriceAndScholarshipConfirmationModal.js:19:hardcoded string:	            <Modal title="Price and Scholarship Locked" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>
