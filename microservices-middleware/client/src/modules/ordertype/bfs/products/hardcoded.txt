microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:8:hardcoded string:	} from 'modules/product/components/productHelper';
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:20:hardcoded variable:	const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:21:hardcoded string:	    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:22:hardcoded string:	    leadDetails: get(state, 'auth.leadDetails'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:23:hardcoded string:	    salesDetails: get(state, "details.salesDetails"),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:24:hardcoded string:	    customerDetails: get(state, 'details.customerDetails'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:25:hardcoded string:	    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:26:hardcoded string:	    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:27:hardcoded string:	    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:28:hardcoded string:	    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:29:hardcoded string:	    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:30:hardcoded string:	    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:31:hardcoded string:	    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:32:hardcoded string:	    listOfManagers: get(state, 'product.eligibleManagerList', [])
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:35:hardcoded variable:	const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:59:hardcoded object:	            productConfig: {},
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:60:hardcoded array:	            fields: [],
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:69:hardcoded object:	        const { initialClass, finalClass, addByjusClassCourses, addTlpCourse, isByjusMathNativeApp, validity } = this.state;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:70:hardcoded object:	        const { productCombination, identifier, existingProfiles, authDetails, productType, user, listOfManagers } = this.props;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:71:hardcoded object:	        const { productDetailsForm, byjusMathDetailsForm} = this.refs;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:72:hardcoded object:	        const { env, featureEnableList } = authDetails || {};
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:73:hardcoded variable:	        const isPrivilegedUser = checkIsPrivilegedUser(user);
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:74:hardcoded string:	        const isEpicEnabled = get(featureEnableList, 'epic_enable_user_list', "");
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:75:hardcoded string:	        const isEpicSamplerEnabled = get(featureEnableList, 'byjusmath_epic_sampler_bda');
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:76:hardcoded string:	        const isDevEnv = ["development", "local"].includes(env)
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:78:hardcoded object:	            this.setState({ isByjusMathNativeApp: true });
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:80:hardcoded variable:	        const details = await productDetailsForm.getProductDetails();
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:81:hardcoded variable:	        const byjusMathDetailsFormValues = isDevEnv ? 
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:82:hardcoded array:	            byjusMathDetailsForm && (await byjusMathDetailsForm.getMentoringValues()) : [];
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:83:hardcoded string:	        const productDetails = get(details, 'productDetails') || {};
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:93:hardcoded string:	            productDetails['tabletId'] = this.state[`tabletId`];
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:94:hardcoded string:	            productDetails['usageMode'] =  "native_app";
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:95:hardcoded string:	            productDetails['subCourse'] = "";
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:97:hardcoded string:	        productDetails['validity'] = validity;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:99:hardcoded string:	            productDetails['mentoringDetails'] = get(byjusMathDetailsFormValues, 'mentoring', []);
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:100:hardcoded string:	            productDetails['bhlpCourseDetails'] = get(byjusMathDetailsFormValues, 'courseInfo', {});
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:104:hardcoded string:	        if (productType == "combo" && (finalClass === initialClass && !addByjusClassCourses && !addTlpCourse)) {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:105:hardcoded string:	            this.setError("Minimum 2 years product needs to be selected in Combo section to proceed")
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:109:hardcoded number:	        if (existingProfiles.length > 0 && productDetails) {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:110:hardcoded variable:	            const isValidate = validateProfileSelection(productDetails);
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:115:hardcoded variable:	            const payload = {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:119:hardcoded string:	                mentoringCount: get(details, 'mentoringCount'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:120:hardcoded string:	                couponDetails: get(details, 'couponDetails'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:122:hardcoded string:	                mentoringDetails: get(byjusMathDetailsFormValues, 'mentoring', []),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:123:hardcoded string:	                bhlpCourseDetails: get(byjusMathDetailsFormValues, 'courseInfo', {}),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:130:hardcoded object:	                url: `/api/bfs/product/${productType}`
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:137:hardcoded object:	        const { identifier, productCombination, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:138:hardcoded object:	        const { initialClass } = this.state;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:140:hardcoded string:	        let orderPunchingType = (initialClass === '0') ? "advance_order" : "NORMAL_ORDER";
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:142:hardcoded variable:	        const payload = {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:154:hardcoded string:	                url: '/api/product/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:155:hardcoded string:	                method: 'POST',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:158:hardcoded string:	                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:162:hardcoded object:	                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:164:hardcoded string:	                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:166:hardcoded object:	                this.setState({ error }, () => {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:175:hardcoded object:	        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:176:hardcoded string:	        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:185:hardcoded object:	        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:188:hardcoded object:	            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:190:hardcoded string:	                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:194:hardcoded string:	                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:197:hardcoded string:	                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:198:hardcoded object:	                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:207:hardcoded object:	        const { showProfileSelectionOption, existingProfiles, authDetails, salesDetails, leadDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:208:hardcoded string:	        !selectedCourse && this.handleChanges('K10/K12', 'course');
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:209:hardcoded string:	        const teamManager = get(salesDetails, "directSalesByTeamManager", "");
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:211:hardcoded object:	        const { productType, user, productCombination, listOfManagers } = this.props;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:212:hardcoded object:	        const { vertical } = user;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:213:hardcoded number:	        const { Products = [], Courses = [], Boards = [], Tablets = [], PreK3EligibleManagers = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:215:hardcoded object:	        const productConfiguration = find(Products, { formattedName: productType }) || {};
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:216:hardcoded object:	        const selectedCourseConfig = find(Courses, { formattedName: selectedCourse }) || {};
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:217:hardcoded string:	        const selectedBoardConfig = find(Boards, { formattedName: (selectedBoard || "CBSE") }) || {};
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:218:hardcoded string:	        const classes = getClasses(selectedBoardConfig, user, '', productLearningType, leadDetails, salesDetails, PreK3EligibleManagers);
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:219:hardcoded string:	        let boardOptions = get(selectedCourseConfig, 'boards');
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:220:hardcoded string:	        boardOptions = boardOptions.filter(ele => ele.value != 'STATE');
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:222:hardcoded variable:	        const isPrivilegedUser = checkIsPrivilegedUser(user);
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:223:hardcoded object:	        const { env, featureEnableList } = authDetails;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:224:hardcoded string:	        const isDevEnv = ["development", "local"].includes(env)
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:226:hardcoded variable:	        let fields = [{
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:227:hardcoded string:	            type: 'hidden',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:228:hardcoded string:	            name: 'course',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:229:hardcoded string:	            label: 'Select Course',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:230:hardcoded string:	            options: get(productConfiguration, 'courses'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:231:hardcoded string:	            value: 'K10/K12',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:232:hardcoded string:	            message: "Please select Course"
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:234:hardcoded string:	            type: 'select',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:235:hardcoded string:	            name: 'board',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:236:hardcoded string:	            label: 'Select Board',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:240:hardcoded string:	            message: "Please select Board",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:242:hardcoded string:	            type: selectedBoard === "STATE" ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:243:hardcoded string:	            name: 'state',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:244:hardcoded string:	            label: 'Select State',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:245:hardcoded string:	            required: selectedBoard === "STATE",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:246:hardcoded string:	            options: get(selectedBoardConfig, 'states'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:248:hardcoded string:	            message: "Please select State"
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:250:hardcoded string:	            type: 'select',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:251:hardcoded string:	            name: 'initialClass',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:252:hardcoded string:	            label: "Select Initial Grade",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:254:hardcoded object:	            options: filterInitialClass({ classes, productType, env, isPrivilegedUser, featureEnableList }),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:256:hardcoded string:	            message: "Please Select Initial Grade"
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:258:hardcoded string:	            type: (productType == 'combo') ? 'select' : "hidden",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:259:hardcoded string:	            name: 'finalClass',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:260:hardcoded string:	            label: "Select Final Grade",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:261:hardcoded string:	            required: (productType == 'combo') ? true : false,
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:262:hardcoded object:	            options: filterFinalClass({ classes, selectedInitialClass, featureEnableList, env, productType, productCombination }),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:264:hardcoded string:	            message: "Please Select Final Grade"
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:266:hardcoded string:	            type: 'select',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:267:hardcoded string:	            name: 'validity',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:268:hardcoded string:	            label: "Select Initial Year",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:270:hardcoded object:	            options: filterInitialYear({ env, isPrivilegedUser, featureEnableList }),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:272:hardcoded string:	            message: "Please Select Initial Year"
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:274:hardcoded object:	        //...getByjusClassFormFields({ state: this.state, props: this.props, handleChanges: this.handleChanges, classes, isPrivilegedUser }),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:275:hardcoded object:	        ...getBfsFields({ props: this.props, handleChanges: this.handleChanges, isPrivilegedUser, env, isByjusMathNativeApp, initialGrade: this.state.initialClass, validity, featureEnableList }),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:277:hardcoded string:	            type: 'select',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:278:hardcoded object:	            options: getTablets({ Tablets, productCombination, bfsProductType, env, salesDetails, listOfManagers, isPrivilegedUser, teamManager, user, isByjusMathNativeApp, productType, featureEnableList }),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:279:hardcoded string:	            name: 'tablet',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:280:hardcoded string:	            label: 'Select Tablet',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:282:hardcoded string:	            message: "Please select Tablet",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:285:hardcoded string:	            type: env != "production" ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:286:hardcoded string:	            name: 'deviceType',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:287:hardcoded string:	            label: 'Select Device Type',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:288:hardcoded string:	            required: env != "production" && !IS_UPGRADE_VERTICAL(vertical) ? true : false,
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:291:hardcoded string:	            message: 'Please Select Device Type'
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:293:hardcoded string:	            type: (showProfileSelectionOption && existingProfiles.length > 0 ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:295:hardcoded string:	            name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:296:hardcoded string:	            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:298:hardcoded string:	            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:300:hardcoded string:	                display: 'block',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:301:hardcoded string:	                height: '30px',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:302:hardcoded string:	                lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:304:hardcoded number:	            required: (showProfileSelectionOption && existingProfiles.length > 0 ? true : false)
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:311:hardcoded object:	        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:312:hardcoded variable:	        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:314:hardcoded string:	        if (name == "initialClass") {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:315:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ addByjusClassCourses: false, finalClass: "", tablet: "", validity: "", byjusClassFinalGrade: "" });
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:318:hardcoded string:	                finalClass: "",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:319:hardcoded string:	                subCourse: "",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:324:hardcoded string:	        if (name == "finalClass") {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:325:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ addByjusClassCourses: false, subCourse: "", byjusClassFinalGrade: "" })
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:328:hardcoded string:	                subCourse: "",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:333:hardcoded string:	        if (name == "validity") {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:334:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ validity: "" });
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:338:hardcoded string:	        if (name === "board" || name === "state") {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:340:hardcoded string:	                initialClass: "", finalClass: "", bfsBatch: "",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:341:hardcoded string:	                bfsProductType: "", tablet: "", deviceType: "", validity: ""
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:345:hardcoded string:	        if (name === "courseType") {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:346:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ initialClass: "", subCourse: "", tablet: "", validity: "", board: "" });
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:349:hardcoded string:	        if (name === "bfsProductType") {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:350:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ tablet: "" });
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:353:hardcoded string:	        if (name === "addByjusClassCourses") {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:354:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ byjusClassFinalGrade: "" });
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:357:hardcoded string:	        if (name === "tablet") {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:358:hardcoded number:	            detailsForm && detailsForm.setFieldsValue({ selectD4SDCard: false });
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:360:hardcoded array:	                [`tabletId`]: `T-${value}`,
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:361:hardcoded number:	                [`selectD4SDCard`]: false,
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:367:hardcoded array:	            [name]: value,
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:373:hardcoded object:	        this.setState({ isByjusMathNativeApp: value });
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:377:hardcoded object:	        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:382:hardcoded object:	            this.setState({ productConfig: nextProps.productConfig }, async () => {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:388:hardcoded object:	            const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:389:hardcoded variable:	            const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:391:hardcoded string:	                board: "", initialClass: "", finalClass: "",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:392:hardcoded string:	                tablet: "", bfsBatch: "", bfsProductType: ""
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:398:hardcoded object:	        const { productDetails, productConfig, productType } = this.props;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:400:hardcoded string:	        if (productType === get(productDetails, 'productType')) {
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:401:hardcoded string:	            const formValues = get(productDetails, 'students[0].formValues');
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:405:hardcoded string:	                course: get(formValues, 'course'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:406:hardcoded string:	                board: get(formValues, 'board'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:407:hardcoded string:	                initialClass: get(formValues, 'initialClass'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:408:hardcoded string:	                finalClass: get(formValues, 'finalClass'),
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:409:hardcoded string:	                subCourse: get(formValues, 'subCourse')
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:415:hardcoded string:	        this.setState({ productConfig, course: 'K10/K12' });
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:419:hardcoded object:	        const { error, productConfig, productDetails, errorActions, bfsProductType, classType, tablet, initialClass, grade, board, validity,bfsBatch } = this.state;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:420:hardcoded object:	        const { changeNextBtnMode, productType, productCombination, user, authDetails, identifier, listOfManagers } = this.props;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:421:hardcoded object:	        const { env, featureEnableList } = authDetails || {};
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:422:hardcoded array:	        const fields = productConfig ? this.getFields() : [];
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:423:hardcoded variable:	        const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:424:hardcoded variable:	        const deviceType = getDeviceTypeOptions(env, tablet)
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:425:hardcoded object:	        const initialValue = { ...getProductFormInitialValue(productDetails), deviceType: deviceType }
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:426:hardcoded string:	        const isDevEnv = ['development', 'local'].includes(env);
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:427:hardcoded string:	        const bfsNativeBda = get(listOfManagers, "BYJUS_MATH_NATIVE_BDA_LIST", [])
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:428:hardcoded object:	        const { bdaList } = bfsNativeBda;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:429:hardcoded object:	        const { email } = user;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:430:hardcoded string:	        const isEpicSamplerEnabled = get(featureEnableList, 'byjusmath_epic_sampler_bda');
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:432:hardcoded variable:	        const isBatchesEligible = board && initialClass && validity && bfsBatch;
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:437:hardcoded object:	                <ErrorWrapper error={error} errorActions={errorActions} />
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:438:hardcoded string:	                <div style={{ backgroundColor: "#ffe59a" }}>
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:439:hardcoded string:	                    {(productCombination === "byjus_math" && productType === "combo" && this.state.initialClass === '0') &&
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:441:hardcoded string:	                            {<div style={{ backgroundColor: "#ffe59a", marginTop: "1.2em", padding: "1.1em", fontSize: "0.8em", border: "1px solid #c8bc87" }}><strong> Please note: </strong>Byjus Math will be applicable from Grade 1. UKG is only DBEL. </div>}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:447:hardcoded string:	                        type: 'checkbox',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:448:hardcoded string:	                        name: 'isByjusMathNativeApplicable',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:449:hardcoded string:	                        checkBoxLabel: "For App User",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:454:hardcoded string:	                        type: 'checkbox',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:455:hardcoded string:	                        name: 'isByjusMathNativeApplicable',
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:456:hardcoded string:	                        checkBoxLabel: "For App User",
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:459:hardcoded string:	                    style={{ marginBottom: "-3em" }}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:462:hardcoded string:	                    ref="productDetailsForm"
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:463:hardcoded object:	                    productType={productType}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:464:hardcoded object:	                    fields={fields}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:465:hardcoded object:	                    initialValues={initialValue}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:469:hardcoded string:	                        ref="byjusMathDetailsForm"
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:470:hardcoded object:	                        identifier={identifier}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:471:hardcoded object:	                        initialClass={initialClass}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:472:hardcoded object:	                        board={board}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:473:hardcoded object:	                        bfsBatch={bfsBatch}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:474:hardcoded object:	                        productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:475:hardcoded object:	                        classType={classType}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:479:hardcoded string:	                    ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:480:hardcoded object:	                    onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:481:hardcoded object:	                    getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:482:hardcoded object:	                    changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:483:hardcoded object:	                    productType={productType}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:484:hardcoded object:	                    setError={this.setError}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:485:hardcoded object:	                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:486:hardcoded object:	                    bfsProductType={bfsProductType}
microservices-middleware/client/src/modules/ordertype/bfs/products/ByjusMathProductPage.js:494:hardcoded object:	export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(ComboProduct);
