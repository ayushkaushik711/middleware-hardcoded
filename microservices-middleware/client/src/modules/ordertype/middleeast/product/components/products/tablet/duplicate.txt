microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:1:hardcoded object:import React, { Component } from 'react';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:4:hardcoded object:import { get } from 'lodash';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:6:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:7:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:8:hardcoded file path:import AntDFormBuilder from 'components/form/AntDFormBuilder';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:9:hardcoded object:import { saveProductDetails, addLoader, removeLoader, resetPrice, saveCashbackDetails } from 'modules/product/productReducer';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:10:hardcoded object:import { validateProfileSelection } from 'modules/ordertype/upgrade/trialpack/components/products/UpgradeProductHelper'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:11:hardcoded file path:import FetchPrices from 'modules/product/components/FetchPrices';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:12:hardcoded object:import { getMeTablets } from '../ProductHelper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:14:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:15:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:16:hardcoded string:    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:17:hardcoded string:    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:18:hardcoded string:    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:19:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:20:hardcoded string:    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:21:hardcoded string:    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:22:hardcoded string:    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:23:hardcoded string:    error: get(state, 'product.error')
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:26:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:54:hardcoded object:        const { authDetails = {}, existingProfiles } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:55:hardcoded string:        const draftOrder = get(authDetails, "draftOrder", {});
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:56:hardcoded string:        const customerDetails = get(draftOrder, "customerDetails", {});
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:57:hardcoded string:        const studentName = get(customerDetails, "studentName", "");
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:59:hardcoded object:        const { tabletForm } = this;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:60:hardcoded variable:        const details = await tabletForm.getFormValues();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:62:hardcoded number:        if (existingProfiles.length > 0 && details) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:63:hardcoded variable:            const isValidate = validateProfileSelection(details);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:68:hardcoded variable:            const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:69:hardcoded string:                productCombination: "only_tablet",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:71:hardcoded string:                    tablets: get(details, 'tablets'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:78:hardcoded string:                url: '/api/middleeast/getMeTabletProduct'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:84:hardcoded object:        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:85:hardcoded object:        const { students } = productDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:86:hardcoded string:        students[0]["userProfile"] = this.state.userProfile
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:87:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:96:hardcoded string:                url: '/api/product/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:97:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:100:hardcoded string:                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:104:hardcoded object:                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:106:hardcoded string:                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:108:hardcoded object:                this.setState({ error });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:115:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:116:hardcoded string:        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:126:hardcoded string:            "userProfile": e.target.value,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:132:hardcoded object:        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:135:hardcoded object:            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:137:hardcoded string:                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:141:hardcoded string:                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:144:hardcoded string:                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:145:hardcoded object:                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:151:hardcoded object:        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:155:hardcoded object:        const { resetPrice, changeNextBtnMode, productConfig, showProfileSelectionOption, existingProfiles, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:156:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:157:hardcoded string:        const isDevEnv = ['development', 'local'].includes(env)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:158:hardcoded object:        const { error } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:159:hardcoded array:        const { MeTablets = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:162:hardcoded object:                <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:165:hardcoded string:                        type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:166:hardcoded string:                        mode: 'multiple',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:167:hardcoded object:                        options: getMeTablets({ tablets: MeTablets, isOnlyTablet: true, isDevEnv }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:168:hardcoded string:                        name: 'tablets',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:169:hardcoded string:                        label: "Byjus Tablet",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:172:hardcoded string:                        type: (showProfileSelectionOption && existingProfiles.length > 0 ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:174:hardcoded string:                        name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:175:hardcoded string:                        label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:177:hardcoded string:                        message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:179:hardcoded string:                            display: 'block',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:180:hardcoded string:                            height: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:181:hardcoded string:                            lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:183:hardcoded number:                        required: (showProfileSelectionOption && existingProfiles.length > 0 ? true : false)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:185:hardcoded object:                    wrappedComponentRef={(inst) => this.tabletForm = inst}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:191:hardcoded string:                    ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:192:hardcoded object:                    onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:193:hardcoded object:                    getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:194:hardcoded object:                    changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:195:hardcoded object:                    setError={this.setError}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/tablet/ProductTablet.js:203:hardcoded object:export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(MeProductTablet);
