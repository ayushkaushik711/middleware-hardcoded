microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1:hardcoded object:import React, { Component, Fragment } from 'react';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:3:hardcoded object:import { get, find, remove, isEmpty, flattenDeep, size } from 'lodash';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:4:hardcoded object:import { Button } from 'reactstrap';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:5:hardcoded object:import { Alert } from 'antd';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:7:hardcoded object:import { productPermissions } from 'utility/screenPermission';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:8:hardcoded object:import { saveProductDetails, addLoader, removeLoader, resetPrice, saveCashbackDetails } from 'modules/product/productReducer';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:11:hardcoded number:    isK12Class, getCourseTypeOption, checkIsPrivilegedUser,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:12:hardcoded number:    getMentoringClassMap, isK3orPreKClass, getOneToManyMentoringClassMap,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:14:hardcoded string:} from 'modules/product/components/productHelper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:15:hardcoded object:import { getSiblingFormFields, getBoards, getIgcseClassDetails, getState, getMeProductlearningType, getMeFormattedValidity, getMeTablets, getProfileOptions } from '../ProductHelper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:16:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:17:hardcoded file path:import ClassTypeForm from 'modules/product/components/ClassTypeForm'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:18:hardcoded file path:import ProductDetailsForm from 'modules/product/components/ProducDetailsForm';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:19:hardcoded file path:import FetchPrices from 'modules/product/components/FetchPrices';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:20:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:21:hardcoded object:import { isEqual } from 'lodash';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:22:hardcoded file path:import InfoWrapper from 'components/InfoWrapper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:23:hardcoded file path:import OneToMany from 'modules/product/components/mentoring/OneToManyMentoring';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:24:hardcoded object:import { validateByjusClassesMentoringDetails } from 'modules/product/components/mentoring/MentoringHelper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:25:hardcoded file path:import ByjusMentoringClasses from 'modules/product/components/mentoring/ByjusMentoringClasses';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:28:hardcoded number:    ELIGIBLE_COMBINATIONS_FOR_BATCH, ELIGIBLE_COMBINATIONS_FOR_TLP_PLUS_BYJUS_CLASSES_PLUS_TLP, D4_TABLET_LIST, isAdvanceAdmission
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:29:hardcoded string:} from 'modules/product/utils/productConstant';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:30:hardcoded file path:import Proficiency from 'modules/student/Proficiency';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:31:hardcoded object:import { isProficiencyAndFotAvailable } from "modules/product/utils/ByjusClassesHelper";
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:33:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:34:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:35:hardcoded string:    leadDetails: get(state, 'auth.leadDetails'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:36:hardcoded string:    salesDetails: get(state, "details.salesDetails"),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:37:hardcoded string:    user: get(state, "auth.details.user", {}),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:38:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:39:hardcoded string:    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:40:hardcoded string:    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:41:hardcoded string:    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:42:hardcoded string:    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:43:hardcoded string:    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:44:hardcoded string:    error: get(state, 'product.error')
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:47:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:68:hardcoded object:        const { env } = this.props.authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:70:hardcoded number:            minStudentCount: 2,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:71:hardcoded number:            formCount: 1,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:72:hardcoded number:            maxStudentCount: 0,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:73:hardcoded array:            formCountArray: [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:78:hardcoded object:            productConfig: {},
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:79:hardcoded array:            fields: [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:82:hardcoded object:            selectedProfile: {},
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:84:hardcoded number:            isD4Available: false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:85:hardcoded array:            tabletMappingList: [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:91:hardcoded object:        const { productCombination, identifier, existingProfiles, country, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:92:hardcoded object:        const { formCountArray, formCount, classType } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:93:hardcoded array:        let students = [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:94:hardcoded number:        let mentoringCount = 0;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:95:hardcoded object:        let couponDetails = {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:96:hardcoded variable:        let siblingCount = formCountArray.length;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:97:hardcoded string:        let oneToManyMentoringDetails = [], bhlpCourseDetails = [], byjusClassesMentoringDetails = [], trackId = '';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:99:hardcoded object:        const { classTypeForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:100:hardcoded number:        const tabletInfo = this.getAvailableD4ForSharing();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:101:hardcoded number:        const { tabletMappingList = [], isD4Available } = tabletInfo || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:102:hardcoded number:        this.setState({ isD4Available, tabletMappingList });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:104:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:105:hardcoded string:        const isDevEnv = ['local', 'development'].includes(env)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:107:hardcoded number:        for (var i = 0; i < siblingCount; i++) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:108:hardcoded variable:            const lastSibling = formCount == siblingCount;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:109:hardcoded array:            const form = this.refs[`productDetailsForm-${formCountArray[i]}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:110:hardcoded array:            const mentoringForm = this.refs[`oneToManyDetailsForm-${formCountArray[i]}`]
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:111:hardcoded array:            const byjusClassesMentoringForm = this.refs[`byjusClassesDetailsForm-${formCountArray[i]}`]
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:112:hardcoded array:            const proficiencyForm = this.refs[`proficiencyForm-${formCountArray[i]}`]
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:114:hardcoded variable:            const oneToManyFormValue = mentoringForm && await mentoringForm.getMentoringValues()
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:115:hardcoded variable:            const byjusClassesFormValue = byjusClassesMentoringForm && await byjusClassesMentoringForm.getMentoringValues();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:116:hardcoded variable:            const studentMarksDetails = await proficiencyForm?.getStudentAcademicDetails()
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:117:hardcoded variable:            const classTypeFormDetails = classTypeForm && await classTypeForm.getClassTypeFormDetails();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:118:hardcoded object:            const details = await form.getProductDetails() || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:120:hardcoded string:            let productDetails = get(details, 'productDetails') || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:121:hardcoded object:            let { board, initialClass, finalClass } = productDetails
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:122:hardcoded number:            //for IGCSE board sending initialClass as initialClass - 1 and finalClass as finalClass + 1
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:123:hardcoded object:            const { firstClass, lastClass } = getIgcseClassDetails({ board, initialClass, finalClass })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:124:hardcoded string:            if (firstClass) productDetails['initialClass'] = firstClass.toString();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:125:hardcoded string:            if (lastClass) productDetails['finalClass'] = lastClass.toString();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:127:hardcoded string:                // productDetails['sharedD4tablet'] = this.state[`sharedD4tablet-${formCountArray[i]}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:128:hardcoded string:                productDetails['tabletId'] = this.state[`tabletId-${formCountArray[i]}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:132:hardcoded variable:                const response = validateByjusClassesMentoringDetails(byjusClassesFormValue, productDetails);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:133:hardcoded string:                byjusClassesMentoringDetails = get(response, "byjusClassesMentoringDetails", []);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:134:hardcoded string:                bhlpCourseDetails = get(response, "bhlpCourseDetails", []);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:135:hardcoded string:                trackId = get(response, 'trackId', '');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:140:hardcoded array:            const productLearningType = this.getAvailableProductLearningType(formCountArray[i]);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:142:hardcoded string:            if (productCombination == "byjus_classes") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:143:hardcoded string:                productDetails["productLearningType"] = productLearningType
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:146:hardcoded string:            if (productCombination == "byjus_classes") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:147:hardcoded string:                if (!size(get(classTypeFormDetails, "formValue", {}))) return
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:150:hardcoded string:                    ...get(classTypeFormDetails, "formValue", {}),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:153:hardcoded string:                if (classType == "neo" && productCombination == "byjus_classes" && ["byjus_classes_plus_byjus_tlp", "byjus_classes"].includes(productLearningType)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:154:hardcoded string:                    productDetails["trackId"] = trackId
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:155:hardcoded string:                    if (!size(get(studentMarksDetails, "formValue", {}))) return
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:158:hardcoded string:                        ...get(studentMarksDetails, "formValue", {}),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:159:hardcoded string:                        languageOfInstruction: get(byjusClassesFormValue, "formValue.languageOfInstruction", null),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:160:hardcoded string:                        languageOfInstructionId: get(byjusClassesFormValue, "formValue.languageOfInstructionId", null)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:164:hardcoded number:            /**If any sibling data is empty , make siblingCount as 0 and student Array empty to collect data first */
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:165:hardcoded number:            !isEmpty(productDetails) ? students.push(productDetails) : (students = [] && (siblingCount = 0));
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:166:hardcoded string:            mentoringCount = lastSibling && get(details, 'mentoringCount');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:167:hardcoded string:            couponDetails = lastSibling && get(details, 'couponDetails');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:172:hardcoded variable:            const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:174:hardcoded string:                productType: 'sibling',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:180:hardcoded string:                mentoringDetails: productCombination === "home_learning_program" ? oneToManyMentoringDetails : byjusClassesMentoringDetails, // To track other mentoring details
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:184:hardcoded string:            if (classType == "neo") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:187:hardcoded string:                    url: '/api/neo/middleeast/sibling'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:192:hardcoded string:                    url: '/api/middleeast/sibling'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:200:hardcoded object:        const { productCombination } = productDetails
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:201:hardcoded object:        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:202:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:208:hardcoded string:            if (["byjus_classes"].includes(productCombination)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:209:hardcoded string:                payload["productDetails"] = formatByjusClassesFormValues(productDetails);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:214:hardcoded string:                url: '/api/middleeast/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:215:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:218:hardcoded string:                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:222:hardcoded object:                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:224:hardcoded string:                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:226:hardcoded object:                this.setState({ error }, () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:227:hardcoded object:                    this.setState({ error });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:235:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:236:hardcoded string:        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:245:hardcoded object:        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:246:hardcoded object:        const { isBooksOpted } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:249:hardcoded object:            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:251:hardcoded string:                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:252:hardcoded string:                    productDetails["isBooksOpted"] = isBooksOpted;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:256:hardcoded string:                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:259:hardcoded string:                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:260:hardcoded object:                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:267:hardcoded array:        let rule = []
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:268:hardcoded string:        if (countryCode === '+91') {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:270:hardcoded number:                pattern: new RegExp(/^(\+\d{1,3}[- ]?)?\d{10}$/), message: `Enter 10 digit valid Mobile No`
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:276:hardcoded number:    //fetch options to get available D4 tablets for sharing
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:277:hardcoded number:    getD4TabletOptions = () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:278:hardcoded object:        const { productType } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:279:hardcoded object:        const { formCountArray, productConfig = {} } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:280:hardcoded array:        let { Products = [] } = productConfig;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:281:hardcoded object:        const productConfiguration = find(Products, { formattedName: productType }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:282:hardcoded object:        const { tablets } = productConfiguration || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:283:hardcoded array:        const tabletSelected = [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:284:hardcoded number:        for (var i = 0; i < formCountArray.length; i++) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:285:hardcoded number:            if (this.state[`sharedD4tablet-${formCountArray[i]}`]) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:286:hardcoded number:                tabletSelected.push(this.state[`sharedD4tablet-${formCountArray[i]}`]);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:289:hardcoded array:        const res = [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:290:hardcoded number:        for (var i = 0; i < tabletSelected.length; i++) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:291:hardcoded string:            const val = tabletSelected[i].split("-")[0];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:292:hardcoded string:            const siblingName = tabletSelected[i].split("-")[1];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:293:hardcoded variable:            const result = tablets.filter(f => val.includes(f.value));
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:294:hardcoded number:            const label = `${result[0].label}-${siblingName}`;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:295:hardcoded variable:            const option = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:296:hardcoded array:                label, value: tabletSelected[i]
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:304:hardcoded string:        let productLearningType = this.state[`productLearningType_${formNumber}`] || "";
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:305:hardcoded string:        if (productLearningType.indexOf("ADVANCE_ADMISSION_PLUS_BYJUS_CLASSES") >= 0) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:306:hardcoded string:            productLearningType = "advance_admission_plus_byjus_classes"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:308:hardcoded string:        else if (productLearningType.indexOf("_BYJUS_CLASSES_PLUS_BYJUS_TLP") >= 0) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:309:hardcoded string:            productLearningType = "byjus_classes_plus_byjus_tlp"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:310:hardcoded string:        } else if (productLearningType.indexOf("JUMPSTART_ADMISSION") >= 0) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:311:hardcoded string:            productLearningType = "jumpstart_admission"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:312:hardcoded string:        } else if (productLearningType.indexOf("_BYJUS_TLP_PLUS_BYJUS_CLASSES") >= 0) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:313:hardcoded string:            productLearningType = "byjus_tlp_plus_byjus_classes"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:314:hardcoded string:        } else if (productLearningType.indexOf("_BYJUS_CLASS") >= 0) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:315:hardcoded string:            productLearningType = "byjus_classes"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:316:hardcoded string:        } else if (productLearningType.indexOf("_HLP") >= 0) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:317:hardcoded string:            productLearningType = "home_learning_program"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:319:hardcoded string:            productLearningType = "byjus_tlp"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:326:hardcoded object:        const { formCountArray } = this.state
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:327:hardcoded object:        const { productCombination } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:328:hardcoded object:        const { showProfileSelectionOption, existingProfiles, authDetails = {} } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:329:hardcoded variable:        const productConfig = get(this.state, `productConfig`);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:331:hardcoded string:        const selectedCourse = get(this.state, `course-${formNumber}`, 'K10/K12');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:332:hardcoded object:        const selectedBoard = get(this.state, `board-${formNumber}`);;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:333:hardcoded object:        const selectedInitialClass = get(this.state, `initialClass-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:334:hardcoded object:        const selectedFinalClass = get(this.state, `finalClass-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:335:hardcoded object:        const selectedTlpFinalClass = get(this.state, `tlpFinalGrade-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:336:hardcoded object:        const selectedByjusClassFinalGrade = get(this.state, `byjusClassFinalGrade-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:337:hardcoded object:        const selectedTablet = get(this.state, `tablet-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:338:hardcoded number:        const selectedD4Tablet = get(this.state, `d4tablet-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:339:hardcoded object:        const selectedSubCourse = get(this.state, `subCourse-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:341:hardcoded object:        const { productType, user } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:342:hardcoded array:        const { Products = [], Courses = [], Boards = [], MeTablets = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:344:hardcoded object:        const productConfiguration = find(Products, { formattedName: productType }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:345:hardcoded object:        const { validity } = productConfiguration || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:346:hardcoded object:        const selectedCourseConfig = find(Courses, { formattedName: selectedCourse }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:347:hardcoded object:        const selectedBoardConfig = find(Boards, { formattedName: selectedBoard }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:349:hardcoded variable:        const mentoringClassMap = getMentoringClassMap(selectedBoardConfig.classes);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:350:hardcoded variable:        const oneToManyMentoringClassMap = getOneToManyMentoringClassMap(selectedBoardConfig.classes);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:351:hardcoded variable:        const byjusClassesMap = getByjusClassesMap(selectedBoardConfig.classes);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:353:hardcoded variable:        const productLearningType = this.getAvailableProductLearningType(formNumber);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:355:hardcoded object:        const subCourses = getSubCourses({ productLearningType, selectedBoardConfig, selectedFinalClass, tlpFinalGrade: selectedTlpFinalClass, byjusClassFinalGrade: selectedByjusClassFinalGrade });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:356:hardcoded variable:        const subCourseOptions = subCourses && fetchSubCourseOptions(productCombination, subCourses, selectedInitialClass, productLearningType)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:357:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:358:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:359:hardcoded string:        const isDevEnv = ["development", "local"].includes(env)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:361:hardcoded variable:        let fields = [
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:363:hardcoded string:                type: productCombination === "byjus_classes" ? 'select' : "hidden",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:364:hardcoded string:                name: 'productLearningType',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:365:hardcoded string:                label: 'Choose Product Learning Type',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:366:hardcoded string:                message: "Please Select Product Learning Type",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:367:hardcoded string:                options: getMeProductlearningType({ productType: "sibling" }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:369:hardcoded string:                required: productCombination === "byjus_classes" ? true : false
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:371:hardcoded string:                type: 'text',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:372:hardcoded string:                name: 'siblingName',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:373:hardcoded string:                label: 'Sibling Name',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:376:hardcoded array:                    { pattern: new RegExp(/^[a-zA-Z\s\.]+$/), message: `Enter valid name` },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:380:hardcoded array:                                if (formCount != formNumber && this.state[`siblingName-${formCount}`] === value) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:381:hardcoded string:                                    return callback('Siblings cannot have same name');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:387:hardcoded number:                        max: 80,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:388:hardcoded number:                        message: `Student Name cannot be more than 80 characters long`
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:392:hardcoded string:                message: "Please enter Name"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:394:hardcoded string:                type: 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:395:hardcoded string:                name: 'course',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:396:hardcoded string:                label: 'Select Course',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:397:hardcoded string:                options: get(productConfiguration, 'courses'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:398:hardcoded string:                value: 'K10/K12',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:399:hardcoded string:                message: "Please select Course"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:401:hardcoded string:                type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:402:hardcoded string:                name: 'board',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:403:hardcoded string:                label: 'Select Board',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:405:hardcoded string:                options: getBoards(get(selectedCourseConfig, 'boards', []), productCombination, isDevEnv),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:407:hardcoded string:                message: "Please select Board"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:409:hardcoded string:                type: selectedBoard === "STATE" ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:410:hardcoded string:                name: 'state',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:411:hardcoded string:                label: 'Select State',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:412:hardcoded string:                required: selectedBoard === "STATE",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:413:hardcoded string:                options: getState(get(selectedBoardConfig, 'states')),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:415:hardcoded string:                message: "Please select State"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:417:hardcoded string:            ...getSiblingFormFields({ state: this.state, props: this.props, productLearningType: productLearningType || "byjus_tlp", handleChanges: this.handleChanges, handleClassBlurEvent: this.handleClassBlurEvent, formNumber, serialNumber, addTLPCourses: this.addTLPCourses }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:419:hardcoded string:                type: isK12Class(selectedFinalClass, selectedTlpFinalClass, selectedByjusClassFinalGrade) ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:420:hardcoded string:                name: 'subCourse',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:421:hardcoded string:                label: 'Sub Course',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:422:hardcoded number:                required: isK12Class(selectedFinalClass, selectedTlpFinalClass, selectedByjusClassFinalGrade),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:426:hardcoded string:                message: "Please select Sub Course"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:428:hardcoded string:                type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:429:hardcoded object:                options: selectedInitialClass && getMeFormattedValidity({ validity, initialClass: selectedInitialClass, productCombination: productLearningType, user, isDevEnv }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:430:hardcoded string:                name: 'validity',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:431:hardcoded string:                label: 'Select Initial Validity',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:435:hardcoded string:                message: "Please Select Initial Validity"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:437:hardcoded string:                type: (selectedTablet || isEmpty(this.getD4TabletOptions()) || selectedSubCourse == "Commerce") ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:438:hardcoded number:                options: this.getD4TabletOptions(),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:439:hardcoded string:                name: 'd4tablet',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:440:hardcoded string:                label: 'Share existing D4 Tablet',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:442:hardcoded string:                message: "Please select D4 Tablet",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:444:hardcoded string:                type: (selectedD4Tablet) ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:445:hardcoded array:                options: selectedInitialClass ? getMeTablets({ tablets: MeTablets, initialClass: selectedInitialClass, isPrivilegedUser, formNumber, isDevEnv }) : [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:446:hardcoded number:                required: isK3orPreKClass(selectedInitialClass) && !isPrivilegedUser && !selectedD4Tablet ? true : false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:447:hardcoded string:                name: 'tablet',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:448:hardcoded string:                label: 'Select Tablet',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:450:hardcoded string:                message: "Please select Tablet"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:452:hardcoded string:                type: (showProfileSelectionOption && existingProfiles.length > 0 ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:454:hardcoded string:                name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:455:hardcoded string:                label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:457:hardcoded string:                message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:458:hardcoded number:                required: (showProfileSelectionOption && existingProfiles.length > 0 ? true : false),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:460:hardcoded string:                    display: 'block',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:461:hardcoded string:                    height: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:462:hardcoded string:                    lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:471:hardcoded array:        const productDetailsForm = this.refs[`productDetailsForm-${formNumber}`]
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:472:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:474:hardcoded string:            workshops: "", subCourse: "", tablet: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:475:hardcoded string:            validity: ""
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:477:hardcoded string:        const courseType = getCourseTypeOption("sibling", value);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:479:hardcoded array:            [`productLearningType_${formNumber}`]: `${formNumber}_${value.toUpperCase()}`,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:480:hardcoded array:            [`courseType-${formNumber}`]: courseType
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:488:hardcoded array:                [`${formNumber}`]: [`${ele.target.value}`]
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:495:hardcoded array:        const productDetailsForm = this.refs[`productDetailsForm-${formNumber}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:496:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:497:hardcoded object:        const { authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:498:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:499:hardcoded string:        const isDevEnv = ["development", "local"].includes(env)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:502:hardcoded string:        if (name == "initialClass") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:503:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ finalClass: "", workshops: "", subCourse: "", tablet: "", validity: "", tlpFinalGrade: "", byjusClassFinalGrade: "", isStreaming: false, isByjusStreaming: false })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:506:hardcoded string:                    [`subCourse-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:507:hardcoded array:                    [`isStreaming-${formNumber}`]: false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:508:hardcoded array:                    [`isByjusStreaming-${formNumber}`]: false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:514:hardcoded string:                    [`subCourse-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:515:hardcoded array:                    [`isStreaming-${formNumber}`]: false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:521:hardcoded string:        if (name === "finalClass") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:522:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ tablet: "", workshops: "", subCourse: "", tlpFinalGrade: "", byjusClassFinalGrade: "", isStreaming: false, isByjusStreaming: false, validity: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:525:hardcoded string:                    [`subCourse-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:526:hardcoded array:                    [`isStreaming-${formNumber}`]: false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:527:hardcoded array:                    [`isByjusStreaming-${formNumber}`]: false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:533:hardcoded string:                    [`subCourse-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:534:hardcoded array:                    [`isStreaming-${formNumber}`]: false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:540:hardcoded number:        /**Reset shared D4 tablet if board or state changes*/
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:541:hardcoded string:        if (name === "subCourse") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:542:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ d4tablet: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:544:hardcoded string:                [`d4tablet-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:545:hardcoded string:                [`tabletId-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:551:hardcoded string:        if (name === "board" || name === "state") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:552:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ initialClass: "", isStreaming: false });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:555:hardcoded string:        if (name === "courseType") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:556:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ subCourse: "", tablet: "", validity: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:559:hardcoded string:        if (name === "siblingName") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:560:hardcoded array:            const siblingTablet = this.state[`tabletId-${props}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:561:hardcoded string:            let updatedTabletId = ""
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:563:hardcoded string:                updatedTabletId = siblingTablet.split("-").slice(0, 2).join("-") + `-${value}`
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:566:hardcoded array:                [`tabletId-${props}`]: updatedTabletId,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:567:hardcoded array:                [`${name}-${props}`]: value,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:572:hardcoded string:        if (name === "tablet" || name === "isStreaming") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:573:hardcoded string:            const { label = "" } = props || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:574:hardcoded object:            const { formCountArray } = this.state
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:575:hardcoded number:            detailsForm && detailsForm.setFieldsValue({ selectD4SDCard: false });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:577:hardcoded array:            const siblingName = this.state[`siblingName-${formNumber}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:578:hardcoded number:            /*Reset Shared D4 tablet if primary sibling tablet was changed */
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:580:hardcoded string:                let sharedD4Tablet = this.state[`d4tablet-${formCount}`] || ""
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:581:hardcoded string:                let sharedSiblingName = sharedD4Tablet.split("-")[1]
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:582:hardcoded number:                if (formCount != formNumber && siblingName === sharedSiblingName && sharedD4Tablet !== `${value}-${siblingName}`) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:583:hardcoded array:                    const productDetailsForm = this.refs[`productDetailsForm-${formCount}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:584:hardcoded variable:                    const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:585:hardcoded string:                    this.setState({ [`d4tablet-${formCount}`]: "" })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:586:hardcoded string:                    this.setState({ [`tabletId-${formCount}`]: "" })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:587:hardcoded string:                    detailsForm && detailsForm.setFieldsValue({ d4tablet: "" })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:591:hardcoded string:                [`tabletId-${formNumber}`]: value ? `T-${value}-${siblingName}` : "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:592:hardcoded array:                [`tabletName-${formNumber}`]: `${label}`,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:593:hardcoded number:                [`selectD4SDCard-${formNumber}`]: false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:596:hardcoded number:            if (D4_TABLET_LIST.includes(value)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:598:hardcoded string:                    [`sharedD4tablet-${formNumber}`]: value ? `${value}-${siblingName}` : "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:604:hardcoded string:                    [`sharedD4tablet-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:605:hardcoded array:                    [`${name}-${formNumber}`]: value,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:612:hardcoded string:        if (name === "d4tablet") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:613:hardcoded string:            const { label = "" } = props || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:615:hardcoded array:                [`${name}-${formNumber}`]: value,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:616:hardcoded array:                [`tabletId-${formNumber}`]: `T-${value}`,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:617:hardcoded array:                [`tabletName-${formNumber}`]: `${label}`,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:622:hardcoded string:        if (name === "isStreaming") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:623:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ tablet: "", validity: "", tlpFinalGrade: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:625:hardcoded array:                [`isStreaming-${props}`]: value,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:626:hardcoded string:                [`tabletId-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:632:hardcoded array:            [`${name}-${formNumber}`]: value,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:638:hardcoded variable:        const productLearningType = this.getAvailableProductLearningType(formNo);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:639:hardcoded string:        const isHlpForm = productLearningType === "home_learning_program";
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:640:hardcoded string:        const isByjusClassForm = ["jumpstart_admission", "byjus_tlp_plus_byjus_classes", "byjus_classes", "byjus_classes_plus_byjus_tlp", "advance_admission_plus_byjus_classes"].includes(productLearningType);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:642:hardcoded array:        const mentoringApplicableFormTrack = [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:643:hardcoded variable:        let isMentoringApplicable = false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:644:hardcoded variable:        let isOneToManyApplicable = false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:645:hardcoded variable:        let isByjusClassesApplicable = false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:647:hardcoded object:        const { formCountArray } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:650:hardcoded variable:        const currentForm = formCountArray.find(formCount => formCount === formNo);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:651:hardcoded array:        this.setState({ [`isByjusClasses-${currentForm}`]: false })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:652:hardcoded array:        // let initialClass = this.state[`initialClass-${currentForm}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:654:hardcoded number:        let initialClass = isAdvanceAdmission.includes(productLearningType) || ELIGIBLE_COMBINATIONS_FOR_TLP_PLUS_BYJUS_CLASSES_PLUS_TLP.includes(productLearningType) ? (parseInt(this.state[`initialClass-${currentForm}`], 10) + 1).toString() : this.state[`initialClass-${currentForm}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:656:hardcoded array:        isMentoringApplicable = mentoringClassMap[initialClass] || false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:657:hardcoded array:        isOneToManyApplicable = oneToManyMentoringClassMap[initialClass] || false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:658:hardcoded array:        isByjusClassesApplicable = byjusClassesMap[initialClass] || false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:666:hardcoded array:                [`isOneToManyClass-${currentForm}`]: (isOneToManyApplicable) ? true : false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:667:hardcoded array:                [`${formNo}_HLP`]: (isOneToManyApplicable) ? true : false
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:674:hardcoded array:                [`isByjusClasses-${currentForm}`]: (isByjusClassesApplicable) ? true : false
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:686:hardcoded string:        this.setState({ classType: value ? "neo" : "oneToMega" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:688:hardcoded object:        const { formCountArray } = this.state
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:690:hardcoded array:            this.setState({ [`isByjusClasses-${formNo}`]: false })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:691:hardcoded array:            const productDetailsForm = this.refs[`productDetailsForm-${formNo}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:692:hardcoded variable:            const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:695:hardcoded string:                productLearningType: "", initialClass: "", finalClass: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:696:hardcoded string:                byjusClassFinalGrade: "", validity: "", tlpFinalGrade: "", courseType: "", tablet: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:697:hardcoded string:                mathPercent: "", sciencePercent: "", languageOfInstruction: "", flowOfTopic: value ? "default" : ""
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:704:hardcoded object:        let { formCount, formCountArray, maxStudentCount } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:705:hardcoded object:        const { productCombination } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:709:hardcoded variable:            const currentTime = (new Date()).getTime();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:713:hardcoded variable:            const newFormCountArray = formCountArray;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:717:hardcoded object:            this.setState({ formCount, formCountArray }, () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:718:hardcoded object:                this.setState({ formCountArray: newFormCountArray });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:728:hardcoded object:        let { formCount, formCountArray } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:731:hardcoded number:        if (formCount > 0) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:737:hardcoded variable:            const newFormCountArray = formCountArray;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:741:hardcoded object:            this.setState({ formCount, formCountArray }, () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:742:hardcoded object:                this.setState({ formCountArray: newFormCountArray });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:751:hardcoded variable:            const refs = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:752:hardcoded object:            const key = `productDetailsForm-${formCount}`;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:753:hardcoded variable:            const form = get(refs, key);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:754:hardcoded object:            const formValues = form && form.getFormFilledValues() || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:756:hardcoded array:                [`formValues-${formCount}`]: formValues
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:762:hardcoded object:        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:767:hardcoded object:            const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:768:hardcoded variable:            const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:769:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ initialClass: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:774:hardcoded object:            this.setState({ productConfig: nextProps.productConfig }, async () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:782:hardcoded object:        const { productDetails = {}, productConfig = {}, productType, user, productCombination } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:783:hardcoded object:        let { formCount } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:784:hardcoded array:        let formCountArray = [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:786:hardcoded string:        const productConfiguration = find(get(productConfig, 'Products', []), { formattedName: productType }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:788:hardcoded string:        const userPermissions = get(user, 'permissions', []);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:790:hardcoded number:        const isPriviledgedUser = userPermissions.indexOf(productPermissions.ignoreSiblingCountCheck) >= 0;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:792:hardcoded number:        /** For non-priviledged users, MaxStudent = maxSiblingCount + 1
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:795:hardcoded string:        const maxStudentCount = isPriviledgedUser ? PRIVILEDGED_USERS_SIBLING_COUNT : parseInt(get(productConfiguration, 'otherConfigs.maxSiblingCount')) + 1;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:798:hardcoded string:        if (productType === get(productDetails, 'productType')) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:800:hardcoded string:            formCount = get(productDetails, 'students', []).length || formCount;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:802:hardcoded number:            for (var i = 1; i <= formCount; i++) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:803:hardcoded number:                const formValues = get(productDetails, `students.${i - 1}.formValues`);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:806:hardcoded string:                    [`course-${i}`]: get(formValues, 'course'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:807:hardcoded string:                    [`board-${i}`]: get(formValues, 'board'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:808:hardcoded string:                    [`initialClass-${i}`]: get(formValues, 'initialClass'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:809:hardcoded string:                    [`finalClass-${i}`]: get(formValues, 'finalClass')
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:815:hardcoded object:            this.setState({ productDetails, formCount });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:819:hardcoded number:        for (var i = 1; i <= formCount; i++) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:820:hardcoded variable:            const currentTime = (new Date()).getTime();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:824:hardcoded string:        this.setState({ productConfig, course: 'K10/K12', formCountArray, maxStudentCount });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:828:hardcoded object:        const { user } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:829:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:831:hardcoded string:        if (isPrivilegedUser && productCombination === "byjus_classes") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:833:hardcoded string:                classType: "neo"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:845:hardcoded array:        const productDetailsForm = this.refs[`productDetailsForm-${formNumber}`]
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:846:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:848:hardcoded string:            this.handleProductCombinationType("byjus_classes_plus_byjus_tlp", `productLearningType_${formNumber}`, props, formNumber)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:850:hardcoded string:            this.handleProductCombinationType("byjus_classes", `productLearningType_${formNumber}`, props, formNumber)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:851:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ tlpFinalGrade: "" })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:856:hardcoded object:        const { formCountArray } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:857:hardcoded variable:        let siblingCount = formCountArray.length;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:859:hardcoded number:        for (var i = 0; i < siblingCount; i++) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:860:hardcoded array:            const byjusClassesMentoringForm = this.refs[`byjusClassesDetailsForm-${formCountArray[i]}`]
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:861:hardcoded variable:            const byjusClassesFormValue = byjusClassesMentoringForm && await byjusClassesMentoringForm.getMentoringValues();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:863:hardcoded array:                [`${formCountArray[i]}_byjus_class_initialValue`]: byjusClassesFormValue.courseInfo
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:869:hardcoded object:        const { productConfig, isMentoringClass } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:870:hardcoded object:        const { productType, productCombination, user, leadDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:871:hardcoded variable:        const accountNumber = leadDetails.accountNumber;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:872:hardcoded array:        const fields = productConfig ? this.getFields(formNumber, formSerialNum) : [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:873:hardcoded number:        const initialValues = getProductFormInitialValue(productDetails)[formSerialNum - 1] || get(this.state, `formValues-${formNumber}`) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:874:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:879:hardcoded object:                    heading={`Student #${formSerialNum}`}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:880:hardcoded object:                    key={formNumber}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:881:hardcoded object:                    ref={`productDetailsForm-${formNumber}`}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:882:hardcoded array:                    productLearningType={this.state[`productLearningType_${formNumber}`]}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:883:hardcoded object:                    productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:884:hardcoded object:                    fields={fields}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:885:hardcoded object:                    initialValues={initialValues}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:886:hardcoded object:                    displayMiscellaneousComponents={isLastSibling ? true : false} /**To display mentoring and coupon count at the end of last sibling */
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:887:hardcoded object:                    isOneToManyAllowed={ELIGIBLE_COMBINATIONS_FOR_ONE_TO_MANY.includes(productCombination) ? true : false} // Byjus HLP
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:888:hardcoded object:                    isByjusClassesAllowed={ELIGIBLE_COMBINATIONS_FOR_BATCH.includes(productCombination) ? true : false} // Byjus Classes
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:889:hardcoded object:                    isMentoringClass={isPrivilegedUser && ELIGIBLE_COMBINATIONS_FOR_ONE_ON_ONE.includes(productCombination) ? isMentoringClass : false} // used to show mentoring component to select
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:890:hardcoded object:                    isMentoringAllowed={isPrivilegedUser && ELIGIBLE_COMBINATIONS_FOR_ONE_ON_ONE.includes(productCombination) ? true : false}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:891:hardcoded object:                    accountNumber={accountNumber}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:892:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:899:hardcoded number:    getAvailableD4ForSharing = () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:900:hardcoded number:        let isD4Available = false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:901:hardcoded array:        const { formCountArray = [] } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:902:hardcoded array:        let tabletMappingList = [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:903:hardcoded number:        for (var i = 0; i < formCountArray.length; i++) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:904:hardcoded array:            const siblingName = this.state[`siblingName-${formCountArray[i]}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:905:hardcoded number:            const d4Tablet = this.state[`d4tablet-${formCountArray[i]}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:906:hardcoded array:            let tabletName = this.state[`tabletName-${formCountArray[i]}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:907:hardcoded number:            let tablet = (d4Tablet) ? d4Tablet : this.state[`tablet-${formCountArray[i]}`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:908:hardcoded string:            tabletName = (tabletName) ? tabletName : "No tablet selected";
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:909:hardcoded variable:            const tabletMapping = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:916:hardcoded number:        const d4List = tabletMappingList.filter(ele => (D4_TABLET_LIST.includes(ele.tablet)));
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:917:hardcoded string:        const emptyTabletList = tabletMappingList.filter(ele => (["No tablet selected", undefined, 'undefined', ""].includes(ele.tablet)));
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:919:hardcoded number:        if (!isEmpty(d4List) && !isEmpty(emptyTabletList)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:920:hardcoded number:            isD4Available = true;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:922:hardcoded number:        return { tabletMappingList, isD4Available };
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:925:hardcoded number:    closeD4WarningMessage = (e) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:926:hardcoded number:        this.setState({ isD4Available: false });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:930:hardcoded number:        const { error, productDetails, formCount, formCountArray, maxStudentCount, validity, isD4Available, tabletMappingList, classType, countryId } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:931:hardcoded object:        const { changeNextBtnMode, productType, productCombination, identifier, user, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:932:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:933:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:937:hardcoded object:                <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:938:hardcoded number:                <InfoWrapper descriptionBody={<div>Sibling with more number of classes will be considered as 1st Sibling, irrespective of the order in which the selection is made.
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:939:hardcoded number:                    <p><strong>Ex:</strong> Sibling_1 : 10 to 12, Sibling_2 : 6 to 12</p>
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:940:hardcoded number:                    Sibling_2 will be taken as first sibling.
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:941:hardcoded string:                </div>} type="info" />
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:942:hardcoded string:                {productCombination === "byjus_classes" && <ClassTypeForm
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:943:hardcoded string:                    ref="classTypeForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:944:hardcoded object:                    classType={classType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:945:hardcoded object:                    changeClassType={this.changeClassType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:946:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:947:hardcoded object:                    setCountryId={this.setCountryId}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:950:hardcoded number:                    const formSerialNum = index + 1;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:951:hardcoded variable:                    const isLastSibling = (formSerialNum === formCount);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:952:hardcoded array:                    let grade = this.state[`initialClass-${formNo}`]
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:954:hardcoded string:                        if (get(this.state, [`initialClass-${formNo}`], "") < 10) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:955:hardcoded string:                            grade = (parseInt(get(this.state, [`initialClass-${formNo}`], ""), 10) + 1).toString()
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:958:hardcoded string:                            grade = get(this.state, [`byjusClassFinalGrade-${formNo}`], "")
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:961:hardcoded object:                    const isProficiencyAndFot = isProficiencyAndFotAvailable({ state: this.state, props: this.props, formNumber: formNo, productLearningType: this.getAvailableProductLearningType(formNo) });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:964:hardcoded object:                        <Fragment key={index}>
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:965:hardcoded object:                            {this.buildSiblingProductForm(formSerialNum, formNo, productDetails, isLastSibling)}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:968:hardcoded object:                                    ref={`proficiencyForm-${formNo}`}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:973:hardcoded array:                                this.state[`finalClass-${formNo}`] && this.state[`validity-${formNo}`] && this.state[`${formNo}_HLP`] && <OneToMany
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:974:hardcoded object:                                    ref={`oneToManyDetailsForm-${formNo}`}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:975:hardcoded object:                                    identifier={identifier}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:976:hardcoded array:                                    initialClass={this.state[`initialClass-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:977:hardcoded array:                                    board={this.state[`board-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:978:hardcoded array:                                    state={this.state[`state-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:979:hardcoded object:                                    productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:980:hardcoded array:                                    validity={this.state[`validity-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:981:hardcoded array:                                    subCourse={this.state[`subCourse-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:982:hardcoded string:                                    productCombination="home_learning_program"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:985:hardcoded number:                            {/* Byjus classes For 4 to 12 grades*/}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:987:hardcoded array:                                this.state[`isByjusClasses-${formNo}`] && this.state[`finalClass-${formNo}`] && this.state[`validity-${formNo}`] && this.state[`isByjusClasses-${formNo}`] && <ByjusMentoringClasses
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:988:hardcoded object:                                    ref={`byjusClassesDetailsForm-${formNo}`}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:989:hardcoded object:                                    identifier={identifier}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:990:hardcoded object:                                    initialClass={grade}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:991:hardcoded object:                                    classType={classType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:992:hardcoded array:                                    board={this.state[`board-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:993:hardcoded array:                                    state={this.state[`state-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:994:hardcoded object:                                    productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:995:hardcoded array:                                    validity={this.state[`validity-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:996:hardcoded array:                                    subCourse={this.state[`subCourse-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:997:hardcoded string:                                    productCombination="byjus_classes"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:998:hardcoded array:                                    initialValues={this.state[`${formNo}_byjus_class_initialValue`]}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:999:hardcoded array:                                    courseType={this.state[`courseType-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1000:hardcoded object:                                    countryId={countryId}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1003:hardcoded string:                            <div className="sibling-product-btn-holder">
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1005:hardcoded string:                                    <Button color="success" onClick={this.addSibling}>+</Button>}{" "}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1006:hardcoded string:                                {formSerialNum > 1 && <Button color="danger" onClick={() => this.removeSibling(formNo)}>-</Button>}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1013:hardcoded string:                    ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1014:hardcoded object:                    onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1015:hardcoded object:                    getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1016:hardcoded object:                    changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1017:hardcoded object:                    productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1018:hardcoded object:                    setError={this.setError}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1019:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1020:hardcoded object:                    countryCheck={true}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1022:hardcoded number:                {isD4Available && <Alert
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1023:hardcoded number:                    description={<div>There is D4 tablet selected which can be shared with other siblings.<p></p>{tabletMappingList && tabletMappingList.map((tabletList, index) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1025:hardcoded number:                            Sibling {index + 1} ({tabletList.siblingName}) : {tabletList.tabletName}<br></br>
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1028:hardcoded string:                    type="warning"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1029:hardcoded object:                    closable={true}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1030:hardcoded number:                    afterClose={this.closeD4WarningMessage} />}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SiblingProduct.js:1036:hardcoded object:export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(SiblingProduct);microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:1:hardcoded object:import React, { Component } from 'react';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:3:hardcoded object:import { get, find, size } from 'lodash';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:5:hardcoded object:import { saveProductDetails, addLoader, removeLoader, resetPrice, saveCashbackDetails } from 'modules/product/productReducer';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:8:hardcoded number:    isK12Class, getClasses, getSubCourses,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:11:hardcoded string:} from 'modules/product/components/productHelper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:12:hardcoded object:import { getStreamingFormFields, getMeProductlearningType, getMeFormattedValidity, getProfileOptions, getMeTablets, getIgcseClassDetails } from '../ProductHelper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:13:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:14:hardcoded file path:import ClassTypeForm from 'modules/product/components/ClassTypeForm'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:15:hardcoded file path:import ProductDetailsForm from 'modules/product/components/ProducDetailsForm';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:16:hardcoded file path:import FetchPrices from 'modules/product/components/FetchPrices';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:17:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:18:hardcoded object:import { isEqual } from 'date-fns';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:19:hardcoded file path:import OneToMany from 'modules/product/components/mentoring/OneToManyMentoring';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:20:hardcoded object:import { validateByjusClassesMentoringDetails } from 'modules/product/components/mentoring/MentoringHelper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:21:hardcoded file path:import ByjusMentoringClasses from 'modules/product/components/mentoring/ByjusMentoringClasses';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:25:hardcoded string:} from 'modules/product/utils/productConstant';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:26:hardcoded file path:import Proficiency from 'modules/student/Proficiency';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:27:hardcoded object:import { isProficiencyAndFotAvailable } from "modules/product/utils/ByjusClassesHelper";
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:29:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:30:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:31:hardcoded string:    leadDetails: get(state, 'auth.leadDetails', {}),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:32:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:33:hardcoded string:    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:34:hardcoded string:    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:35:hardcoded string:    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:36:hardcoded string:    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:37:hardcoded string:    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:38:hardcoded string:    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:39:hardcoded string:    addressDetail: get(state, 'address.details', {}),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:42:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:63:hardcoded object:        const { env } = this.props.authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:68:hardcoded object:            productConfig: {},
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:70:hardcoded array:            fields: [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:80:hardcoded object:        const { initialClass, course, classType, productLearningType, igcse, finalClass } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:81:hardcoded object:        const { productCombination, identifier, country, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:82:hardcoded object:        const { productDetailsForm, oneToManyDetailsForm, byjusClassesDetailsForm, proficiencyForm, classTypeForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:83:hardcoded string:        let oneToManyMentoringDetails = [], bhlpCourseDetails = [], byjusClassesMentoringDetails = [], trackId = '';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:85:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:86:hardcoded string:        const isDevEnv = ['local', 'development'].includes(env)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:87:hardcoded variable:        const details = await productDetailsForm.getProductDetails();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:88:hardcoded variable:        const oneToManyFormValue = oneToManyDetailsForm && await oneToManyDetailsForm.getMentoringValues();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:89:hardcoded variable:        const byjusClassesFormValue = byjusClassesDetailsForm && await byjusClassesDetailsForm.getMentoringValues();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:90:hardcoded variable:        const studentMarksDetails = await proficiencyForm?.getStudentAcademicDetails()
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:91:hardcoded variable:        const classTypeFormDetails = classTypeForm && await classTypeForm.getClassTypeFormDetails();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:93:hardcoded string:        let productDetails = get(details, 'productDetails');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:94:hardcoded number:        //for IGCSE board sending initialClass as initialClass - 1 and finalClass as finalClass + 1
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:95:hardcoded string:        const { firstClass, lastClass } = getIgcseClassDetails({ board: igcse ? "IGCSE" : "CBSE", initialClass, finalClass })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:96:hardcoded string:        if (firstClass) productDetails['initialClass'] = firstClass.toString();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:97:hardcoded string:        if (lastClass) productDetails['finalClass'] = lastClass.toString();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:98:hardcoded string:        if (productDetails && !productDetails.course) productDetails["course"] = course;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:100:hardcoded string:        if (ELIGIBLE_COMBINATIONS_FOR_BATCH.includes(productCombination) && !["1", "2", "3", "12"].includes(initialClass)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:101:hardcoded variable:            const response = validateByjusClassesMentoringDetails(byjusClassesFormValue, productDetails);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:102:hardcoded string:            byjusClassesMentoringDetails = get(response, "byjusClassesMentoringDetails", []);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:103:hardcoded string:            bhlpCourseDetails = get(response, "bhlpCourseDetails", []);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:104:hardcoded string:            trackId = get(response, "trackId", '');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:109:hardcoded string:        if (productCombination == "byjus_classes") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:110:hardcoded string:            productDetails["productLearningType"] = productLearningType
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:113:hardcoded string:        if (productCombination == "byjus_classes") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:114:hardcoded string:            if (!size(get(classTypeFormDetails, "formValue", {}))) return
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:117:hardcoded string:                ...get(classTypeFormDetails, "formValue", {}),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:120:hardcoded string:            if (classType == "neo") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:121:hardcoded string:                productDetails["trackId"] = trackId
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:122:hardcoded string:                if (!size(get(studentMarksDetails, "formValue", {}))) return
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:125:hardcoded string:                    ...get(studentMarksDetails, "formValue", {}),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:126:hardcoded string:                    languageOfInstruction: get(byjusClassesFormValue, "formValue.languageOfInstruction", null),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:127:hardcoded string:                    languageOfInstructionId: get(byjusClassesFormValue, "formValue.languageOfInstructionId", null)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:133:hardcoded variable:            const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:135:hardcoded string:                productType: 'streaming',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:138:hardcoded string:                mentoringCount: get(details, 'mentoringCount'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:139:hardcoded string:                couponDetails: get(details, 'couponDetails'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:144:hardcoded string:            if (classType == "neo") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:147:hardcoded string:                    url: '/api/neo/middleeast/streaming'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:152:hardcoded string:                    url: '/api/middleeast/streaming'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:159:hardcoded object:        const { productCombination } = productDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:160:hardcoded object:        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:161:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:168:hardcoded string:                payload["productDetails"] = formatByjusClassesFormValues(productDetails);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:173:hardcoded string:                url: '/api/middleeast/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:174:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:177:hardcoded string:                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:181:hardcoded object:                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:183:hardcoded string:                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:185:hardcoded object:                this.setState({ error }, () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:194:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:195:hardcoded string:        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:204:hardcoded object:        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:205:hardcoded object:        const { countryCheck } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:208:hardcoded object:            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:210:hardcoded string:                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:214:hardcoded string:                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:217:hardcoded string:                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:218:hardcoded object:                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:225:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:226:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:228:hardcoded variable:        const productLearningType = value;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:229:hardcoded string:        this.handleChanges(getCourseTypeOption("streaming", productLearningType), 'courseType');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:230:hardcoded object:        this.setState({ productLearningType, isByjusClass: false });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:235:hardcoded string:                subCourse: "", byjusClassFinalGrade: "", validity: "", tlpFinalGrade: "", courseType: ""
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:244:hardcoded object:        const { showProfileSelectionOption, existingProfiles, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:246:hardcoded string:        !selectedCourse && this.handleChanges('K10/K12', 'course');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:248:hardcoded object:        const { productType, user, productCombination, countryCheck } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:249:hardcoded array:        const { Products = [], Tablets = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:250:hardcoded object:        const productConfiguration = find(Products, { formattedName: productType }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:251:hardcoded object:        const { validity } = productConfiguration || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:252:hardcoded array:        const { MeTablets = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:253:hardcoded variable:        const classConfig = this.getStreamingClassConfig();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:254:hardcoded string:        const classes = getClasses(classConfig, [], '', productCombination);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:256:hardcoded variable:        const classesConfig = classConfig.classes;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:257:hardcoded variable:        const mentoringClassMap = getMentoringClassMap(classConfig.classes);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:258:hardcoded variable:        const oneToManyMentoringClassMap = getOneToManyMentoringClassMap(classesConfig);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:259:hardcoded variable:        const byjusClassesMap = getByjusClassesMap(classesConfig);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:261:hardcoded variable:        let selectedBoardConfig = classConfig
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:262:hardcoded object:        const subCourses = getSubCourses({ selectedBoardConfig, selectedFinalClass, tlpFinalGrade, byjusClassFinalGrade, productLearningType });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:263:hardcoded variable:        const subCourseOptions = subCourses && fetchSubCourseOptions(productCombination, subCourses)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:265:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:266:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:267:hardcoded string:        const isDevEnv = ['development', 'local'].includes(env)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:269:hardcoded variable:        let fields = [{
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:270:hardcoded string:            type: productCombination === "byjus_tlp" ? 'checkbox' : 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:271:hardcoded string:            name: 'igcse',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:272:hardcoded string:            checkBoxLabel: "IGCSE",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:276:hardcoded string:            type: productCombination === "byjus_classes" ? 'select' : "hidden",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:277:hardcoded string:            name: 'productLearningType',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:278:hardcoded string:            label: 'Choose Product Learning Type',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:279:hardcoded string:            message: "Please Product Learning Type",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:280:hardcoded string:            options: getMeProductlearningType({ productType: "streaming" }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:282:hardcoded string:            required: productCombination === "byjus_classes" ? true : false
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:284:hardcoded object:        ...getStreamingFormFields({ state: this.state, props: this.props, handleChanges: this.handleChanges, handleClassBlurEvent: this.handleClassBlurEvent, getStreamingClassConfig: this.getStreamingClassConfig, addTLPCourses: this.addTLPCourses }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:286:hardcoded string:            type: isK12Class(selectedFinalClass, tlpFinalGrade, byjusClassFinalGrade) ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:287:hardcoded string:            name: 'subCourse',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:288:hardcoded string:            label: 'Select Sub Course',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:289:hardcoded number:            required: isK12Class(selectedFinalClass, tlpFinalGrade, byjusClassFinalGrade),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:293:hardcoded string:            message: "Please select Sub Course"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:295:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:296:hardcoded object:            options: selectedInitialClass && getMeFormattedValidity({ validity, initialClass: selectedInitialClass, productCombination: productLearningType, user, isDevEnv }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:297:hardcoded string:            name: 'validity',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:298:hardcoded string:            label: 'Select Initial Validity',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:302:hardcoded string:            message: "Please Select Initial Validity"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:305:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:306:hardcoded object:            options: getMeTablets({ tablets: MeTablets, selectedInitialClass, productType, isPrivilegedUser, isDevEnv }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:307:hardcoded string:            name: 'tablet',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:308:hardcoded string:            label: 'Select Tablet',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:310:hardcoded string:            message: "Please select Tablet"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:313:hardcoded string:            type: (showProfileSelectionOption && existingProfiles.length > 0 ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:315:hardcoded string:            name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:316:hardcoded string:            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:317:hardcoded number:            required: (showProfileSelectionOption && existingProfiles.length > 0 ? true : false),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:319:hardcoded string:            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:321:hardcoded string:                display: 'block',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:322:hardcoded string:                height: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:323:hardcoded string:                lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:333:hardcoded string:            "classes": [{
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:334:hardcoded string:                "class": "1",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:335:hardcoded string:                "value": { label: "1", value: "1" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:336:hardcoded string:                "crpAllowed": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:337:hardcoded string:                "subCourses": [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:338:hardcoded string:                "isMentoringApplicable": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:339:hardcoded string:                "maxClass": "5"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:342:hardcoded string:                "class": "2",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:343:hardcoded string:                "value": { label: "2", value: "2" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:344:hardcoded string:                "crpAllowed": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:345:hardcoded string:                "subCourses": [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:346:hardcoded string:                "isMentoringApplicable": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:347:hardcoded string:                "maxClass": "6"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:350:hardcoded string:                "class": "3",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:351:hardcoded string:                "value": { label: "3", value: "3" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:352:hardcoded string:                "crpAllowed": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:353:hardcoded string:                "subCourses": [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:354:hardcoded string:                "isMentoringApplicable": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:355:hardcoded string:                "isOneToManyApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:356:hardcoded string:                "maxClass": "7"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:358:hardcoded string:                "class": "4",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:359:hardcoded string:                "value": { label: "4", value: "4" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:360:hardcoded string:                "crpAllowed": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:361:hardcoded string:                "subCourses": [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:362:hardcoded string:                "isMentoringApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:363:hardcoded string:                "isOneToManyApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:364:hardcoded string:                "maxClass": "10"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:367:hardcoded string:                "class": "5",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:368:hardcoded string:                "value": { label: "5", value: "5" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:369:hardcoded string:                "crpAllowed": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:370:hardcoded string:                "subCourses": [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:371:hardcoded string:                "isMentoringApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:372:hardcoded string:                "isOneToManyApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:373:hardcoded string:                "maxClass": "10"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:376:hardcoded string:                "class": "6",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:377:hardcoded string:                "value": { label: "6", value: "6" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:378:hardcoded string:                "crpAllowed": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:379:hardcoded string:                "subCourses": [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:380:hardcoded string:                "isMentoringApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:381:hardcoded string:                "isOneToManyApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:382:hardcoded string:                "maxClass": "12"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:385:hardcoded string:                "class": "7",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:386:hardcoded string:                "value": { label: "7", value: "7" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:387:hardcoded string:                "crpAllowed": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:388:hardcoded string:                "subCourses": [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:389:hardcoded string:                "isMentoringApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:390:hardcoded string:                "isOneToManyApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:391:hardcoded string:                "maxClass": "12"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:394:hardcoded string:                "class": "8",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:395:hardcoded string:                "value": { label: "8", value: "8" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:396:hardcoded string:                "crpAllowed": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:397:hardcoded string:                "subCourses": [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:398:hardcoded string:                "isMentoringApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:399:hardcoded string:                "isOneToManyApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:400:hardcoded string:                "maxClass": "12"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:403:hardcoded string:                "class": "9",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:404:hardcoded string:                "value": { label: "9", value: "9" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:405:hardcoded string:                "crpAllowed": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:406:hardcoded string:                "subCourses": [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:407:hardcoded string:                "isMentoringApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:408:hardcoded string:                "isOneToManyApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:409:hardcoded string:                "maxClass": "12"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:412:hardcoded string:                "class": "10",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:413:hardcoded string:                "value": { label: "10", value: "10" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:414:hardcoded string:                "crpAllowed": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:415:hardcoded string:                "subCourses": [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:416:hardcoded string:                "isMentoringApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:417:hardcoded string:                "isOneToManyApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:418:hardcoded string:                "maxClass": "12"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:421:hardcoded string:                "class": "11",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:422:hardcoded string:                "value": { label: "11", value: "11" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:423:hardcoded string:                "crpAllowed": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:424:hardcoded string:                "subCourses": [
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:425:hardcoded string:                    { label: "JEE", value: "JEE" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:426:hardcoded string:                    { label: "NEET", value: "NEET" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:427:hardcoded string:                    { label: "JEE+NEET", value: "JEE/NEET" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:428:hardcoded string:                    { label: "Commerce", value: "Commerce" }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:430:hardcoded string:                "isMentoringApplicable": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:431:hardcoded string:                "isOneToManyApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:432:hardcoded string:                "maxClass": "12",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:433:hardcoded string:                "language": [
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:435:hardcoded string:                        "label": "English",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:436:hardcoded string:                        "value": "english"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:439:hardcoded string:                        "label": "Combination of Hindi and English",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:440:hardcoded string:                        "value": "hindi_english"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:445:hardcoded string:                "class": "12",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:446:hardcoded string:                "value": { label: "12", value: "12" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:447:hardcoded string:                "crpAllowed": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:448:hardcoded string:                "subCourses": [
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:449:hardcoded string:                    { label: "JEE", value: "JEE" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:450:hardcoded string:                    { label: "NEET", value: "NEET" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:451:hardcoded string:                    { label: "JEE+NEET", value: "JEE/NEET" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:452:hardcoded string:                    { label: "Commerce", value: "Commerce" }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:454:hardcoded string:                "isMentoringApplicable": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:455:hardcoded string:                "maxClass": "12",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:456:hardcoded string:                "language": [
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:458:hardcoded string:                        "label": "English",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:459:hardcoded string:                        "value": "english"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:462:hardcoded string:                        "label": "Combination of Hindi and English",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:463:hardcoded string:                        "value": "hindi_english"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:468:hardcoded string:                "class": "12+",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:469:hardcoded string:                "value": { label: "12+", value: "12+" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:470:hardcoded string:                "crpAllowed": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:471:hardcoded string:                "subCourses": [
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:472:hardcoded string:                    { label: "JEE", value: "JEE" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:473:hardcoded string:                    { label: "NEET", value: "NEET" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:474:hardcoded string:                    { label: "JEE+NEET", value: "JEE/NEET" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:475:hardcoded string:                    { label: "Commerce", value: "Commerce" }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:477:hardcoded string:                "isMentoringApplicable": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:478:hardcoded string:                "isOneToManyApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:479:hardcoded string:                "maxClass": "12+",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:480:hardcoded string:                "language": [
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:482:hardcoded string:                        "label": "English",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:483:hardcoded string:                        "value": "english"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:486:hardcoded string:                        "label": "Combination of Hindi and English",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:487:hardcoded string:                        "value": "hindi_english"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:492:hardcoded string:                "class": "13",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:493:hardcoded string:                "value": { label: "12th Crash Course", value: "13" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:494:hardcoded string:                "crpAllowed": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:495:hardcoded string:                "subCourses": [
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:496:hardcoded string:                    { label: "JEE", value: "JEE" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:497:hardcoded string:                    { label: "NEET", value: "NEET" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:498:hardcoded string:                    { label: "JEE+NEET", value: "JEE/NEET" }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:500:hardcoded string:                "isMentoringApplicable": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:501:hardcoded string:                "isOneToManyApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:502:hardcoded string:                "maxClass": "13",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:503:hardcoded string:                "language": [{ label: "English", value: "english" }]
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:506:hardcoded string:                "class": "14",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:507:hardcoded string:                "value": { label: "12th Retarget Crash Course", value: "14" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:508:hardcoded string:                "crpAllowed": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:509:hardcoded string:                "subCourses": [
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:510:hardcoded string:                    { label: "JEE", value: "JEE" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:511:hardcoded string:                    { label: "NEET", value: "NEET" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:512:hardcoded string:                    { label: "JEE+NEET", value: "JEE/NEET" }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:514:hardcoded string:                "isMentoringApplicable": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:515:hardcoded string:                "isOneToManyApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:516:hardcoded string:                "maxClass": "14",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:517:hardcoded string:                "language": [{ label: "English", value: "english" }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:521:hardcoded string:                "class": "11+12",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:522:hardcoded string:                "value": { label: "11-12", value: "11+12" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:523:hardcoded string:                "crpAllowed": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:524:hardcoded string:                "subCourses": [
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:525:hardcoded string:                    { label: "JEE", value: "JEE" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:526:hardcoded string:                    { label: "NEET", value: "NEET" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:527:hardcoded string:                    { label: "JEE+NEET", value: "JEE/NEET" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:528:hardcoded string:                    { label: "Commerce", value: "Commerce" }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:530:hardcoded string:                "isMentoringApplicable": false,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:531:hardcoded string:                "isOneToManyApplicable": true,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:532:hardcoded string:                "language": [
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:534:hardcoded string:                        "label": "English",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:535:hardcoded string:                        "value": "english"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:538:hardcoded string:                        "label": "Combination of Hindi and English",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:539:hardcoded string:                        "value": "hindi_english"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:548:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:549:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:552:hardcoded string:        if (name == "initialClass") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:553:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ finalClass: "", tablet: "", subCourse: "", validity: "", tlpFinalGrade: "", byjusClassFinalGrade: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:556:hardcoded string:        if (name == "finalClass") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:557:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ tlpFinalGrade: "", byjusClassFinalGrade: "", validity: "" })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:560:hardcoded string:        if (name === "courseType") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:561:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ subCourse: "", tablet: "", validity: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:564:hardcoded string:        if (name === 'igcse') {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:565:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ initialClass: "", finalClass: "", tablet: "", validity: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:569:hardcoded array:            [name]: value,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:575:hardcoded object:        const { initialClass: selectedInitialClass, productLearningType, finalClass } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:577:hardcoded number:        let initialGrade = isAdvanceAdmission.includes(productLearningType) ? (parseInt(finalClass, 10) + 1).toString() : selectedInitialClass;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:578:hardcoded object:        this.setState({ isOneToManyClass: false, isByjusClass: false })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:579:hardcoded array:        const isMentoringApplicable = mentoringClassMap[initialGrade] || false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:580:hardcoded array:        const isOneToManyMentoringApplicable = oneToManyMentoringClassMap[initialGrade] || false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:581:hardcoded array:        const isByjusClassesApplicable = byjusClassesMap[initialGrade] || false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:591:hardcoded string:        this.setState({ classType: value ? "neo" : "oneToMega", isByjusClass: false });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:593:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:594:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:596:hardcoded string:            productLearningType: "", initialClass: "", finalClass: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:597:hardcoded string:            byjusClassFinalGrade: "", validity: "", tlpFinalGrade: "", courseType: "", tablet: ""
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:603:hardcoded object:        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:608:hardcoded object:            const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:609:hardcoded variable:            const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:610:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ initialClass: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:615:hardcoded object:            this.setState({ productConfig: nextProps.productConfig }, async () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:623:hardcoded object:        const { user } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:624:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:626:hardcoded string:        if (isPrivilegedUser && productCombination === "byjus_classes") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:628:hardcoded string:                classType: "neo"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:640:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:641:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:644:hardcoded string:            this.onChangeProductLearningType("byjus_classes_plus_byjus_tlp", "productLearningType")
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:646:hardcoded string:            this.onChangeProductLearningType("byjus_classes", "productLearningType")
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:647:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ tlpFinalGrade: "" })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:652:hardcoded object:        const { productDetails, productConfig, productType, productCombination } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:655:hardcoded string:        if (productType === get(productDetails, 'productType')) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:656:hardcoded string:            const formValues = get(productDetails, 'students[0].formValues');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:660:hardcoded string:                course: get(formValues, 'course'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:661:hardcoded string:                board: get(formValues, 'board'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:662:hardcoded string:                initialClass: get(formValues, 'initialClass'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:663:hardcoded string:                finalClass: get(formValues, 'finalClass'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:664:hardcoded string:                subCourse: get(formValues, 'subCourse')
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:669:hardcoded string:        this.setState({ productConfig, course: 'K10/K12' });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:673:hardcoded string:        const { error, productConfig, productDetails, isMentoringClass, isOneToManyClass, isByjusClass, initialClass, validity, subCourse, productLearningType = "", courseType, classType, countryId } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:674:hardcoded object:        const { changeNextBtnMode, productType, productCombination, identifier, user, authDetails, leadDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:675:hardcoded string:        const accountNumber = get(leadDetails, 'accountNumber')
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:676:hardcoded array:        const fields = productConfig ? this.getFields() : [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:677:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:678:hardcoded object:        const { env } = authDetails
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:679:hardcoded object:        const isProficiencyAndFot = isProficiencyAndFotAvailable({ state: this.state, props: this.props });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:681:hardcoded string:        let grade = "";
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:683:hardcoded string:            if (get(this.state, "initialClass", "") < 10) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:684:hardcoded string:                grade = (parseInt(get(this.state, "initialClass", ""), 10) + 1).toString()
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:686:hardcoded string:                grade = get(this.state, "byjusClassFinalGrade", "")
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:689:hardcoded string:            grade = (parseInt(get(this.state, "initialClass", ""), 10) + 1).toString();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:691:hardcoded string:            grade = get(this.state, "initialClass", "")
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:696:hardcoded object:                <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:697:hardcoded string:                {productCombination === "byjus_classes" && <ClassTypeForm
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:698:hardcoded string:                    ref="classTypeForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:699:hardcoded object:                    classType={classType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:700:hardcoded object:                    changeClassType={this.changeClassType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:701:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:702:hardcoded object:                    setCountryId={this.setCountryId}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:705:hardcoded string:                    ref="productDetailsForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:706:hardcoded object:                    productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:707:hardcoded object:                    productLearningType={productLearningType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:708:hardcoded object:                    fields={fields}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:709:hardcoded object:                    initialValues={{ ...getProductFormInitialValue(productDetails) }}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:710:hardcoded object:                    isOneToManyAllowed={ELIGIBLE_COMBINATIONS_FOR_ONE_TO_MANY.includes(productCombination) ? true : false} // Byjus HLP
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:711:hardcoded object:                    isByjusClassesAllowed={ELIGIBLE_COMBINATIONS_FOR_BATCH.includes(productCombination) ? true : false} // Byjus Classes
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:712:hardcoded object:                    isMentoringClass={isPrivilegedUser && ELIGIBLE_COMBINATIONS_FOR_ONE_ON_ONE.includes(productCombination) ? isMentoringClass : false} // used to show mentoring component to select
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:713:hardcoded object:                    isMentoringAllowed={isPrivilegedUser && ELIGIBLE_COMBINATIONS_FOR_ONE_ON_ONE.includes(productCombination) ? true : false}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:714:hardcoded object:                    accountNumber={accountNumber}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:715:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:719:hardcoded string:                        ref="proficiencyForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:723:hardcoded number:                {/* BHLP for 4 to 12 */}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:726:hardcoded string:                        ref="oneToManyDetailsForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:727:hardcoded object:                        identifier={identifier}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:728:hardcoded object:                        initialClass={initialClass}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:729:hardcoded object:                        productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:730:hardcoded object:                        validity={validity}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:731:hardcoded object:                        subCourse={subCourse}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:732:hardcoded string:                        productCombination="home_learning_program" />
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:734:hardcoded number:                {/* Byjus classes For 4 to 12 grades*/}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:736:hardcoded string:                    !["Streaming 12"].includes(initialClass) && isByjusClass && validity && ELIGIBLE_COMBINATIONS_FOR_BATCH.includes(productCombination) && <ByjusMentoringClasses
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:737:hardcoded string:                        ref="byjusClassesDetailsForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:738:hardcoded object:                        identifier={identifier}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:739:hardcoded object:                        initialClass={grade}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:740:hardcoded object:                        productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:741:hardcoded object:                        validity={validity}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:742:hardcoded object:                        subCourse={subCourse}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:743:hardcoded object:                        productLearningType={productLearningType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:744:hardcoded object:                        courseType={courseType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:745:hardcoded object:                        classType={classType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:746:hardcoded object:                        countryId={countryId}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:747:hardcoded string:                        productCombination="byjus_classes" />
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:750:hardcoded string:                    ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:751:hardcoded object:                    onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:752:hardcoded object:                    getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:753:hardcoded object:                    changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:754:hardcoded object:                    productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:755:hardcoded object:                    setError={this.setError}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:756:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:757:hardcoded object:                    countryCheck={true}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/StreamingProduct.js:765:hardcoded object:export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(StreamingProduct);microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:1:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:2:hardcoded object:import React, { Component, forwardRef, useEffect, useImperativeHandle, useReducer, useRef } from 'react'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:3:hardcoded object:import { cloneDeep, find, get, isEmpty } from 'lodash';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:4:hardcoded object:import { connect, useSelector, useDispatch } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:6:hardcoded object:import { resetPrice, addLoader, removeLoader, saveProductDetails, saveCashbackDetails } from 'modules/product/productReducer';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:7:hardcoded file path:import ProductDetailsForm from 'modules/product/components/ProducDetailsForm';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:8:hardcoded object:import { productPermissions } from 'utility/screenPermission';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:9:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:10:hardcoded file path:import FetchPrices from 'modules/product/components/FetchPrices';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:11:hardcoded file path:import InfoWrapper from 'components/InfoWrapper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:13:hardcoded object:import { FOUNDATION_GRADES } from 'modules/product/utils/productConstant';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:14:hardcoded object:import { getProductLearningType, getInitialClassValues, getFinalClassValues, getSubCourses, fetchNeoSubCourses, getValidityOptions, getClasses, checkIsPrivilegedUser, validateAakashNeoMentoringDetails, getByjusClassesMap, getTabletOptions } from './AakashNeoHelper'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:15:hardcoded file path:import AakashNeoBatches from 'modules/ordertype/aakashneo/AakashNeoBatches';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:17:hardcoded variable:const AakashNeo = forwardRef((props, ref) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:19:hardcoded object:    const { productType, productCombination, changeNextBtnMode, history, country } = props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:20:hardcoded variable:    const dispatch = useDispatch();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:22:hardcoded variable:    const reducer = (state, action) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:25:hardcoded string:            case "loading_&_error":
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:26:hardcoded object:                return { ...state, loading: action.value.loading, error: action.value.error };
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:27:hardcoded string:            case "initialData":
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:28:hardcoded object:                return { ...state, ...action.value };
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:29:hardcoded string:            case "productConfig":
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:30:hardcoded object:                return { ...state, productConfig: action.value };
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:32:hardcoded string:            case "productLearningType":
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:33:hardcoded string:                return { ...state, initialClass: "", finalClass: "", tablet: "", validity: "", subCourse: "", [action.type]: action.value }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:35:hardcoded string:            case "initialClass":
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:36:hardcoded variable:                const isFoundation = FOUNDATION_GRADES.includes(action.value)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:37:hardcoded string:                return { ...state, finalClass: "", tablet: "", validity: "", subCourse: "", [action.type]: action.value, isFoundation }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:39:hardcoded string:            case "finalClass":
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:40:hardcoded string:                return { ...state, tablet: "", validity: "", subCourse: "", [action.type]: action.value }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:42:hardcoded string:            case "subCourse":
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:43:hardcoded string:                return { ...state, validity: "", tablet: "", [action.type]: action.value }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:45:hardcoded string:            case "validity":
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:46:hardcoded string:                return { ...state, tablet: "", [action.type]: action.value }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:48:hardcoded string:            case "tablet":
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:49:hardcoded array:                return { ...state, [action.type]: action.value }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:51:hardcoded string:            case "userProfile":
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:52:hardcoded array:                return { ...state, [action.type]: action.value }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:54:hardcoded string:            case "isByjusClasses":
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:55:hardcoded object:                return { ...state, ...action.value }
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:62:hardcoded array:    const [formState, setFormState] = useReducer(reducer, {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:66:hardcoded string:        course: 'K12',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:68:hardcoded object:        productConfig: {},
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:69:hardcoded array:        fields: [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:74:hardcoded variable:    const productDetailsForm = useRef(null)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:75:hardcoded variable:    const aakashNeoDetailsForm = useRef(null)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:76:hardcoded variable:    const fetchComp = useRef(null)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:78:hardcoded string:    const { details: productDetails, config: productConfig, existingProfiles, showProfileSelectionOption, loading, error } = useSelector(state => get(state, 'product', {}))
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:79:hardcoded string:    const { details: authDetails, leadDetails } = useSelector(state => get(state, 'auth', {}))
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:80:hardcoded string:    const { salesDetails, identifier } = useSelector(state => get(state, 'details', {}))
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:83:hardcoded string:        if (productType === get(productDetails, 'productType')) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:84:hardcoded string:            const formValues = get(productDetails, 'students[0].formValues');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:87:hardcoded string:                type: 'initialData',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:90:hardcoded string:                    course: get(formValues, 'course'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:91:hardcoded string:                    board: get(formValues, 'board'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:92:hardcoded string:                    initialClass: get(formValues, 'initialClass'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:93:hardcoded string:                    subCourse: get(formValues, 'subCourse')
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:98:hardcoded string:        setFormState({ type: 'productConfig', value: productConfig });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:99:hardcoded array:    }, [])
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:104:hardcoded object:                const { status, productDetails } = fetchComp.current.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:106:hardcoded string:                    if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:110:hardcoded string:                        setError('Product Details Missing')
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:113:hardcoded string:                    const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:120:hardcoded variable:    const getProfileOptions = () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:121:hardcoded string:        const isPrivilegedUser = checkIsPrivilegedUser(authDetails["user"]);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:122:hardcoded number:        if (existingProfiles && existingProfiles.length > 0) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:123:hardcoded variable:            let newExistingProfile = existingProfiles;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:124:hardcoded string:            newExistingProfile = newExistingProfile.find(profile => profile.value === "newProfile");
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:126:hardcoded string:                existingProfiles.push({ "label": "New Profile", value: "newProfile" })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:132:hardcoded variable:    const getFormFields = () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:135:hardcoded string:        const userPermissions = get(authDetails['user'], 'permissions', []);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:136:hardcoded variable:        const isPriviledgedUser = userPermissions.includes(productPermissions.ignorePriceRangeCheck);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:137:hardcoded array:        const { Products = [], Boards = [], MeTablets = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:138:hardcoded object:        const productConfiguration = find(Products, { formattedName: productType }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:139:hardcoded object:        const { validity } = productConfiguration || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:140:hardcoded string:        const selectedBoardConfig = find(Boards, { formattedName: (selectedBoard || "CBSE") }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:141:hardcoded variable:        const byjusClassesMap = getByjusClassesMap(selectedBoardConfig.classes);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:142:hardcoded object:        const subCourses = getSubCourses({ selectedBoardConfig, selectedFinalClass });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:143:hardcoded object:        const subCourseOptions = subCourses && fetchNeoSubCourses({ subCourses, selectedFinalClass, selectedInitialClass, productLearningType })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:144:hardcoded variable:        const classes = getClasses(selectedBoardConfig);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:145:hardcoded string:        const isSubCourseAvailble = ['12', '13+'].includes(selectedFinalClass)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:147:hardcoded variable:        const handleChanges = (value, name) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:148:hardcoded object:            setFormState({ type: name, value: value });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:151:hardcoded variable:        const handleClassBlurEvent = (byjusClassesMap) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:152:hardcoded object:            const { initialClass: selectedInitialClass } = formState;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:154:hardcoded string:            setFormState({ type: 'isByjusClasses', value: { isOneToManyClass: false, isByjusClass: false } })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:155:hardcoded array:            const isByjusClassesApplicable = byjusClassesMap[selectedInitialClass] || false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:157:hardcoded string:            setFormState({ type: 'isByjusClasses', value: { isByjusClass: isByjusClassesApplicable } })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:161:hardcoded variable:        let fields = [{
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:162:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:163:hardcoded string:            name: 'productLearningType',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:164:hardcoded string:            label: 'Select Product Learning Type',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:165:hardcoded string:            message: "Please Select Product Learning Type",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:170:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:171:hardcoded string:            name: 'initialClass',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:172:hardcoded string:            label: 'Select Initial Grade',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:174:hardcoded object:            options: getInitialClassValues({ classes, productLearningType }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:176:hardcoded string:            message: "Please Select Initial Grade"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:178:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:179:hardcoded string:            name: 'finalClass',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:180:hardcoded string:            label: 'Select Final Grade',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:182:hardcoded object:            options: getFinalClassValues({ classes, selectedInitialClass, productLearningType }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:184:hardcoded string:            message: "Please Select Final Grade"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:187:hardcoded string:            type: isSubCourseAvailble ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:188:hardcoded string:            name: 'subCourse',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:189:hardcoded string:            label: 'Select Sub Course',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:194:hardcoded string:            message: "Please select Sub Course"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:196:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:197:hardcoded string:            options: getValidityOptions({ selectedInitialClass, productLearningType, productType: "combo", selectedFinalClass, isPriviledgedUser, validity }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:198:hardcoded string:            name: 'validity',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:199:hardcoded string:            label: 'Select Initial Validity',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:203:hardcoded string:            message: "Please Select Initial Validity"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:206:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:207:hardcoded string:            name: 'tablet',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:208:hardcoded string:            label: 'Select Tablet',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:212:hardcoded string:            message: 'Please select Tablet'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:215:hardcoded string:            type: (showProfileSelectionOption && existingProfiles.length > 0 ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:217:hardcoded string:            name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:218:hardcoded string:            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:220:hardcoded string:            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:222:hardcoded string:                display: 'block',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:223:hardcoded string:                height: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:224:hardcoded string:                lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:226:hardcoded number:            required: (showProfileSelectionOption && existingProfiles.length > 0 ? true : false)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:232:hardcoded variable:    const setError = (err) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:233:hardcoded string:        setFormState({ type: 'loading_&_error', value: { error: err, loading: formState.loading } });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:236:hardcoded variable:    const getProductDetails = async () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:238:hardcoded variable:        const details = await productDetailsForm.current.getProductDetails();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:239:hardcoded string:        let productDetails = get(details, 'productDetails');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:240:hardcoded array:        let bhlpCourseDetails = [], mentoringDetails = [], neoClassesFormValue;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:241:hardcoded string:        const productLearningType = get(productDetails, "productLearningType", "")
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:243:hardcoded string:        if (productLearningType === 'aakash_byjus_live') {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:246:hardcoded variable:            const response = validateAakashNeoMentoringDetails(neoClassesFormValue, productDetails);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:247:hardcoded string:            mentoringDetails = get(response, "neoClassesMentoringDetails", []);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:248:hardcoded string:            bhlpCourseDetails = get(response, "bhlpCourseDetails", []);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:251:hardcoded string:                proficiency: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:252:hardcoded string:                mathPercent: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:253:hardcoded string:                sciencePercent: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:254:hardcoded string:                languageOfInstruction: get(neoClassesFormValue, "formValue.languageOfInstruction", null),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:255:hardcoded string:                languageOfInstructionId: get(neoClassesFormValue, "formValue.languageOfInstructionId", null),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:259:hardcoded string:        if (productDetails && productDetails["tablet"]) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:260:hardcoded string:            productDetails['tabletId'] = `T-${productDetails["tablet"]}`;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:264:hardcoded variable:            const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:267:hardcoded string:                course: 'k12',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:276:hardcoded string:                url: '/api/middleeast/aakashNeo/combo'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:283:hardcoded variable:    const storeProductDetailsinDb = async (productDetails) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:284:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:294:hardcoded string:                url: '/api/middleeast/aakashNeo/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:295:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:298:hardcoded string:                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:304:hardcoded string:                navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:313:hardcoded variable:    const navigateToScreen = (path) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:315:hardcoded string:        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:321:hardcoded object:            <ErrorWrapper error={formState?.error} />
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:323:hardcoded object:                initialValues={formState}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:324:hardcoded object:                ref={productDetailsForm}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:325:hardcoded object:                productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:326:hardcoded object:                fields={getFormFields()}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:328:hardcoded string:            {formState?.validity && (formState?.productLearningType === "aakash_byjus_live") && <AakashNeoBatches
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:329:hardcoded object:                ref={aakashNeoDetailsForm}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:330:hardcoded object:                identifier={identifier}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:331:hardcoded object:                initialClass={formState?.initialClass}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:332:hardcoded object:                finalClass={formState?.finalClass}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:333:hardcoded object:                productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:334:hardcoded object:                validity={formState?.validity}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:335:hardcoded object:                subCourse={formState?.subCourse}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:336:hardcoded object:                productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:337:hardcoded object:                productLearningType={formState?.productLearningType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:338:hardcoded string:                classType="neo"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:339:hardcoded string:                courseType="regular"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:342:hardcoded object:                ref={fetchComp}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:343:hardcoded object:                getProductDetails={getProductDetails}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:344:hardcoded object:                changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:345:hardcoded object:                productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:346:hardcoded object:                setError={setError}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:347:hardcoded object:                productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:348:hardcoded object:                validity={formState?.validity}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeo.js:349:hardcoded object:                selectedCourse={formState?.course}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:1:hardcoded object:import _, { get, find, isEmpty, isEqual, cloneDeep } from "lodash";
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:3:hardcoded object:import { productPermissions } from "utility/screenPermission";
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:5:hardcoded object:import { getCurrentAcademicYear } from "lib/validityHelper";
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:6:hardcoded object:import { allowedTablets } from '../../../utils/config';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:8:hardcoded variable:export const getProductLearningType = () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:10:hardcoded object:  const { isDevEnv } = window
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:11:hardcoded variable:  const productLearningTypes = [
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:12:hardcoded string:    { label: "Aakash Byju’s Live Program", value: "aakash_byjus_live" },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:14:hardcoded string:      label: "Aakash Byju’s Tablet Learning Program",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:15:hardcoded string:      value: "aakash_byjus_tlp",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:21:hardcoded variable:export const getInitialClassValues = (details) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:22:hardcoded string:  const { classes, productLearningType = "", isDevEnv } = details;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:23:hardcoded string:  let eligibleGrades = ["11", "12", "13+"];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:24:hardcoded variable:  let initialClasses = classes;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:29:hardcoded variable:export const getFinalClassValues = (details) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:30:hardcoded object:  const { classes, selectedInitialClass, productLearningType, isDevEnv } = details;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:31:hardcoded string:  const eligibleGrades = ["11", "12", "13+"];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:32:hardcoded variable:  let finalClasses = classes;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:35:hardcoded string:  if (["11", "12"].includes(selectedInitialClass)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:36:hardcoded string:    finalClasses = finalClasses.filter((classVal) => !["13+", "11"].includes(classVal.value));
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:38:hardcoded string:  if (selectedInitialClass == "13+") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:39:hardcoded string:    finalClasses = finalClasses.filter((classVal) => ["13+"].includes(classVal.value));
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:44:hardcoded variable:export const getSubCourses = (classConfig) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:45:hardcoded array:  let subCourses = [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:46:hardcoded object:  const { selectedBoardConfig, selectedFinalClass } = classConfig;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:47:hardcoded object:  const selectedClassConfig = find(selectedBoardConfig.classes, { class: selectedFinalClass }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:48:hardcoded string:  const k12Grade = ["11", "12", "13+"];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:49:hardcoded number:  if (k12Grade.includes(selectedFinalClass)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:50:hardcoded string:    subCourses = get(selectedClassConfig, "subCourses");
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:55:hardcoded variable:export const fetchNeoSubCourses = (details) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:57:hardcoded string:  // subCourses = subCourses.filter(course => ["JEE", "NEET"].includes(get(course, "value", "")))
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:58:hardcoded object:  let { selectedFinalClass, subCourses, selectedInitialClass, productLearningType } = details;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:59:hardcoded string:  let eligibleCourses = ["JEE", "NEET", "JEE/NEET"];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:62:hardcoded string:  if (selectedInitialClass == "13+" && productLearningType == 'aakash_byjus_live') {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:63:hardcoded string:    subCourses = subCourses.filter((course) => !["JEE/NEET"].includes(course.value));
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:68:hardcoded variable:export const getValidityOptions = (details) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:69:hardcoded object:  const { selectedInitialClass, productLearningType, productType, selectedFinalClass, isPriviledgedUser, isDevEnv, validity } = details;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:70:hardcoded array:  let options = [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:76:hardcoded number:  options = options.filter((val) => parseInt(val.value) > 2022);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:78:hardcoded number:    options = options.filter((val) => parseInt(val.value) == 2024);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:83:hardcoded variable:const getFormattedValidity = (productDetails) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:84:hardcoded object:  const { validity, selectedInitialClass, productLearningType, productType, selectedFinalClass, isPriviledgedUser, isDevEnv } = productDetails || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:85:hardcoded array:  let formattedValidity = [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:86:hardcoded variable:  let currentYear = getCurrentAcademicYear();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:87:hardcoded variable:  let thisYear = new Date().getFullYear();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:93:hardcoded variable:    let currentMonth = new Date().getMonth();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:95:hardcoded string:      currentMonth >= 4 ? validity.filter((ele) => ele.value != "x") : validity;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:97:hardcoded number:      { label: currentYear + 1, value: currentYear + 1 },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:98:hardcoded number:      { label: currentYear + 2, value: currentYear + 2 },
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:105:hardcoded variable:const getPriviledUserValidity = (productType, productCombination, isDevEnv) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:106:hardcoded variable:  let currentYear = getCurrentAcademicYear(productType);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:107:hardcoded variable:  let updatedYear = currentYear;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:108:hardcoded number:  const validityUpto = updatedYear + 15; // Validity upto 2035 for priviled user
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:109:hardcoded array:  const validity = [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:121:hardcoded variable:export const getClasses = (selectedBoardConfig) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:122:hardcoded array:  const { classes = [] } = selectedBoardConfig;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:123:hardcoded string:  let classOptions = cloneDeep(classes.map((opt) => get(opt, "value")));
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:127:hardcoded variable:export const checkIsPrivilegedUser = (user) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:129:hardcoded string:  const userPermissions = get(user, "permissions", []);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:130:hardcoded variable:  const isPrivilegedUser = userPermissions.includes(
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:136:hardcoded variable:export const validateAakashNeoMentoringDetails = (byjusClassesFormValue, productDetails) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:137:hardcoded array:  let neoClassesMentoringDetails = [], bhlpCourseDetails = [], validatedResponse = { status: true };
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:138:hardcoded object:  const { mentoring, courseInfo } = byjusClassesFormValue;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:140:hardcoded number:  if (productDetails && mentoring.length > 0 && !isEmpty(courseInfo)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:146:hardcoded number:  } else if (neoClassesMentoringDetails.length === 0 || isEmpty(courseInfo)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:156:hardcoded array:export const getByjusClassesMap = (classes = []) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:157:hardcoded object:  const byjusClassMap = {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:159:hardcoded string:    byjusClassMap[get(cls, "class")] = get(cls, "isOneToManyApplicable");
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:166:hardcoded variable:export const getTabletOptions = (Metablets) => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:167:hardcoded array:  let tablets = [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/AakashNeoHelper.js:168:hardcoded array:  tablets = Metablets.filter((tablet) => allowedTablets.includes(tablet.label)) || [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:1:hardcoded object:import React, { Component } from 'react';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:3:hardcoded object:import _, { get, find, size } from 'lodash';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:5:hardcoded object:import { saveProductDetails, addLoader, removeLoader, resetPrice, saveCashbackDetails } from 'modules/product/productReducer';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:8:hardcoded number:    isK12Class, isK3orPreKClass, getMentoringClassMap, initialGradeOptionForNeo,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:11:hardcoded string:} from 'modules/product/components/productHelper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:12:hardcoded object:import { getComboFormFields, getBoards, getIgcseClassDetails, getState, getMeProductlearningType, getMeFormattedValidity, getMeTablets, getProfileOptions } from '../ProductHelper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:13:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:14:hardcoded file path:import ClassTypeForm from 'modules/product/components/ClassTypeForm'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:15:hardcoded file path:import ProductDetailsForm from 'modules/product/components/ProducDetailsForm';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:16:hardcoded file path:import FetchPrices from 'modules/product/components/FetchPrices';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:17:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:18:hardcoded object:import { isEqual } from 'date-fns';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:19:hardcoded file path:import OneToMany from 'modules/product/components/mentoring/OneToManyMentoring';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:20:hardcoded object:import { validateByjusClassesMentoringDetails } from 'modules/product/components/mentoring/MentoringHelper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:21:hardcoded file path:import ByjusMentoringClasses from 'modules/product/components/mentoring/ByjusMentoringClasses';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:25:hardcoded string:} from 'modules/product/utils/productConstant';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:27:hardcoded object:import { validateProfileSelection } from 'modules/ordertype/upgrade/trialpack/components/products/UpgradeProductHelper'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:28:hardcoded file path:import Proficiency from 'modules/student/Proficiency';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:29:hardcoded object:import { isProficiencyAndFotAvailable } from "modules/product/utils/ByjusClassesHelper";
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:30:hardcoded file path:import InfoWrapper from 'components/InfoWrapper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:32:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:33:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:34:hardcoded string:    leadDetails: get(state, 'auth.leadDetails'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:35:hardcoded string:    salesDetails: get(state, "details.salesDetails"),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:36:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:37:hardcoded string:    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:38:hardcoded string:    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:39:hardcoded string:    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:40:hardcoded string:    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:41:hardcoded string:    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:42:hardcoded string:    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:45:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:66:hardcoded object:        const { env } = this.props.authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:70:hardcoded object:            productConfig: {},
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:71:hardcoded array:            fields: [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:81:hardcoded object:        let { initialClass, classType, productLearningType, board, finalClass } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:82:hardcoded object:        const { productCombination, identifier, existingProfiles, country, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:83:hardcoded object:        const { productDetailsForm, oneToManyDetailsForm, byjusClassesDetailsForm, proficiencyForm, classTypeForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:84:hardcoded string:        let oneToManyMentoringDetails = [], bhlpCourseDetails = [], byjusClassesMentoringDetails = [], trackId = '';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:86:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:87:hardcoded string:        const isDevEnv = ['local', 'development'].includes(env)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:88:hardcoded variable:        const details = await productDetailsForm.getProductDetails();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:89:hardcoded variable:        const oneToManyFormValue = oneToManyDetailsForm && await oneToManyDetailsForm.getMentoringValues();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:90:hardcoded variable:        const byjusClassesFormValue = byjusClassesDetailsForm && await byjusClassesDetailsForm.getMentoringValues();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:92:hardcoded string:        let productDetails = get(details, 'productDetails');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:93:hardcoded number:        //for IGCSE board sending initialClass as initialClass - 1 and finalClass as finalClass + 1
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:94:hardcoded object:        const { firstClass, lastClass } = getIgcseClassDetails({ board, initialClass, finalClass })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:95:hardcoded string:        if (firstClass) productDetails['initialClass'] = firstClass.toString();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:96:hardcoded string:        if (lastClass) productDetails['finalClass'] = lastClass.toString();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:98:hardcoded variable:        const studentMarksDetails = await proficiencyForm?.getStudentAcademicDetails()
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:99:hardcoded variable:        const classTypeFormDetails = classTypeForm && await classTypeForm.getClassTypeFormDetails();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:101:hardcoded string:            productDetails['tabletId'] = this.state[`tabletId`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:104:hardcoded string:        if ((ELIGIBLE_COMBINATIONS_FOR_BATCH.includes(productCombination)) && !["1", "2", "3"].includes(initialClass)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:105:hardcoded variable:            const response = validateByjusClassesMentoringDetails(byjusClassesFormValue, productDetails);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:106:hardcoded string:            byjusClassesMentoringDetails = get(response, "byjusClassesMentoringDetails", []);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:107:hardcoded string:            bhlpCourseDetails = get(response, "bhlpCourseDetails", []);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:108:hardcoded string:            trackId = get(response, 'trackId', '');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:113:hardcoded string:        if (productCombination == "byjus_classes") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:114:hardcoded string:            productDetails["productLearningType"] = productLearningType
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:117:hardcoded number:        if (existingProfiles.length > 0 && productDetails) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:118:hardcoded variable:            const isValidate = validateProfileSelection(productDetails);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:122:hardcoded string:        if (productCombination == "byjus_classes") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:123:hardcoded string:            if (!size(get(classTypeFormDetails, "formValue", {}))) return
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:126:hardcoded string:                ...get(classTypeFormDetails, "formValue", {}),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:129:hardcoded string:            if (classType == "neo") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:130:hardcoded string:                productDetails["trackId"] = trackId
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:131:hardcoded string:                if (!size(get(studentMarksDetails, "formValue", {}))) return
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:134:hardcoded string:                    ...get(studentMarksDetails, "formValue", {}),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:135:hardcoded string:                    languageOfInstruction: get(byjusClassesFormValue, "formValue.languageOfInstruction", null),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:136:hardcoded string:                    languageOfInstructionId: get(byjusClassesFormValue, "formValue.languageOfInstructionId", null)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:142:hardcoded variable:            const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:144:hardcoded string:                productType: 'combo',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:147:hardcoded string:                mentoringCount: get(details, 'mentoringCount'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:148:hardcoded string:                couponDetails: get(details, 'couponDetails'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:154:hardcoded string:            if (classType == "neo") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:157:hardcoded string:                    url: '/api/neo/middleeast/combo'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:162:hardcoded string:                    url: '/api/middleeast/combo'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:169:hardcoded object:        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:170:hardcoded object:        const { productLearningType } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:171:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:178:hardcoded string:                payload["productDetails"] = formatByjusClassesFormValues(productDetails);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:183:hardcoded string:                url: '/api/middleeast/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:184:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:187:hardcoded string:                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:191:hardcoded object:                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:193:hardcoded string:                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:195:hardcoded object:                this.setState({ error }, () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:204:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:205:hardcoded string:        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:214:hardcoded object:        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:215:hardcoded object:        const { isBooksOpted } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:218:hardcoded object:            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:220:hardcoded string:                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:221:hardcoded string:                    productDetails["isBooksOpted"] = isBooksOpted;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:225:hardcoded string:                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:228:hardcoded string:                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:229:hardcoded object:                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:236:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:237:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:239:hardcoded variable:        const productLearningType = value;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:240:hardcoded string:        this.handleChanges(getCourseTypeOption("combo", productLearningType), 'courseType');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:241:hardcoded object:        this.setState({ productLearningType, isByjusClass: false });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:246:hardcoded string:                subCourse: "", byjusClassFinalGrade: "", validity: "", tlpFinalGrade: "", courseType: "", errorActions: {}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:255:hardcoded number:        let molGradesCheck = [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:257:hardcoded number:            Number(selectedInitialClass) <= 3 &&
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:258:hardcoded number:            Number(selectedFinalClass) > 3
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:260:hardcoded number:            molGradesCheck = [4, 5, 6, 7, 8, 9, 10];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:269:hardcoded string:        if (["combo"].includes(productType) && isStreaming) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:270:hardcoded string:            return `Note: Grade - ${grade.join(" , ")} applicable for Streaming `
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:279:hardcoded object:        const { showProfileSelectionOption, existingProfiles, tlpOrderData = {}, authDetails = {} } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:281:hardcoded string:        !selectedCourse && this.handleChanges('K10/K12', 'course');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:283:hardcoded object:        const { productType, user, productCombination } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:284:hardcoded array:        const { Products = [], Courses = [], Boards = [], MeTablets = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:285:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:286:hardcoded string:        const isDevEnv = ['development', 'local'].includes(env)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:288:hardcoded object:        const productConfiguration = find(Products, { formattedName: productType }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:289:hardcoded object:        const { validity } = productConfiguration || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:290:hardcoded object:        const selectedCourseConfig = find(Courses, { formattedName: selectedCourse }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:291:hardcoded object:        const selectedBoardConfig = find(Boards, { formattedName: selectedBoard }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:293:hardcoded variable:        const mentoringClassMap = getMentoringClassMap(selectedBoardConfig.classes);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:294:hardcoded variable:        const oneToManyMentoringClassMap = getOneToManyMentoringClassMap(selectedBoardConfig.classes);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:295:hardcoded variable:        const byjusClassesMap = getByjusClassesMap(selectedBoardConfig.classes);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:297:hardcoded object:        const subCourses = getSubCourses({ selectedBoardConfig, selectedFinalClass, tlpFinalGrade, byjusClassFinalGrade, productLearningType });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:298:hardcoded variable:        const subCourseOptions = subCourses && fetchSubCourseOptions(productCombination, subCourses, selectedInitialClass, productLearningType)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:299:hardcoded variable:        const isMol = isMolStreaming(productCombination, selectedInitialClass, selectedFinalClass)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:301:hardcoded string:        const indexOfCommerce = subCourseOptions.findIndex(name => _.isEqual("Commerce", name.value))
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:302:hardcoded number:        if (indexOfCommerce > -1)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:303:hardcoded number:            subCourseOptions.splice(indexOfCommerce, 1);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:304:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:306:hardcoded string:        let popUpText = "";
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:311:hardcoded variable:        let fields = [{
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:312:hardcoded string:            type: 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:313:hardcoded string:            name: 'course',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:314:hardcoded string:            label: 'Select Course',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:315:hardcoded string:            options: get(productConfiguration, 'courses'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:316:hardcoded string:            value: 'K10/K12',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:317:hardcoded string:            message: "Please select Course"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:319:hardcoded string:            type: productCombination === "byjus_classes" ? 'select' : "hidden",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:320:hardcoded string:            name: 'productLearningType',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:321:hardcoded string:            label: 'Choose Product Learning Type',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:322:hardcoded string:            message: "Please Product Learning Type",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:323:hardcoded string:            options: getMeProductlearningType({ productType: "combo" }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:325:hardcoded string:            required: productCombination === "byjus_classes" ? true : false
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:327:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:328:hardcoded string:            name: 'board',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:329:hardcoded string:            label: 'Select Board',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:331:hardcoded string:            options: getBoards(get(selectedCourseConfig, 'boards', []), productCombination, isDevEnv),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:333:hardcoded string:            message: "Please select Board"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:335:hardcoded string:            type: selectedBoard === "STATE" ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:336:hardcoded string:            name: 'state',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:337:hardcoded string:            label: 'Select State',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:338:hardcoded string:            required: selectedBoard === "STATE",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:339:hardcoded string:            options: getState(get(selectedBoardConfig, 'states')),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:341:hardcoded string:            message: "Please select State"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:343:hardcoded object:        ...getComboFormFields({ state: this.state, props: this.props, handleChanges: this.handleChanges, handleClassBlurEvent: this.handleClassBlurEvent, addTLPCourses: this.addTLPCourses }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:346:hardcoded string:            type: (isMol) ? 'checkbox' : 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:347:hardcoded string:            name: 'isStreaming',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:348:hardcoded string:            checkBoxLabel: (isStreaming) ? popUpText : "Is Streaming",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:353:hardcoded string:            type: isK12Class(selectedFinalClass, tlpFinalGrade, byjusClassFinalGrade) ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:354:hardcoded string:            name: 'subCourse',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:355:hardcoded string:            label: 'Select Sub Course',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:356:hardcoded number:            required: isK12Class(selectedFinalClass, tlpFinalGrade, byjusClassFinalGrade),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:360:hardcoded string:            message: "Please select Sub Course"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:363:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:364:hardcoded object:            options: selectedInitialClass && getMeFormattedValidity({ validity, initialClass: selectedInitialClass, productCombination: productLearningType, user, isDevEnv }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:365:hardcoded string:            name: 'validity',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:366:hardcoded string:            label: 'Select Initial Validity',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:370:hardcoded string:            message: "Please Select Initial Validity"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:372:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:373:hardcoded array:            options: selectedInitialClass ? getMeTablets({ tablets: MeTablets, initialClass: selectedInitialClass, isPrivilegedUser, isDevEnv }) : [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:374:hardcoded string:            name: 'tablet',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:375:hardcoded string:            label: 'Select Tablet',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:377:hardcoded string:            message: "Please select Tablet",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:378:hardcoded number:            required: isK3orPreKClass(selectedInitialClass) && !isPrivilegedUser ? true : false
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:381:hardcoded string:            type: (showProfileSelectionOption && existingProfiles.length > 0 ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:383:hardcoded string:            name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:384:hardcoded string:            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:386:hardcoded string:            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:387:hardcoded number:            required: (showProfileSelectionOption && existingProfiles.length > 0 ? true : false),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:389:hardcoded string:                display: 'block',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:390:hardcoded string:                height: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:391:hardcoded string:                lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:398:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:399:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:401:hardcoded string:        if (name == "initialClass") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:402:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ finalClass: "", subCourse: "", tablet: "", validity: "", tlpFinalGrade: "", byjusClassFinalGrade: "", isStreaming: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:404:hardcoded string:                subCourse: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:406:hardcoded string:                isStreaming: ""
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:410:hardcoded string:        if (name == "finalClass") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:411:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ tlpFinalGrade: "", byjusClassFinalGrade: "", subCourse: "", isStreaming: "" })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:413:hardcoded string:                subCourse: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:415:hardcoded string:                isStreaming: ""
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:420:hardcoded string:        if (name === "board" || name === "state") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:421:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ initialClass: "", isStreaming: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:423:hardcoded string:                isStreaming: ""
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:427:hardcoded string:        if (name === "courseType") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:428:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ subCourse: "", tablet: "", validity: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:431:hardcoded string:        if (name === "tablet") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:433:hardcoded array:                [`tabletId`]: `T-${value}`,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:438:hardcoded string:        if (name === "isStreaming") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:439:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ tablet: "", validity: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:441:hardcoded array:                [`isStreaming`]: value,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:447:hardcoded array:            [name]: value,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:453:hardcoded object:        const { initialClass: selectedInitialClass, productLearningType, finalClass } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:455:hardcoded number:        let initialGrade = isAdvanceAdmission.includes(productLearningType) || ELIGIBLE_COMBINATIONS_FOR_TLP_PLUS_BYJUS_CLASSES_PLUS_TLP.includes(productLearningType) ? (parseInt(selectedInitialClass, 10) + 1).toString() : selectedInitialClass;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:457:hardcoded object:        this.setState({ isOneToManyClass: false, isByjusClass: false })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:458:hardcoded array:        const isMentoringApplicable = mentoringClassMap[initialGrade] || false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:459:hardcoded array:        const isOneToManyMentoringApplicable = oneToManyMentoringClassMap[initialGrade] || false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:460:hardcoded array:        const isByjusClassesApplicable = byjusClassesMap[initialGrade] || false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:470:hardcoded string:        this.setState({ classType: value ? "neo" : "oneToMega", isByjusClass: false });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:472:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:473:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:475:hardcoded string:            initialClass: "", finalClass: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:476:hardcoded string:            byjusClassFinalGrade: "", validity: "", tlpFinalGrade: "", courseType: "", tablet: ""
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:482:hardcoded object:        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:487:hardcoded object:            const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:488:hardcoded variable:            const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:489:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ initialClass: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:494:hardcoded object:            this.setState({ productConfig: nextProps.productConfig }, async () => {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:502:hardcoded object:        const { user } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:503:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:505:hardcoded string:        if (isPrivilegedUser && productCombination === "byjus_classes") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:507:hardcoded string:                classType: "neo"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:519:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:520:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:523:hardcoded string:            this.onChangeProductLearningType("byjus_classes_plus_byjus_tlp", "productLearningType")
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:525:hardcoded string:            this.onChangeProductLearningType("byjus_classes", "productLearningType")
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:526:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ finalClass: "", tlpFinalGrade: "" })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:531:hardcoded object:        const { productDetails, productConfig, productType, productCombination } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:533:hardcoded string:        if (productType === get(productDetails, 'productType')) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:534:hardcoded string:            const formValues = get(productDetails, 'students[0].formValues');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:538:hardcoded string:                course: get(formValues, 'course'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:539:hardcoded string:                board: get(formValues, 'board'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:540:hardcoded string:                initialClass: get(formValues, 'initialClass'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:541:hardcoded string:                finalClass: get(formValues, 'finalClass'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:542:hardcoded string:                subCourse: get(formValues, 'subCourse')
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:548:hardcoded string:        this.setState({ productConfig, course: 'K10/K12' });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:552:hardcoded object:        const { error, productConfig, productDetails, isMentoringClass, isOneToManyClass, isByjusClass, initialClass, finalClass, state, board, validity, subCourse, productLearningType, courseType, classType, countryId } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:553:hardcoded object:        const { changeNextBtnMode, productType, productCombination, user, identifier, authDetails, leadDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:554:hardcoded variable:        const accountNumber = leadDetails.accountNumber
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:555:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:556:hardcoded array:        const fields = productConfig ? this.getFields() : [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:557:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:558:hardcoded object:        const isProficiencyAndFot = isProficiencyAndFotAvailable({ state: this.state, props: this.props, handleChanges: this.handleChanges });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:560:hardcoded string:        let grade = "";
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:562:hardcoded string:            if (get(this.state, "initialClass", "") < 10) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:563:hardcoded string:                grade = (parseInt(get(this.state, "initialClass", ""), 10) + 1).toString()
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:565:hardcoded string:                grade = get(this.state, "byjusClassFinalGrade", "")
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:569:hardcoded string:            grade = (parseInt(get(this.state, "initialClass", ""), 10) + 1).toString();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:572:hardcoded string:            grade = get(this.state, "initialClass", "")
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:577:hardcoded object:                <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:578:hardcoded string:                {productCombination == "byjus_classes" && productType == "combo" && classType != "neo" && <InfoWrapper
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:584:hardcoded string:                    type="warning"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:586:hardcoded string:                {productCombination === "byjus_classes" && <ClassTypeForm
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:587:hardcoded string:                    ref="classTypeForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:588:hardcoded object:                    classType={classType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:589:hardcoded object:                    changeClassType={this.changeClassType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:590:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:591:hardcoded object:                    setCountryId={this.setCountryId}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:594:hardcoded string:                    ref="productDetailsForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:595:hardcoded object:                    productLearningType={productLearningType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:596:hardcoded object:                    productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:597:hardcoded object:                    fields={fields}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:598:hardcoded object:                    initialValues={{ ...getProductFormInitialValue(productDetails) }}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:599:hardcoded object:                    isOneToManyAllowed={ELIGIBLE_COMBINATIONS_FOR_ONE_TO_MANY.includes(productCombination) ? true : false} // Byjus HLP
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:600:hardcoded object:                    isByjusClassesAllowed={ELIGIBLE_COMBINATIONS_FOR_BATCH.includes(productCombination) ? true : false} // Byjus Classes
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:601:hardcoded object:                    isMentoringClass={isPrivilegedUser && ELIGIBLE_COMBINATIONS_FOR_ONE_ON_ONE.includes(productCombination) ? isMentoringClass : false} // used to show mentoring component to select
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:602:hardcoded object:                    isMentoringAllowed={isPrivilegedUser && ELIGIBLE_COMBINATIONS_FOR_ONE_ON_ONE.includes(productCombination) ? true : false}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:603:hardcoded object:                    accountNumber={accountNumber}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:604:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:608:hardcoded string:                        ref="proficiencyForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:612:hardcoded number:                {/* BHLP for 4 to 12 */}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:615:hardcoded string:                        ref="oneToManyDetailsForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:616:hardcoded object:                        identifier={identifier}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:617:hardcoded object:                        initialClass={initialClass}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:618:hardcoded object:                        board={board}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:619:hardcoded object:                        state={state}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:620:hardcoded object:                        productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:621:hardcoded object:                        validity={validity}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:622:hardcoded object:                        subCourse={subCourse}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:623:hardcoded string:                        productCombination="home_learning_program" />
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:625:hardcoded number:                {/* Byjus classes For 4 to 12 grades*/}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:627:hardcoded string:                    isByjusClass && courseType && validity && (ELIGIBLE_COMBINATIONS_FOR_BATCH.includes(productCombination) || productLearningType == "BYJUS_AKASH_CLASSES") &&
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:629:hardcoded string:                        ref="byjusClassesDetailsForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:630:hardcoded object:                        identifier={identifier}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:631:hardcoded object:                        initialClass={grade}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:632:hardcoded object:                        classType={classType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:633:hardcoded object:                        finalClass={finalClass}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:634:hardcoded object:                        board={board}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:635:hardcoded object:                        state={state}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:636:hardcoded object:                        productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:637:hardcoded object:                        validity={validity}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:638:hardcoded object:                        subCourse={subCourse}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:639:hardcoded string:                        productCombination="byjus_classes"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:640:hardcoded object:                        productLearningType={productLearningType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:641:hardcoded object:                        countryId={countryId}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:642:hardcoded object:                        courseType={courseType} />
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:646:hardcoded string:                    ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:647:hardcoded object:                    onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:648:hardcoded object:                    getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:649:hardcoded object:                    changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:650:hardcoded object:                    productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:651:hardcoded object:                    setError={this.setError}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:652:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:653:hardcoded object:                    countryCheck={true}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/ComboProduct.js:660:hardcoded object:export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(ComboProduct);microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:1:hardcoded object:import React, { Component } from 'react';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:3:hardcoded object:import { get, find, cloneDeep, size } from 'lodash';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:5:hardcoded object:import { saveProductDetails, addLoader, removeLoader, resetPrice, saveCashbackDetails } from 'modules/product/productReducer';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:7:hardcoded number:    getProductFormInitialValue, isK12Class, getClasses, getMentoringClassMap, isK3orPreKClass,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:9:hardcoded string:} from 'modules/product/components/productHelper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:10:hardcoded object:import { getBoards, getIgcseClassDetails, getState, filterMeInitialClass, getMeFormattedValidity, getMeTablets, getProfileOptions } from '../ProductHelper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:11:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:12:hardcoded file path:import ClassTypeForm from 'modules/product/components/ClassTypeForm'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:13:hardcoded file path:import ProductDetailsForm from 'modules/product/components/ProducDetailsForm';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:14:hardcoded file path:import FetchPrices from 'modules/product/components/FetchPrices';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:15:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:16:hardcoded object:import { isEqual } from 'date-fns';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:17:hardcoded file path:import OneToMany from 'modules/product/components/mentoring/OneToManyMentoring';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:18:hardcoded file path:import ByjusMentoringClasses from 'modules/product/components/mentoring/ByjusMentoringClasses';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:19:hardcoded object:import { validateProfileSelection } from 'modules/ordertype/upgrade/trialpack/components/products/UpgradeProductHelper'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:21:hardcoded object:import { validateByjusClassesMentoringDetails } from 'modules/product/components/mentoring/MentoringHelper';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:22:hardcoded object:import { ELIGIBLE_COMBINATIONS_FOR_ONE_ON_ONE } from 'modules/product/utils/productConstant';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:23:hardcoded object:import { ELIGIBLE_PRODUCT_COMBINATION_FOR_TRIAL_PACK_BYJUS_CLASSES_PLUS_TLP } from 'modules/ordertype/upgrade/trialpack/components/products/utils/TrialPackUpgradeProductConstant';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:24:hardcoded file path:import Proficiency from 'modules/student/Proficiency';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:25:hardcoded object:import { isProficiencyAndFotAvailable } from "modules/product/utils/ByjusClassesHelper";
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:27:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:28:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:29:hardcoded string:    leadDetails: get(state, 'auth.leadDetails'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:30:hardcoded string:    salesDetails: get(state, "details.salesDetails"),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:31:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:32:hardcoded string:    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:33:hardcoded string:    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:34:hardcoded string:    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:35:hardcoded string:    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:36:hardcoded string:    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:37:hardcoded string:    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:40:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:61:hardcoded object:        const { env } = this.props.authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:69:hardcoded object:            productConfig: {},
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:70:hardcoded array:            fields: [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:80:hardcoded object:        const { initialClass, course, courseType, classType, board, finalClass } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:81:hardcoded object:        const { productCombination, identifier, existingProfiles, country, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:82:hardcoded object:        const { productDetailsForm, oneToManyDetailsForm, byjusClassesDetailsForm, proficiencyForm, classTypeForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:83:hardcoded string:        let oneToManyMentoringDetails = [], bhlpCourseDetails = [], byjusClassesMentoringDetails = [], trackId = '';
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:85:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:86:hardcoded string:        const isDevEnv = ['local', 'development'].includes(env)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:87:hardcoded variable:        const details = await productDetailsForm.getProductDetails();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:88:hardcoded variable:        const oneToManyFormValue = oneToManyDetailsForm && await oneToManyDetailsForm.getMentoringValues();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:89:hardcoded variable:        const byjusClassesFormValue = byjusClassesDetailsForm && await byjusClassesDetailsForm.getMentoringValues();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:90:hardcoded variable:        const studentMarksDetails = await proficiencyForm?.getStudentAcademicDetails()
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:91:hardcoded variable:        const classTypeFormDetails = classTypeForm && await classTypeForm.getClassTypeFormDetails();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:93:hardcoded string:        let productDetails = get(details, 'productDetails');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:94:hardcoded number:        //for IGCSE board sending initialClass as initialClass - 1 and finalClass as finalClass + 1
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:95:hardcoded object:        const { firstClass, lastClass } = getIgcseClassDetails({ board, initialClass, finalClass })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:96:hardcoded string:        if (firstClass) productDetails['initialClass'] = firstClass.toString();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:97:hardcoded string:        productDetails['tabletId'] = this.state[`tabletId`];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:98:hardcoded string:        if (productDetails && !productDetails.course) productDetails["course"] = course;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:100:hardcoded string:        if (productCombination === "byjus_classes" && !["1", "2", "11", "12"].includes(initialClass) && courseType) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:101:hardcoded variable:            const response = validateByjusClassesMentoringDetails(byjusClassesFormValue, productDetails);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:102:hardcoded string:            byjusClassesMentoringDetails = get(response, "byjusClassesMentoringDetails", []);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:103:hardcoded string:            bhlpCourseDetails = get(response, "bhlpCourseDetails", []);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:104:hardcoded string:            trackId = get(response, 'trackId', '');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:110:hardcoded number:        if (existingProfiles.length > 0 && productDetails) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:111:hardcoded variable:            const isValidate = validateProfileSelection(productDetails);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:115:hardcoded string:        if (productCombination == "byjus_classes") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:116:hardcoded string:            if (!size(get(classTypeFormDetails, "formValue", {}))) return
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:119:hardcoded string:                ...get(classTypeFormDetails, "formValue", {}),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:122:hardcoded string:            if (classType == "neo") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:123:hardcoded string:                if (!size(get(studentMarksDetails, "formValue", {}))) return
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:124:hardcoded string:                productDetails["trackId"] = trackId
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:127:hardcoded string:                    ...get(studentMarksDetails, "formValue", {}),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:128:hardcoded string:                    languageOfInstruction: get(byjusClassesFormValue, "formValue.languageOfInstruction", null),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:129:hardcoded string:                    languageOfInstructionId: get(byjusClassesFormValue, "formValue.languageOfInstructionId", null)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:135:hardcoded variable:            const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:137:hardcoded string:                productType: 'single',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:140:hardcoded string:                mentoringCount: get(details, 'mentoringCount'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:141:hardcoded string:                couponDetails: get(details, 'couponDetails'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:143:hardcoded string:                mentoringDetails: productCombination === "home_learning_program" ? oneToManyMentoringDetails : byjusClassesMentoringDetails, // To track other mentoring details
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:147:hardcoded string:            if (classType == "neo") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:150:hardcoded string:                    url: '/api/neo/middleeast/single'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:155:hardcoded string:                    url: '/api/middleeast/single'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:162:hardcoded object:        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:163:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:172:hardcoded string:                url: '/api/middleeast/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:173:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:176:hardcoded string:                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:180:hardcoded object:                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:182:hardcoded string:                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:184:hardcoded object:                this.setState({ error });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:191:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:192:hardcoded string:        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:201:hardcoded object:        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:202:hardcoded object:        const { isBooksOpted } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:205:hardcoded object:            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:207:hardcoded string:                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:208:hardcoded string:                    productDetails["isBooksOpted"] = isBooksOpted;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:212:hardcoded string:                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:215:hardcoded string:                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:216:hardcoded object:                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:224:hardcoded object:        const { showProfileSelectionOption, existingProfiles, tlpOrderData = {}, authDetails = {}, salesDetails, leadDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:226:hardcoded object:        const { env } = authDetails
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:227:hardcoded string:        const isDevEnv = ["development", "local"].includes(env);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:228:hardcoded string:        !selectedCourse && this.handleChanges('K10/K12', 'course');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:229:hardcoded string:        !selectedCourseType && this.handleChanges('regular', 'courseType');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:231:hardcoded object:        const { productType, user, productCombination } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:232:hardcoded array:        const { Products = [], Courses = [], Boards = [], MeTablets = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:234:hardcoded object:        const productConfiguration = find(Products, { formattedName: productType }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:236:hardcoded object:        const { validity } = productConfiguration || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:237:hardcoded object:        const selectedCourseConfig = find(Courses, { formattedName: selectedCourse }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:238:hardcoded string:        const selectedBoardConfig = find(Boards, { formattedName: selectedBoard === "IGCSE" ? "CBSE" : selectedBoard }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:239:hardcoded object:        const selectedClassConfig = find(selectedBoardConfig.classes, { class: selectedClass }) || {};
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:240:hardcoded variable:        const mentoringClassMap = getMentoringClassMap(selectedBoardConfig.classes);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:241:hardcoded variable:        const oneToManyMentoringClassMap = getOneToManyMentoringClassMap(selectedBoardConfig.classes);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:242:hardcoded variable:        const byjusClassesMap = getByjusClassesMap(selectedBoardConfig.classes);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:244:hardcoded variable:        let classOptions = cloneDeep(getClasses(selectedBoardConfig, user, productType, productCombination));
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:245:hardcoded string:        const subCourses = get(selectedClassConfig, 'subCourses');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:246:hardcoded variable:        const subCourseOptions = subCourses && fetchSubCourseOptions(productCombination, subCourses)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:247:hardcoded number:        //Remove 11 & 12 for Byjus classes
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:248:hardcoded string:        classOptions = ["byjus_classes"].includes(productCombination) ? classOptions.filter(ele => !['12', '11'].includes(ele.value)) : classOptions;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:250:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user);
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:252:hardcoded variable:        let fields = [{
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:253:hardcoded string:            type: 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:254:hardcoded string:            name: 'course',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:255:hardcoded string:            label: 'Select Course',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:256:hardcoded string:            options: get(productConfiguration, 'courses'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:257:hardcoded string:            value: 'K10/K12',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:258:hardcoded string:            message: "Please select Course"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:260:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:261:hardcoded string:            name: 'board',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:262:hardcoded string:            label: 'Select Board',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:264:hardcoded string:            options: getBoards(get(selectedCourseConfig, 'boards', []), productCombination, isDevEnv),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:266:hardcoded string:            message: "Please select Board"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:268:hardcoded string:            type: selectedBoard === "STATE" ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:269:hardcoded string:            name: 'state',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:270:hardcoded string:            label: 'Select State',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:271:hardcoded string:            required: selectedBoard === "STATE",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:272:hardcoded string:            options: getState(get(selectedBoardConfig, 'states', [])),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:274:hardcoded string:            message: "Please select State"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:276:hardcoded string:            type: selectedBoard ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:277:hardcoded string:            name: 'initialClass',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:278:hardcoded string:            label: 'Select Class',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:280:hardcoded string:            options: selectedBoard ? filterMeInitialClass({ classes: classOptions, productType: "single", productCombination, isPrivilegedUser, classType, authDetails, board: selectedBoard, isDevEnv }) : [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:283:hardcoded string:            message: "Please select Class"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:285:hardcoded string:            type: isK12Class(selectedClass) ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:286:hardcoded string:            name: 'subCourse',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:287:hardcoded string:            label: 'Select Sub Course',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:288:hardcoded number:            required: isK12Class(selectedClass),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:292:hardcoded string:            message: "Please select Sub Course"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:295:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:296:hardcoded object:            options: selectedClass && getMeFormattedValidity({ validity, initialClass: selectedClass, productCombination, user, isDevEnv, productType }),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:297:hardcoded string:            name: 'validity',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:298:hardcoded string:            label: 'Select Initial Validity',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:302:hardcoded string:            message: "Please Select Initial Validity"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:304:hardcoded string:            type: !['TRIAL_PACK', 'TRIAL_SUBSCRIPTION'].includes(selectedValidity) ? 'select' : "hidden",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:305:hardcoded array:            options: selectedClass ? getMeTablets({ tablets: MeTablets, initialClass: selectedClass, isPrivilegedUser, isDevEnv }) : [],
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:306:hardcoded string:            name: 'tablet',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:307:hardcoded string:            label: 'Select Tablet',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:309:hardcoded string:            message: "Please select Tablet",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:310:hardcoded string:            required: isK3orPreKClass(selectedClass) && !isPrivilegedUser && selectedValidity != "selectedValidity" ? true : false
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:312:hardcoded string:            type: (showProfileSelectionOption && existingProfiles.length > 0 ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:314:hardcoded string:            name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:315:hardcoded string:            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:317:hardcoded string:            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:318:hardcoded number:            required: (showProfileSelectionOption && existingProfiles.length > 0 ? true : false),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:320:hardcoded string:                display: 'block',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:321:hardcoded string:                height: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:322:hardcoded string:                lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:329:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:330:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:332:hardcoded string:        if (name == "initialClass") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:333:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ workshops: "", subCourse: "", tablet: "", validity: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:335:hardcoded string:                subCourse: "",
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:339:hardcoded string:        if (name === "courseType") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:340:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ initialClass: "", subCourse: "", tablet: "", validity: "", board: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:343:hardcoded string:        if (name === "board" || name === "state") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:344:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ initialClass: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:346:hardcoded string:        if (name === "tablet") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:348:hardcoded array:                [`tabletId`]: `T-${value}`,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:354:hardcoded array:            [name]: value,
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:360:hardcoded object:        this.setState({ isOneToManyClass: false, isByjusClass: false })
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:361:hardcoded array:        const isMentoringApplicable = mentoringClassMap[selectedClass] || false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:362:hardcoded array:        const isOneToManyMentoringApplicable = oneToManyMentoringClassMap[selectedClass] || false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:363:hardcoded array:        const isByjusClassesApplicable = byjusClassesMap[selectedClass] || false;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:373:hardcoded string:        this.setState({ classType: value ? "neo" : "oneToMega", isByjusClass: false });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:375:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:376:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:377:hardcoded string:        detailsForm && detailsForm.setFieldsValue({ initialClass: "", subCourse: "", tablet: "", validity: "", board: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:381:hardcoded object:        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:386:hardcoded object:            const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:387:hardcoded variable:            const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:388:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ initialClass: "", board: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:392:hardcoded object:            this.setState({ productConfig: nextProps.productConfig });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:397:hardcoded object:        const { user, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:398:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:399:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:401:hardcoded string:        if (isPrivilegedUser && productCombination === "byjus_classes") {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:403:hardcoded string:                classType: "neo"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:415:hardcoded object:        const { productDetails, productConfig, productType, productCombination } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:418:hardcoded string:        if (productType === get(productDetails, 'productType')) {
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:419:hardcoded string:            const formValues = get(productDetails, 'students[0].formValues');
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:423:hardcoded string:                course: get(formValues, 'course'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:424:hardcoded string:                board: get(formValues, 'board'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:425:hardcoded string:                initialClass: get(formValues, 'initialClass'),
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:426:hardcoded string:                subCourse: get(formValues, 'subCourse')
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:431:hardcoded string:        this.setState({ productConfig, course: 'K10/K12' });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:435:hardcoded object:        const { error, productConfig, productDetails, isMentoringClass, isOneToManyClass, isByjusClass, initialClass, board, state, validity, subCourse, courseType, classType, countryId } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:436:hardcoded object:        const { changeNextBtnMode, productType, productCombination, identifier, user, leadDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:437:hardcoded variable:        const accountNumber = leadDetails.accountNumber;
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:438:hardcoded array:        const fields = productConfig ? this.getFields() : [];
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:439:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:440:hardcoded object:        const isProficiencyAndFot = isProficiencyAndFotAvailable({ state: this.state, props: this.props, handleChanges: this.handleChanges });
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:444:hardcoded object:                <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:445:hardcoded string:                {productCombination === "byjus_classes" && <ClassTypeForm
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:446:hardcoded string:                    ref="classTypeForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:447:hardcoded object:                    classType={classType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:448:hardcoded object:                    changeClassType={this.changeClassType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:449:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:450:hardcoded object:                    setCountryId={this.setCountryId}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:453:hardcoded string:                    ref="productDetailsForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:454:hardcoded object:                    productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:455:hardcoded object:                    fields={fields}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:456:hardcoded object:                    initialValues={{ ...getProductFormInitialValue(productDetails) }}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:457:hardcoded string:                    isOneToManyAllowed={productCombination === "home_learning_program" ? true : false} // Byjus HLP
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:458:hardcoded string:                    isByjusClassesAllowed={productCombination === "byjus_classes" ? true : false} // Byjus Classes
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:459:hardcoded object:                    isMentoringClass={isPrivilegedUser && ELIGIBLE_COMBINATIONS_FOR_ONE_ON_ONE.includes(productCombination) ? isMentoringClass : false} // used to show mentoring component to select
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:460:hardcoded object:                    isMentoringAllowed={isPrivilegedUser && ELIGIBLE_COMBINATIONS_FOR_ONE_ON_ONE.includes(productCombination) ? true : false}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:461:hardcoded object:                    accountNumber={accountNumber}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:462:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:466:hardcoded string:                        ref="proficiencyForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:470:hardcoded number:                {/* BHLP for 4 to 12 */}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:472:hardcoded string:                    isOneToManyClass && validity && productCombination === "home_learning_program" && <OneToMany
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:473:hardcoded string:                        ref="oneToManyDetailsForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:474:hardcoded object:                        identifier={identifier}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:475:hardcoded object:                        initialClass={initialClass}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:476:hardcoded object:                        board={board}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:477:hardcoded object:                        state={state}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:478:hardcoded object:                        productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:479:hardcoded object:                        validity={validity}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:480:hardcoded object:                        subCourse={subCourse}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:481:hardcoded string:                        productCombination="home_learning_program" />
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:483:hardcoded number:                {/* Byjus classes For 3 to 10*/}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:485:hardcoded string:                    !["11", "12"].includes(initialClass) && courseType && isByjusClass && validity && productCombination === "byjus_classes" && <ByjusMentoringClasses
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:486:hardcoded string:                        ref="byjusClassesDetailsForm"
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:487:hardcoded object:                        identifier={identifier}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:488:hardcoded object:                        initialClass={initialClass}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:489:hardcoded object:                        board={board}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:490:hardcoded object:                        state={state}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:491:hardcoded object:                        productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:492:hardcoded object:                        validity={validity}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:493:hardcoded object:                        subCourse={subCourse}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:494:hardcoded object:                        courseType={courseType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:495:hardcoded object:                        classType={classType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:496:hardcoded object:                        countryId={countryId}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:497:hardcoded string:                        productCombination="byjus_classes" />
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:501:hardcoded string:                    ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:502:hardcoded object:                    onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:503:hardcoded object:                    getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:504:hardcoded object:                    changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:505:hardcoded object:                    productType={productType}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:506:hardcoded object:                    setError={this.setError}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:507:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:508:hardcoded object:                    countryCheck={true}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:509:hardcoded object:                    validity={validity}
microservices-middleware/client/src/modules/ordertype/middleeast/product/components/products/types/SingleProduct.js:516:hardcoded object:export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(SingleProduct);