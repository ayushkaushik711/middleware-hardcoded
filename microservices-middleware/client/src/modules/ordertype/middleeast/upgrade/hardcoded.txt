microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:15:hardcoded variable:	const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:16:hardcoded string:	    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:17:hardcoded string:	    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:18:hardcoded string:	    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:19:hardcoded string:	    tlpOrderData: get(state, 'auth.tlpOrderData'),
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:20:hardcoded string:	    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:21:hardcoded string:	    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:22:hardcoded string:	    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:23:hardcoded string:	    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:24:hardcoded string:	    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:25:hardcoded string:	    leadDetails: get(state, 'auth.leadDetails', {}),
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:26:hardcoded string:	    user: get(state, "auth.details.user", {})
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:29:hardcoded variable:	const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:54:hardcoded array:	            eligibleCustomers: [],
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:63:hardcoded object:	        const { leadDetails = {}, authDetails = {}, productConfig, identifier, tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:64:hardcoded object:	        const { orderPunchingCategory, orderId } = tlpOrderData
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:65:hardcoded array:	        const form = this.refs[`productDetailsForm`];
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:66:hardcoded object:	        const details = await form.getProductDetails() || {};
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:67:hardcoded string:	        let productDetails = get(details, 'productDetails') || {};
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:68:hardcoded variable:	        const upgradeOrderDetails = {
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:69:hardcoded string:	            "baseOrderId": orderId,
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:70:hardcoded string:	            "newCourse": "aakash_neo_upgrade",
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:71:hardcoded string:	            "oldCourse": orderPunchingCategory
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:73:hardcoded string:	        productDetails["upgradeOrderDetails"] = upgradeOrderDetails
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:78:hardcoded string:	        leadDetails["orderPunchedByRole"] = get(authDetails.user, 'role', "");
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:81:hardcoded variable:	            const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:84:hardcoded string:	                productCombination: "AAKASH_NEO_ME_UPGRADE",
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:85:hardcoded string:	                productType:"combo"
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:90:hardcoded string:	                url: '/api/middleeast/upgrade/aakashNeo/getProduct'
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:96:hardcoded object:	        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:97:hardcoded object:	        const { student } = productDetails;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:98:hardcoded variable:	        const payload = {
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:107:hardcoded string:	                url: '/api/middleeast/upgrade/aakashNeo/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:108:hardcoded string:	                method: 'POST',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:111:hardcoded string:	                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:115:hardcoded object:	                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:117:hardcoded string:	                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:119:hardcoded object:	                this.setState({ error });
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:126:hardcoded object:	        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:127:hardcoded string:	        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:132:hardcoded object:	        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:135:hardcoded object:	            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:137:hardcoded string:	                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:141:hardcoded string:	                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:144:hardcoded string:	                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:145:hardcoded object:	                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:151:hardcoded object:	        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:155:hardcoded object:	        const { tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:156:hardcoded array:	        const { baseProductInfo, customerDetails = [] } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:157:hardcoded variable:	        const columns = [
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:159:hardcoded string:	                title: 'Student Name',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:160:hardcoded string:	                dataIndex: 'name',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:161:hardcoded string:	                key: 'name',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:165:hardcoded object:	                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:167:hardcoded object:	                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:170:hardcoded number:	                width: 100,
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:173:hardcoded string:	                title: 'Class Info',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:174:hardcoded string:	                dataIndex: 'classInfo',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:175:hardcoded string:	                key: 'classInfo',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:176:hardcoded number:	                width: 100,
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:180:hardcoded object:	                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:182:hardcoded object:	                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:187:hardcoded string:	                title: 'Validity',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:188:hardcoded string:	                dataIndex: 'validity',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:189:hardcoded string:	                key: 'validity',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:190:hardcoded number:	                width: 100,
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:195:hardcoded object:	                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:197:hardcoded object:	                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:202:hardcoded string:	        const { studentName = "" } = customerDetails[0] || {};
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:203:hardcoded string:	        const { initialClass = "", finalClass = "", validity = "", subCourse = "" } = baseProductInfo || {};
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:204:hardcoded variable:	        let data = [{
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:205:hardcoded number:	            key: 1,
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:207:hardcoded object:	            classInfo: `${subCourse}: ${initialClass}-${finalClass}`,
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:209:hardcoded string:	            color: '#D6FCF8'
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:213:hardcoded object:	            <Table pagination={false} columns={columns} dataSource={data} bordered={true}
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:220:hardcoded array:	        const productDetailsForm = this.refs[`productDetailsForm`];
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:221:hardcoded variable:	        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:223:hardcoded string:	        if (name == "initialClass") {
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:225:hardcoded string:	                finalClass: "", validity: ""
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:228:hardcoded string:	        if (name == "finalClass") {
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:229:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ validity: "" });
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:233:hardcoded array:	            [name]: value,
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:242:hardcoded variable:	        const currDate = new Date();
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:243:hardcoded variable:	        const currYear = currDate.getFullYear();
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:244:hardcoded variable:	        const currMonth = currDate.getMonth()
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:246:hardcoded number:	            if (currMonth > 1) {
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:247:hardcoded number:	                if ([12, 13].includes(initialClass)) {
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:250:hardcoded number:	                    initialClass = ((initialClass < finalClass)) ? (initialClass + 1) : initialClass;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:256:hardcoded number:	            initialClass = (currMonth > 1 && initialClass < finalClass) ? initialClass + 1 : initialClass;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:262:hardcoded object:	        const { baseformValues, selectedProfile } = this.state
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:263:hardcoded object:	        const { initialClass, finalClass, subCourse, validity } = baseformValues
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:264:hardcoded variable:	        let options = [
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:265:hardcoded string:	            { label: "11", value: "11" },
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:266:hardcoded string:	            { label: "12", value: "12" },
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:267:hardcoded string:	            { label: "12th pass", value: "13+" }
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:269:hardcoded variable:	        let currentGrade = this.getCurrentGrade(parseInt(initialClass),finalClass, parseInt(validity))
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:270:hardcoded number:	        if(currentGrade==13){
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:271:hardcoded string:	            currentGrade="13+"
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:278:hardcoded string:	        return [{ value: getCurrentAcademicYear('k12') + 1, label: getCurrentAcademicYear('k12') + 1 }]
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:282:hardcoded string:	        if(initialClass == "13+"){
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:283:hardcoded string:	            return [{ label: "12th pass", value: "13+" }]
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:285:hardcoded string:	            return [ { label: "12", value: "12" }]
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:289:hardcoded array:	        let { existingProfiles = [] } = this.props
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:290:hardcoded object:	        const { baseformValues, selectedProfile, customerDetails,initialClass } = this.state
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:291:hardcoded object:	        const {  subCourse } = baseformValues
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:292:hardcoded string:	        const { premiumAccount = "" } = customerDetails[0]
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:298:hardcoded number:	        if (existingProfiles[0]) {
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:299:hardcoded number:	            existingProfiles[0].checked = true
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:302:hardcoded variable:	        const fields = [{
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:303:hardcoded string:	            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:305:hardcoded string:	            name: 'initialClass',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:306:hardcoded string:	            label: 'Select Initial Grade',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:310:hardcoded string:	            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:311:hardcoded string:	            name: 'finalClass',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:312:hardcoded string:	            label: "Select Final Grade",
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:318:hardcoded string:	            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:319:hardcoded string:	            name: 'subCourse',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:320:hardcoded string:	            label: 'Select Course',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:321:hardcoded array:	            options: [{ label: subCourse, value: subCourse }],
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:327:hardcoded string:	            type: 'select',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:329:hardcoded string:	            name: 'validity',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:330:hardcoded string:	            label: 'Select Initial Validity',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:333:hardcoded string:	            message: "Please Select Initial Validity"
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:336:hardcoded string:	            type: ((existingProfiles.length > 0) ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:338:hardcoded string:	            name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:339:hardcoded string:	            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:341:hardcoded string:	            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:342:hardcoded number:	            required: (existingProfiles.length > 0) ? true : false,
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:344:hardcoded string:	                display: 'block',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:345:hardcoded string:	                height: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:346:hardcoded string:	                lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:353:hardcoded array:	        const { existingProfiles = [] } = this.props
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:354:hardcoded array:	        const { baseformValues, customerDetails = [] } = this.state
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:355:hardcoded object:	        const { subCourse } = baseformValues
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:356:hardcoded variable:	        const fields = this.getFields()
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:359:hardcoded number:	                initialValues={{ subCourse, userProfile: customerDetails[0]?.premiumAccount }}
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:360:hardcoded object:	                fields={fields}
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:361:hardcoded object:	                ref={`productDetailsForm`}
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:370:hardcoded object:	        this.setState({ eligibleForNewLoan: true })
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:374:hardcoded array:	        let formCountArray = [];
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:375:hardcoded object:	        const { tlpOrderData, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:376:hardcoded array:	        let { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:377:hardcoded array:	        customerDetails = isArray(customerDetails) ? customerDetails : [customerDetails];
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:378:hardcoded number:	        const { productInfo = [] } = customerDetails[0];
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:379:hardcoded number:	        const { formValues } = productInfo[0];
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:380:hardcoded number:	        this.setState({ baseProductInfo: productInfo[0], baseformValues: formValues, customerDetails });
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:381:hardcoded array:	        let { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:382:hardcoded number:	        this.setState({ userProfile: existingProfiles[0]?.value })
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:387:hardcoded object:	        const { changeNextBtnMode } = this.props; //To render some specific component after the main product details form
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:388:hardcoded object:	        const { error } = this.state;
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:392:hardcoded string:	                <div className="card m-2">
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:393:hardcoded string:	                    <div style={{ paddingBottom: '12px' }}>
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:394:hardcoded object:	                        <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:395:hardcoded string:	                        <Row style={{ overflow: 'auto', height: '160px', padding: '1%' }}>  {this.showOrderDetails()} </Row>
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:396:hardcoded object:	                        {this.buildProductDetailsForm()}
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:399:hardcoded string:	                                ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:400:hardcoded object:	                                onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:401:hardcoded object:	                                getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:402:hardcoded object:	                                changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:403:hardcoded object:	                                setError={this.setError}
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:404:hardcoded object:	                                eligibleForNewLoan={true}
microservices-middleware/client/src/modules/ordertype/middleeast/upgrade/AakashNeoProductPage.js:415:hardcoded object:	export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(AakashNeoMeUpgrade);
