microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:12:hardcoded variable:	const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:13:hardcoded string:	    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:14:hardcoded string:	    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:15:hardcoded string:	    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:16:hardcoded string:	    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:17:hardcoded string:	    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:18:hardcoded string:	    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:19:hardcoded string:	    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:20:hardcoded string:	    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:21:hardcoded string:	    error: get(state, 'product.error')
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:24:hardcoded variable:	const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:52:hardcoded object:	        const { identifier, productCombination } = this.props;
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:53:hardcoded object:	        const { docForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:54:hardcoded variable:	        const details = await docForm.getProductDetails();
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:55:hardcoded string:	        let productDetails = get(details, 'productDetails');
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:57:hardcoded string:	        const { userProfile = "", validity = "" } = productDetails;
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:61:hardcoded variable:	            const payload = {
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:63:hardcoded string:	                productType: 'single',
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:70:hardcoded string:	                url: '/api/product/doc'
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:76:hardcoded object:	        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:77:hardcoded variable:	        const payload = {
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:86:hardcoded string:	                url: '/api/product/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:87:hardcoded string:	                method: 'POST',
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:90:hardcoded string:	                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:94:hardcoded object:	                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:96:hardcoded string:	                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:98:hardcoded object:	                this.setState({ error });
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:105:hardcoded object:	        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:106:hardcoded string:	        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:116:hardcoded string:	            "userProfile": e.target.value,
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:122:hardcoded object:	        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:125:hardcoded object:	            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:127:hardcoded string:	                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:131:hardcoded string:	                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:134:hardcoded string:	                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:135:hardcoded object:	                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:141:hardcoded variable:	        const options = [
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:142:hardcoded string:	            {label: '3 months (100 sessions)', value: '3_months'},
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:143:hardcoded string:	            {label: '6 months (200 sessions)', value: '6_months'},
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:144:hardcoded string:	            {label: '12 months (500 sessions)', value: '12_months'}
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:150:hardcoded array:	        const { docPaidProfiles=[] } = this.props;
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:151:hardcoded variable:	        const fields = [{
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:152:hardcoded string:	            type: 'select',
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:154:hardcoded string:	            name: 'validity',
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:155:hardcoded string:	            label: "Select Validity",
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:159:hardcoded string:	            type: 'radio',
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:161:hardcoded string:	            name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:162:hardcoded string:	            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:164:hardcoded string:	            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:166:hardcoded string:	                display: 'block',
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:167:hardcoded string:	                height: '30px',
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:168:hardcoded string:	                lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:171:hardcoded number:	            value: docPaidProfiles[0].value
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:179:hardcoded array:	            [name]: value
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:184:hardcoded object:	        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:188:hardcoded object:	        const { changeNextBtnMode, productCombination } = this.props;
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:189:hardcoded object:	        const { error } = this.state;
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:193:hardcoded object:	                <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:195:hardcoded string:	                    ref="docForm"
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:196:hardcoded object:	                    fields={this.getFields()}
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:199:hardcoded string:	                    ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:200:hardcoded object:	                    onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:201:hardcoded object:	                    getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:202:hardcoded object:	                    changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:203:hardcoded object:	                    setError={this.setError}
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:204:hardcoded object:	                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/doc/DocProductPage.js:212:hardcoded object:	export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(DocProductPage);