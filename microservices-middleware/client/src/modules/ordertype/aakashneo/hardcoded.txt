microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:12:hardcoded variable:	const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:13:hardcoded string:	    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:14:hardcoded string:	    userDetails: get(state, 'auth.details.draftOrder'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:15:hardcoded string:	    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:16:hardcoded string:	    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:17:hardcoded string:	    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:18:hardcoded string:	    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:19:hardcoded string:	    authDetails: get(state, 'auth.details', {}),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:20:hardcoded string:	    orderPunchingType: get(state, 'auth.orderPunchingType'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:21:hardcoded string:	    user: get(state, "auth.details.user", {}),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:24:hardcoded variable:	const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:44:hardcoded object:	            initialValues: {},
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:45:hardcoded array:	            batches: [],
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:47:hardcoded array:	            langOptions: [],
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:48:hardcoded array:	            languageOfInstructionList: [],
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:49:hardcoded array:	            otherLanguageOfInstructionList: [],
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:50:hardcoded object:	            formValues: {}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:55:hardcoded string:	        const { batches, batch, langOptions, language = "", course, languageOfInstruction = "", otherLanguageOfInstruction = "" } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:56:hardcoded object:	        const { initialClass, classType, authDetails, productCombination } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:57:hardcoded object:	        const { env } = authDetails
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:58:hardcoded object:	        const { aakashNeoBatchesForm } = this;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:59:hardcoded array:	        let mentoring = [], courseInfo = {}, formValue = {};
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:60:hardcoded variable:	        let mentoringDetails = {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:63:hardcoded variable:	        let optedLanguage = languageOfInstruction
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:64:hardcoded object:	        const selectedLang = find(langOptions, { value: optedLanguage }) || {};
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:65:hardcoded string:	        const { id } = selectedLang || ""
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:72:hardcoded array:	            let sessions = [];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:74:hardcoded string:	            const slots = get(courseInfo, "slots", []);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:77:hardcoded string:	                    day: get(slot, "day", ""),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:78:hardcoded string:	                    is_mandatory: get(slot, "is_mandatory", ""),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:79:hardcoded string:	                    time: `${get(slot, "start_time", "")}-${get(slot, "end_time", "")}`
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:84:hardcoded object:	            this.setState({ batchError: true });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:96:hardcoded object:	        const { identifier, initialClass, finalClass, board, state, productType, subCourse, productCombination, courseType, validity, productLearningType, user, countryId } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:99:hardcoded object:	        let { classType, orderPunchingType } = this.props
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:100:hardcoded string:	        const isK12 = ["11", "11+12", "12", "13+"].includes(initialClass);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:103:hardcoded string:	        if (initialClass == '11' && finalClass == '12') {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:104:hardcoded string:	            grade = '11+12'
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:108:hardcoded object:	        const payload = { identifier, initialClass, finalClass, board, state, productType, subCourse, productCombination, courseType, validity, productLearningType, user, classType, countryId, orderPunchingType, grade };
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:111:hardcoded string:	            url: '/api/aakashNeo/getAakashNeoBatchDetails',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:112:hardcoded string:	            method: 'POST',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:115:hardcoded string:	            const resp = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:116:hardcoded string:	            const language = get(resp, 'language', []);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:117:hardcoded variable:	            const firstCourse = this.getAvailableCourses(resp.batches)
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:119:hardcoded string:	            const course = firstCourse && size(firstCourse) == 1 && !isK12 ? get(firstCourse[0], "value", "") : ""
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:133:hardcoded object:	            this.setState({ error });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:139:hardcoded variable:	            let languageOfInstructionList = language
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:148:hardcoded variable:	        let availableCourses = batches
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:162:hardcoded array:	            [item[key]]: [
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:163:hardcoded array:	                ...(result[item[key]] || []),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:167:hardcoded object:	        {},
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:171:hardcoded string:	        let { batches = [], language, languageOfInstruction = "" } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:173:hardcoded variable:	        let availableCourses = this.getUpdatedBatches(batches, languageOfInstruction);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:175:hardcoded array:	        const result = [];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:176:hardcoded variable:	        const map = new Map();
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:191:hardcoded string:	        const dayObj = { monday: "Mon", tuesday: "Tues", wednesday: "Wed", thursday: "Thur", friday: "Fri", saturday: "Sat", sunday: "Sun" }
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:192:hardcoded object:	        // const { batch, batches } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:193:hardcoded string:	        let mandatorySchedule = '', optionalSchedule = '';
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:194:hardcoded variable:	        // const availableCourses = batch && batches.find(dt => dt.id === batch);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:195:hardcoded string:	        const slots = get(availableCourses, "slots", [])
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:198:hardcoded string:	                let day = `${get(slot, "day", "").toLowerCase()}`
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:199:hardcoded array:	                day = dayObj[day];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:200:hardcoded string:	                mandatorySchedule += `${day}: ${get(slot, "start_time", "")}${" , "}`
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:202:hardcoded string:	                let day = `${get(slot, "day", "").toLowerCase()}`
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:203:hardcoded array:	                day = dayObj[day];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:204:hardcoded string:	                optionalSchedule += `${day}: ${get(slot, "start_time", "")}${" "}`
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:209:hardcoded object:	        return ({ optionalSchedule, mandatorySchedule })
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:213:hardcoded object:	        let { batches, languageOfInstruction } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:214:hardcoded variable:	        let availableBatches = this.getUpdatedBatches(batches, languageOfInstruction);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:217:hardcoded variable:	            let getSlots = this.getAvailableSlot(course)
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:218:hardcoded string:	            const batchStartDate = moment(course.batch_start_date).format("MMMM Do, YYYY")
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:219:hardcoded variable:	            const batchId = course.id
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:220:hardcoded variable:	            const name = course.name
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:221:hardcoded string:	            const time_zone = get(course, 'time_zone', null)
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:222:hardcoded object:	            return { batchId, batchStartDate, ...getSlots, name, time_zone }
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:228:hardcoded object:	        const { initialClass, authDetails, classType, productCombination, orderPunchingType } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:229:hardcoded object:	        const { languageOfInstruction, languageOfInstructionList, otherLanguageOfInstructionList, isBatchesAvailable = false } = this.state
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:230:hardcoded object:	        const { env } = authDetails || {}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:231:hardcoded string:	        const isK12 = ["11", "11+12", "12", "13+"].includes(initialClass);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:232:hardcoded string:	        const isMeOrder = orderPunchingType === "MIDDLEEAST_ORDER" ? true : false;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:233:hardcoded array:	        const availableCourses = languageOfInstruction ? this.getAvailableCourses() : [];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:235:hardcoded variable:	        const fields = [{
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:236:hardcoded string:	            type: "select",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:237:hardcoded string:	            name: "languageOfInstruction",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:238:hardcoded string:	            label: "Select Language of Instruction",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:244:hardcoded string:	            type:  languageOfInstruction && !availableCourses.length > 0 ? 'alert' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:245:hardcoded string:	            name: "alert",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:246:hardcoded string:	            description: "courses are not available for the selected language of instruction",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:247:hardcoded string:	            category: 'info',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:248:hardcoded string:	            showIcon: 'true'
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:251:hardcoded string:	            type: availableCourses.length > 0  ? "select" : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:252:hardcoded string:	            name: "course",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:253:hardcoded string:	            label: "Select Course",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:262:hardcoded object:	        const { aakashNeoBatchesForm } = this;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:263:hardcoded object:	        const { batch, batches , formValues } = this.state
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:265:hardcoded string:	        if (name === "languageOfInstruction") {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:266:hardcoded string:	            this.setState({ course: "" ,batch: "", formValues : {...formValues, course:"", batch:"", [name]: value}})
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:269:hardcoded string:	        if (name === "course") {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:271:hardcoded array:	                [`card-${batch}`]: false,
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:272:hardcoded string:	                batch: "",formValues : {...formValues, [name]: value}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:277:hardcoded array:	            [name]: value,
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:290:hardcoded object:	            const { batch } = this.state
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:292:hardcoded object:	                const { id } = nextProps.initialValues
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:295:hardcoded array:	                    [`card-${batch}`]: false,
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:296:hardcoded array:	                    [`card-${id}`]: true,
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:300:hardcoded object:	            this.setState({ initialValues: nextProps.initialValues });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:303:hardcoded object:	            const { batch } = this.state
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:304:hardcoded object:	            const { id } = nextProps.initialValues
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:307:hardcoded array:	                [`card-${batch}`]: false,
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:314:hardcoded object:	        const { batch } = this.state
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:316:hardcoded string:	            this.setState({ [`card-${batch}`]: false, batch: "" })
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:320:hardcoded array:	                [`card-${batch}`]: false,
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:321:hardcoded array:	                [`card-${batchId}`]: true,
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:330:hardcoded number:	        if (batchList && batchList.length > 0) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:331:hardcoded string:	            timeZone = get(batchList[0], 'time_zone', null);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:338:hardcoded object:	        const { error, initialValues, course: selectedCourseId, batchError, langOptions, formValues} = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:339:hardcoded object:	        const { initialClass, authDetails, classType, productCombination, orderPunchingType } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:340:hardcoded object:	        const { env } = authDetails || {}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:341:hardcoded string:	        const isDevEnv = ['development', 'local'].includes(env);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:342:hardcoded variable:	        const fields = this.getFields();
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:343:hardcoded variable:	        const batchList = selectedCourseId && this.getBatchList(selectedCourseId);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:344:hardcoded string:	        const timeZone = orderPunchingType == "MIDDLEEAST_ORDER" ? this.getMeTimeZoneMessage(batchList) : null;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:345:hardcoded string:	        const isK12 = ["11", 11, "11+12", "14", "13", "12", 12, "12+", "13+"].includes(initialClass);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:349:hardcoded object:	                <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:351:hardcoded string:	                {langOptions.length > 0 && <h6 style={{ margin: "1rem" }}>Language Preference</h6>}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:353:hardcoded object:	                    fields={fields}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:354:hardcoded object:	                    wrappedComponentRef={(inst) => this.aakashNeoBatchesForm = inst}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:355:hardcoded object:	                    initialValues = {formValues}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:360:hardcoded string:	                        <div className="d-inline-flex p-3">
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:361:hardcoded string:	                            <Card className="p-2"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:362:hardcoded object:	                                key={index + `${btch.batchId}`}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:363:hardcoded object:	                                name={`card-${btch.batchId}`}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:364:hardcoded object:	                                onClick={() => this.myOnClick(btch.batchId)}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:365:hardcoded object:	                                bordered={true}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:367:hardcoded string:	                                style={{ backgroundColor: this.state[`card-${btch.batchId}`] ? "#F1F3F5" : "", borderRadius: '15px', borderColor: "#318DF2", width: "300px", height : "250px",overflow:'auto' }}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:368:hardcoded object:	                                title={`${btch.name}`}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:372:hardcoded string:	                                        <span><i className="fa fa-clock-o" aria-hidden="true"></i> <strong>Regular Class Timings:</strong></span><br />
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:373:hardcoded object:	                                        <span>{btch.mandatorySchedule}</span><br /></div>}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:374:hardcoded number:	                                    {btch.optionalSchedule.length > 0 && <div>
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:375:hardcoded string:	                                        <span><i className="fa fa-clock-o" aria-hidden="true"></i> <strong>Additional Class Timings:</strong></span><br />
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:376:hardcoded object:	                                        <span>{btch.optionalSchedule}</span><br /></div>}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:382:hardcoded string:	                {batchError && <span style={{ "color": "red" }}>Please select the batch.</span>}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoBatches.js:388:hardcoded object:	export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(AakashNeoBatches);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:17:hardcoded string:	} from './AakashNeoHelper'
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:23:hardcoded variable:	const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:24:hardcoded string:	    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:25:hardcoded string:	    leadDetails: get(state, 'auth.leadDetails'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:26:hardcoded string:	    salesDetails: get(state, "details.salesDetails"),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:27:hardcoded string:	    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:28:hardcoded string:	    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:29:hardcoded string:	    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:30:hardcoded string:	    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:31:hardcoded string:	    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:32:hardcoded string:	    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:33:hardcoded string:	    error: get(state, 'product.error')
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:36:hardcoded variable:	const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:61:hardcoded string:	            course: 'K12',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:63:hardcoded object:	            productConfig: {},
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:64:hardcoded array:	            fields: [],
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:67:hardcoded string:	            productLearningType: " "
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:72:hardcoded object:	        const { productCombination, identifier, productType, course, user, leadDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:73:hardcoded object:	        const { productDetailsForm, schoolForm, byjusClassesDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:74:hardcoded object:	        const { isAdvanceOrder } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:75:hardcoded object:	        const { isDevEnv } = window;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:76:hardcoded variable:	        const details = await productDetailsForm.getProductDetails();
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:77:hardcoded string:	        let productDetails = get(details, 'productDetails');
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:78:hardcoded array:	        let bhlpCourseDetails = [], mentoringDetails = [], neoClassesFormValue;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:79:hardcoded string:	        let productLearningType = get(productDetails, "productLearningType", "")
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:80:hardcoded string:	        const initialGradeProductLearningType = get(productDetails, "initialGradeProductLearningType", "")
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:81:hardcoded string:	        const initialClass = get(productDetails, "initialClass", "");
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:82:hardcoded string:	        const finalClass = get(productDetails, "finalClass", "");
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:83:hardcoded variable:	        const isFoundation = FOUNDATION_GRADES.includes(initialClass)
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:86:hardcoded string:	        const isAcceleratorProgram = (["aakash_byjus_live"].includes(productLearningType) && ["12", "13+"].includes(initialClass) && ["12", "13+"].includes(finalClass))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:88:hardcoded string:	        let workshopChannel = get(leadDetails, 'Workshop_channel', '') || get(leadDetails, 'workshopChannel', '');
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:89:hardcoded string:	        if (productLearningType === 'aakash_byjus_live' || productLearningType === 'aakash_byjus_live_hybrid_program' || (productLearningType === "advance_order" && initialGradeProductLearningType === "aakash_byjus_live")) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:90:hardcoded object:	            const { aakashNeoDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:93:hardcoded variable:	            const response = validateAakashNeoMentoringDetails(neoClassesFormValue, productDetails);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:94:hardcoded string:	            mentoringDetails = get(response, "neoClassesMentoringDetails", []);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:95:hardcoded string:	            bhlpCourseDetails = get(response, "bhlpCourseDetails", []);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:98:hardcoded string:	                proficiency: "",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:99:hardcoded string:	                mathPercent: "",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:100:hardcoded string:	                sciencePercent: "",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:101:hardcoded string:	                languageOfInstruction: get(neoClassesFormValue, "formValue.languageOfInstruction", null),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:102:hardcoded string:	                languageOfInstructionId: get(neoClassesFormValue, "formValue.languageOfInstructionId", null),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:107:hardcoded variable:	        //const studentMarksDetails = proficiencyForm && await proficiencyForm.getStudentMarks();
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:108:hardcoded string:	        if (productDetails && productDetails["tablet"]) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:109:hardcoded string:	            productDetails['tabletId'] = `T-${productDetails["tablet"]}`;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:113:hardcoded variable:	            const payload = {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:123:hardcoded string:	                loggedInMobile: get(leadDetails, 'studentMobile', '')
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:125:hardcoded variable:	            const urlMap = {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:127:hardcoded string:	                'aakash_byjus_live': '/api/aakashNeo/product/combo',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:128:hardcoded string:	                'aakash_byjus_tlp': '/api/aakashNeo/product/combo',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:129:hardcoded string:	                'advance_order': '/api/aakashAdvanceOrder/product/combo',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:130:hardcoded string:	                'aakash_byjus_tab_hybrid_program': '/api/aakashCrpTabHybrid/product/combo',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:131:hardcoded string:	                'aakash_doubts_on_chat': '/api/aakashDoubtsOnChat/product/combo',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:132:hardcoded string:	                'aakash_byjus_live_hybrid_program': '/api/aakashCrpHybrid/product/combo',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:133:hardcoded string:	                'aakash_test_series': '/api/aakashCrpHybrid/product/combo'
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:136:hardcoded string:	            productLearningType = isAdvanceOrder ? 'advance_order' : productLearningType;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:140:hardcoded array:	                url: urlMap[productLearningType]
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:146:hardcoded object:	        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:147:hardcoded object:	        const { student } = productDetails;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:148:hardcoded object:	        let { productLearningType } = student;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:149:hardcoded variable:	        const payload = {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:153:hardcoded object:	        const { isAdvanceOrder } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:155:hardcoded variable:	        const urlMap = {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:157:hardcoded string:	            'aakash_byjus_live': '/api/aakashNeo/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:158:hardcoded string:	            'aakash_byjus_tlp': '/api/aakashNeo/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:159:hardcoded string:	            'advance_order': '/api/aakashAdvanceOrder/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:160:hardcoded string:	            'aakash_byjus_tab_hybrid_program': '/api/aakashCrpTabHybrid/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:161:hardcoded string:	            'aakash_doubts_on_chat': '/api/aakashDoubtsOnChat/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:162:hardcoded string:	            'aakash_byjus_live_hybrid_program': '/api/aakashCrpHybrid/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:163:hardcoded string:	            'aakash_test_series': '/api/aakashCrpHybrid/storeProductDetails'
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:166:hardcoded string:	        productLearningType = isAdvanceOrder ? 'advance_order' : productLearningType;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:172:hardcoded array:	                url: urlMap[productLearningType],
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:173:hardcoded string:	                method: 'POST',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:176:hardcoded string:	                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:180:hardcoded object:	                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:182:hardcoded string:	                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:184:hardcoded object:	                this.setState({ error });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:191:hardcoded object:	        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:192:hardcoded string:	        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:201:hardcoded object:	        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:204:hardcoded object:	            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:206:hardcoded string:	                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:210:hardcoded string:	                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:213:hardcoded string:	                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:214:hardcoded object:	                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:220:hardcoded object:	        const { productDetailsForm, fetchComp } = this.refs;;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:221:hardcoded variable:	        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:223:hardcoded string:	            case "productLearningType":
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:224:hardcoded string:	                detailsForm && detailsForm.setFieldsValue({ initialClass: "", finalClass: "", tablet: "", validity: "", subCourse: "", initialGradeProductLearningType: "", finalGradeProductLearningType: "", subType: "", isAdvanceOrder: "" });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:226:hardcoded string:	                    initialClass: "", finalClass: "", tablet: "", validity: "", subCourse: "", initialGradeProductLearningType: "", finalGradeProductLearningType: "", isAdvanceOrder: false, duration: "", subType: ""
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:231:hardcoded string:	            case "subType":
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:232:hardcoded string:	                detailsForm && detailsForm.setFieldsValue({ initialClass: "", finalClass: "", tablet: "", validity: "", subCourse: "", initialGradeProductLearningType: "", finalGradeProductLearningType: "" });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:234:hardcoded string:	                    initialClass: "", finalClass: "", tablet: "", validity: "", subCourse: "", initialGradeProductLearningType: "", finalGradeProductLearningType: "", isAdvanceOrder: "",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:238:hardcoded string:	            case "isAdvanceOrder":
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:239:hardcoded string:	                detailsForm && detailsForm.setFieldsValue({ initialClass: "", finalClass: "", tablet: "", validity: "", subCourse: "", initialGradeProductLearningType: "", finalGradeProductLearningType: "" });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:241:hardcoded string:	                    initialClass: "", finalClass: "", tablet: "", validity: "", subCourse: "", initialGradeProductLearningType: "", finalGradeProductLearningType: ""
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:245:hardcoded string:	            case "initialClass":
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:246:hardcoded string:	                detailsForm && detailsForm.setFieldsValue({ duration: "", finalClass: "", tablet: "", validity: "", subCourse: "", initialGradeProductLearningType: "", finalGradeProductLearningType: "" });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:247:hardcoded string:	                this.setState({ finalClass: "", subCourse:"" })
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:250:hardcoded string:	            case "finalClass":
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:251:hardcoded string:	                detailsForm && detailsForm.setFieldsValue({ duration: "", tablet: "", validity: "", subCourse: "", initialGradeProductLearningType: "", finalGradeProductLearningType: "", tlpExtension: "", tlpFinalClass : "" });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:252:hardcoded string:	                this.setState({ tlpExtension: false, tlpFinalClass: "",tablet: ""  });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:255:hardcoded string:	            case "tlpExtension":
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:256:hardcoded string:	                detailsForm && detailsForm.setFieldsValue({ tablet: "", validity: "", subCourse: "", tlpFinalClass: "", isSdCardOrder : false });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:257:hardcoded string:	                this.setState({ tlpFinalClass: "", validity: "",subCourse: "", isSdCardOrder: false });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:260:hardcoded string:	            case "duration":
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:261:hardcoded string:	                detailsForm && detailsForm.setFieldsValue({ tablet: "", validity: "", subCourse: "", initialGradeProductLearningType: "", finalGradeProductLearningType: "" });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:264:hardcoded string:	            case "initialGradeProductLearningType":
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:265:hardcoded string:	                detailsForm && detailsForm.setFieldsValue({ tablet: "", validity: "", subCourse: "", finalGradeProductLearningType: "" });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:268:hardcoded string:	            case "finalGradeProductLearningType":
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:269:hardcoded string:	                detailsForm && detailsForm.setFieldsValue({ tablet: "", validity: "", subCourse: "" });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:272:hardcoded string:	            case "subCourse":
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:273:hardcoded string:	                detailsForm && detailsForm.setFieldsValue({ validity: "", tablet: "" });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:274:hardcoded string:	                this.setState({ validity: "" })
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:277:hardcoded string:	            case "validity":
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:278:hardcoded string:	                detailsForm && detailsForm.setFieldsValue({ tablet: "" });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:282:hardcoded array:	                    [name]: value,
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:289:hardcoded array:	            [name]: value,
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:294:hardcoded object:	    getProfileOptions = ({ isDocEligible, productLearningType }) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:295:hardcoded object:	        const { selectedProfile } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:296:hardcoded object:	        let { existingProfiles, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:297:hardcoded string:	        const isPrivilegedUser = checkIsPrivilegedUser(authDetails["user"]);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:298:hardcoded number:	        if (existingProfiles && existingProfiles.length > 0) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:299:hardcoded variable:	            let newExistingProfile = existingProfiles;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:300:hardcoded string:	            newExistingProfile = newExistingProfile.find(profile => profile.value === "newProfile");
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:302:hardcoded string:	                existingProfiles.push({ "label": "New Profile", value: "newProfile" })
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:309:hardcoded array:	        const { neoTablets, isPriviledgedUser, leadDetails, MeTablets = [] ,selectedFinalClass} = details
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:310:hardcoded object:	        const { isDevEnv } = window;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:311:hardcoded variable:	        let options = neoTablets
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:312:hardcoded string:	        const accountNumber = get(leadDetails, "accountNumber", "")
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:314:hardcoded string:	            options = options.filter(tab => !["TSXMZZ","TLXMZ2"].includes(tab.value))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:316:hardcoded string:	        if (isDevEnv && !["12","13+"].includes(selectedFinalClass)){
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:317:hardcoded string:	            options = options.filter(tab => !["SBXMGZ","SCXMGJ"].includes(tab.value))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:320:hardcoded string:	            { label: "Lenovo 10 inch Tablet Mobile Data (3GB/ 32GB) - (Rs 16000)", value: "TLXMZZ" },
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:321:hardcoded string:	            { label: "Lenovo Tablet (Add-on-BYJUS) (8 inch)(Rs.8000)", value: "TL8MZZ" }
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:324:hardcoded string:	        if (isPriviledgedUser && accountNumber === "24692") {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:325:hardcoded string:	            let meEnabledTablets = MeTablets.map(tab => (tab?.label)?.includes("- ME") ? tab : ({ ...tab, label: tab.label + " - ME" }))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:326:hardcoded string:	            meEnabledTablets = meEnabledTablets.filter(tab => ["Lenovo 10.1 inch Tablet Data - ME", "Ackees 10 inch Mobile Tablet - ME", "Lenovo 8 inch Tablet (Mobile Data) - ME", "Samsung 10 inch Tablet (Mobile Data) - ME"].includes(tab.label))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:330:hardcoded string:	        options = !isPriviledgedUser ? options.filter(tab => tab.value !== "TS8MZZ") : options;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:335:hardcoded object:	        const { initialClass: selectedInitialClass, productLearningType, finalClass, validity, subCourse } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:336:hardcoded object:	        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:338:hardcoded variable:	        let initialGrade = selectedInitialClass;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:340:hardcoded object:	        this.setState({ isOneToManyClass: false, isByjusClass: false })
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:341:hardcoded array:	        const isByjusClassesApplicable = byjusClassesMap[initialGrade] || false;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:349:hardcoded object:	        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:350:hardcoded variable:	        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:351:hardcoded string:	        detailsForm && detailsForm.setFieldsValue({ productLearningType: "", validity: "", tablet: "" });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:363:hardcoded string:	            initialGradeProductLearningType, subCourse = "", isAdvanceOrder = false, userProfile = "", isSdCardOrder = false, tlpExtension = false, tlpFinalClass = "" } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:364:hardcoded object:	        const { showProfileSelectionOption, existingProfiles, productCombination, authDetails, salesDetails, leadDetails, user, productType, tablets: neoTablets } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:365:hardcoded string:	        const { env } = get(this.props, "authDetails", {});
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:366:hardcoded string:	        const userPermissions = get(user, 'permissions', []);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:367:hardcoded variable:	        const isPriviledgedUser = userPermissions.includes(productPermissions.ignorePriceRangeCheck);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:368:hardcoded number:	        const { Products = [], Courses = [], Boards = [], D4EligibleManagers = [], MeTablets = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:369:hardcoded object:	        const productConfiguration = find(Products, { formattedName: productType }) || {};
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:370:hardcoded object:	        const { validity } = productConfiguration || {};
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:371:hardcoded string:	        const selectedCourseConfig = find(Courses, { formattedName: "K10/K12" }) || {};
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:372:hardcoded string:	        const selectedBoardConfig = find(Boards, { formattedName: "CBSE" }) || {};
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:373:hardcoded string:	        const stateList = find(Boards, { formattedName: "STATE" });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:374:hardcoded variable:	        const byjusClassesMap = getByjusClassesMap(selectedBoardConfig.classes);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:375:hardcoded variable:	        const classes = getClasses(selectedBoardConfig);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:376:hardcoded object:	        const { isDevEnv } = window;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:377:hardcoded string:	        const isSubCourseAvailble = (['12', '13+'].includes(selectedFinalClass) || tlpFinalClass === '12')
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:378:hardcoded object:	        const { featureEnableList } = authDetails || {};
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:379:hardcoded string:	        const isAcceleratorProgram = (["aakash_byjus_live"].includes(productLearningType) && ["12", "13+"].includes(selectedInitialClass) && ["12", "13+"].includes(selectedInitialClass))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:380:hardcoded string:	        const AOEDescription = 'Note: This product combination is available for Order Punching under Advance Admissions'
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:381:hardcoded string:	        const APDescription = 'Note: This course will be valid for 1 month'
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:382:hardcoded string:	        const NoteForScholar = 'Note: This course will be valid for 6 months'
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:383:hardcoded object:	        const subCourses = getSubCourses({ selectedBoardConfig, selectedFinalClass, tlpFinalClass });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:384:hardcoded object:	        const subCourseOptions = subCourses && fetchNeoSubCourses({ subCourses, selectedFinalClass, selectedInitialClass, productLearningType, isAcceleratorProgram, isPriviledgedUser })
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:385:hardcoded string:	        const isPrivilegedUser = checkIsPrivilegedUser(authDetails["user"]);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:387:hardcoded string:	        // const showAdvOrderCheckBox = ["aakash_byjus_live", "aakash_byjus_tlp", "aakash_byjus_live_hybrid_program", "aakash_byjus_tab_hybrid_program"].includes(productLearningType)
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:388:hardcoded variable:	        const showAdvOrderCheckBox = false;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:390:hardcoded string:	        // const isAdvcanceOrderEligible = ((["aakash_byjus_tlp"].includes(productLearningType) && ["8", "9", "10", "11"].includes(selectedInitialClass) && ["12"].includes(selectedFinalClass))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:391:hardcoded string:	        //     || (["aakash_byjus_live"].includes(productLearningType) && ["9", "10", "11"].includes(selectedInitialClass) && ["12"].includes(selectedFinalClass))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:392:hardcoded string:	        //     || (["aakash_byjus_live_hybrid_program", "aakash_byjus_tab_hybrid_program"].includes(productLearningType) && ["11"].includes(selectedInitialClass) && ["12"].includes(selectedFinalClass)))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:393:hardcoded variable:	        const isAdvcanceOrderEligible = false;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:395:hardcoded object:	        const isDocEligible = isDevEnv && userProfile && checkDocEligibility({ productLearningType, existingProfiles, userProfile });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:397:hardcoded string:	        const isDoc = isDocEligible && productLearningType === "aakash_doubts_on_chat";
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:398:hardcoded string:	        let workshopChannel = get(leadDetails, 'Workshop_channel', '') || get(leadDetails, 'workshopChannel', '');
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:399:hardcoded string:	        const showExtendTlpCheckbox = isDevEnv && selectedFinalClass === "10" && productLearningType === "aakash_byjus_live"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:401:hardcoded variable:	        let feilds = [{
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:402:hardcoded string:	            type: (showProfileSelectionOption && existingProfiles.length > 0 ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:403:hardcoded object:	            options: this.getProfileOptions({ isDocEligible, productLearningType }),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:404:hardcoded string:	            name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:405:hardcoded string:	            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:407:hardcoded string:	            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:409:hardcoded string:	                display: 'block',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:410:hardcoded string:	                height: '30px',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:411:hardcoded string:	                lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:413:hardcoded number:	            required: (showProfileSelectionOption && existingProfiles.length > 0 ? true : false)
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:415:hardcoded string:	            type: 'select',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:416:hardcoded string:	            name: 'productLearningType',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:417:hardcoded string:	            label: 'Select Product Learning Type',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:418:hardcoded string:	            message: "Please Select Product Learning Type",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:419:hardcoded object:	            options: getProductLearningType({ featureEnableList, isPrivilegedUser, existingProfiles, isDocEligible }),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:424:hardcoded string:	            type: productLearningType === "aakash_test_series" ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:425:hardcoded string:	            name: 'subType',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:426:hardcoded string:	            label: 'Select Sub Type',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:427:hardcoded string:	            message: "Please Select Sub Type",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:430:hardcoded string:	            required: productLearningType === "aakash_test_series" ? true : false
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:433:hardcoded string:	            type: 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:434:hardcoded string:	            name: 'board',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:435:hardcoded string:	            label: 'Select Board',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:437:hardcoded string:	            options: get(selectedCourseConfig, 'boards'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:439:hardcoded string:	            message: "Please select Board",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:442:hardcoded string:	            type: selectedBoard === "STATE" ? 'hidden' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:443:hardcoded string:	            name: 'state',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:444:hardcoded string:	            label: 'Select State',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:445:hardcoded string:	            required: selectedBoard === "STATE" ? false : false,
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:446:hardcoded string:	            options: get(stateList, 'states', {}),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:448:hardcoded string:	            message: "Please select State"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:451:hardcoded string:	            type: !isDoc && showAdvOrderCheckBox ? 'checkbox' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:452:hardcoded string:	            name: 'isAdvanceOrder',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:453:hardcoded string:	            checkBoxLabel: "Punch Advance Order",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:457:hardcoded string:	            type: 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:458:hardcoded string:	            name: 'initialGradeProductCategory',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:459:hardcoded string:	            label: 'Select Initial Grade product category',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:460:hardcoded string:	            message: "Please Select Initial Grade product category",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:465:hardcoded string:	            type: !isDoc ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:466:hardcoded string:	            name: 'initialClass',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:467:hardcoded string:	            label: 'Select Initial Grade',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:469:hardcoded object:	            options: getInitialClassValues({ classes, productLearningType, isDevEnv, isAdvanceOrder }),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:471:hardcoded string:	            message: "Please Select Initial Grade"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:473:hardcoded string:	            type: !isDoc ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:474:hardcoded string:	            name: 'finalClass',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:475:hardcoded string:	            label: 'Select Final Grade',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:477:hardcoded object:	            options: getFinalClassValues({ classes, selectedInitialClass, productLearningType, isDevEnv, isAdvanceOrder,isPriviledgedUser }),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:479:hardcoded string:	            message: "Please Select Final Grade"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:481:hardcoded string:	            type: isPriviledgedUser && showExtendTlpCheckbox ? 'checkbox' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:482:hardcoded string:	            name: 'tlpExtension',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:483:hardcoded string:	            checkBoxLabel: "Extend the course by adding Aakash BYJU'S Tablet Learning Program",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:487:hardcoded string:	            type: tlpExtension ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:488:hardcoded string:	            name: 'tlpFinalClass',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:489:hardcoded string:	            label: "Select Aakash BYJU'S TLP Final Grade",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:491:hardcoded object:	            options: getFinalClassValues({  classes, selectedInitialClass, productLearningType, isDevEnv, isAdvanceOrder, tlpExtension }),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:493:hardcoded string:	            message: "Please Select Aakash BYJU'S TLP Final Grade"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:496:hardcoded string:	            type: isDoc ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:497:hardcoded string:	            name: 'duration',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:498:hardcoded string:	            label: 'Select Duration',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:502:hardcoded string:	            message: "Please Select Duration"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:505:hardcoded string:	            type: !isAdvanceOrder && isAdvcanceOrderEligible ? 'alert' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:506:hardcoded string:	            name: "alert",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:508:hardcoded string:	            category: 'error',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:509:hardcoded string:	            showIcon: 'true'
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:512:hardcoded string:	            type: productLearningType === "advance_order" ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:513:hardcoded string:	            name: 'initialGradeProductLearningType',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:514:hardcoded string:	            label: 'Select Initial Grade Product Learning Type',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:515:hardcoded string:	            message: "Please Select Product Learning Type",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:516:hardcoded object:	            options: getGradeWiseProductLearningType({ selectedInitialClass, selectedFinalClass, productLearningType }),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:518:hardcoded string:	            required: productLearningType === "advance_order" ? true : false
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:521:hardcoded string:	            type: isAdvanceOrder ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:522:hardcoded string:	            name: 'finalGradeProductLearningType',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:523:hardcoded string:	            label: 'Select Final Grade Product Learning Type',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:524:hardcoded string:	            message: "Please Select Product Learning Type",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:525:hardcoded object:	            options: getGradeWiseProductLearningType({ initialGradeProductLearningType, selectedInitialClass, selectedFinalClass, isAdvanceOrder, productLearningType }),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:530:hardcoded string:	            type: !isDoc && isSubCourseAvailble ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:531:hardcoded string:	            name: 'subCourse',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:532:hardcoded string:	            label: 'Select Sub Course',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:537:hardcoded string:	            message: "Please select Sub Course"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:540:hardcoded string:	            type: isAcceleratorProgram && ["JEE-ACHIEVER", "NEET-SCHOLAR"].includes(subCourse) ? 'alert' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:541:hardcoded string:	            name: "alert",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:542:hardcoded string:	            description: subCourse === "JEE-ACHIEVER" ? APDescription : NoteForScholar,
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:543:hardcoded string:	            category: 'info',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:544:hardcoded string:	            showIcon: 'true'
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:546:hardcoded string:	            type: 'select',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:547:hardcoded string:	            options: getValidityOptions({ selectedInitialClass, productLearningType, productType: "combo", subCourse, selectedFinalClass, isPriviledgedUser, isDevEnv, validity, isDocEligible }),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:548:hardcoded string:	            name: 'validity',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:549:hardcoded string:	            label: 'Select Initial Validity',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:553:hardcoded string:	            message: "Please Select Initial Validity"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:556:hardcoded string:	            type: 'select',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:557:hardcoded string:	            name: 'tablet',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:558:hardcoded string:	            label: 'Select Tablet',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:562:hardcoded array:	            options: checkPrivTabletAccess(leadDetails, user) ? getAllAvailableTabletsBasedOnUser(user,productCombination) : neoTablets ? this.getTabletOptions({ neoTablets, selectedInitialClass, productCombination, selectedFinalClass, isPriviledgedUser, leadDetails, MeTablets }) : [],
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:563:hardcoded string:	            message: 'Please select Tablet'
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:566:hardcoded string:	            type: !tlpExtension && isPriviledgedUser && productLearningType === "aakash_byjus_live" && !["JEE-ACHIEVER","NEET-SCHOLAR"].includes(subCourse) ? 'checkbox' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:567:hardcoded string:	            name: 'isSdCardOrder',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:568:hardcoded string:	            checkBoxLabel: "Select SD Card",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:576:hardcoded object:	        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:580:hardcoded object:	        const { productDetails, productConfig, productType } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:581:hardcoded string:	        if (productType === get(productDetails, 'productType')) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:582:hardcoded string:	            const formValues = get(productDetails, 'students[0].formValues');
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:586:hardcoded string:	                course: get(formValues, 'course'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:587:hardcoded string:	                board: get(formValues, 'board'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:588:hardcoded string:	                initialClass: get(formValues, 'initialClass'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:589:hardcoded string:	                subCourse: get(formValues, 'subCourse'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:594:hardcoded object:	        this.setState({ productConfig });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:598:hardcoded object:	        const { isDevEnv } = window;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:599:hardcoded object:	        const { error, validity } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:600:hardcoded string:	        const { course: selectedCourse, subCourse, productLearningType, initialClass, finalClass, courseType, classType, isByjusClass, initialGradeProductLearningType = "", proficiency = "", trackId, isAdvanceOrder = false } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:601:hardcoded object:	        const { productType, productCombination, productConfig, changeNextBtnMode, identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:602:hardcoded array:	        const fields = productConfig ? this.getFields() : [];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:603:hardcoded variable:	        const isFoundation = FOUNDATION_GRADES.includes(initialClass)
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:604:hardcoded string:	        const renderBatches = ["aakash_byjus_live", "aakash_byjus_live_hybrid_program"].includes(productLearningType)
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:606:hardcoded string:	        // const isAdvcanceOrderEligible = ((["aakash_byjus_tlp"].includes(productLearningType) && ["8", "9", "10", "11"].includes(initialClass) && ["12"].includes(finalClass))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:607:hardcoded string:	        //     || (["aakash_byjus_live"].includes(productLearningType) && ["9", "10", "11"].includes(initialClass) && ["12"].includes(finalClass))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:608:hardcoded string:	        //     || (["aakash_byjus_live_hybrid_program", "aakash_byjus_tab_hybrid_program"].includes(productLearningType) && ["11"].includes(initialClass) && ["12"].includes(finalClass)))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:609:hardcoded variable:	        const isAdvcanceOrderEligible = false;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:614:hardcoded object:	                <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:617:hardcoded string:	                </div>} type="warning" />}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:619:hardcoded string:	                    ref="productDetailsForm"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:620:hardcoded object:	                    productType={productType}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:621:hardcoded object:	                    fields={fields}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:624:hardcoded string:	                    ref="aakashNeoDetailsForm"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:625:hardcoded object:	                    identifier={identifier}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:626:hardcoded object:	                    initialClass={initialClass}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:627:hardcoded object:	                    finalClass={finalClass}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:628:hardcoded object:	                    productType={productType}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:629:hardcoded object:	                    validity={validity}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:630:hardcoded object:	                    subCourse={subCourse}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:631:hardcoded object:	                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:632:hardcoded object:	                    productLearningType={productLearningType}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:633:hardcoded string:	                    classType="neo"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:634:hardcoded string:	                    courseType="regular"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:637:hardcoded string:	                    ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:638:hardcoded object:	                    onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:639:hardcoded object:	                    getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:640:hardcoded object:	                    changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:641:hardcoded object:	                    productType={productType}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:642:hardcoded object:	                    setError={this.setError}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:643:hardcoded object:	                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:644:hardcoded object:	                    validity={validity}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:645:hardcoded object:	                    selectedCourse={selectedCourse}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:646:hardcoded object:	                    disabled={(isAdvcanceOrderEligible && !isAdvanceOrder)}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:647:hardcoded object:	                    productLearningType={productLearningType}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:648:hardcoded string:	                    isTestSeries={this.state.productLearningType === "aakash_test_series"}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeo.js:655:hardcoded object:	export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(AakashNeo)
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:12:hardcoded variable:	const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:13:hardcoded string:	    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:14:hardcoded string:	    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:15:hardcoded string:	    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:16:hardcoded string:	    orderPunchingType: get(state, 'auth.orderPunchingType'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:17:hardcoded string:	    tlpOrderData: get(state, 'auth.tlpOrderData'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:18:hardcoded string:	    customerDetails: get(state, 'details.customerDetails'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:19:hardcoded string:	    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:20:hardcoded string:	    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:21:hardcoded string:	    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:22:hardcoded string:	    reviewProductDetails: get(state, 'product.reviewDetails'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:23:hardcoded string:	    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:24:hardcoded string:	    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:25:hardcoded string:	    user: get(state, "auth.details.user", {}),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:26:hardcoded string:	    cashbackDetails: get(state, "product.cashbackDetails", {}),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:27:hardcoded string:	    finalPrice: get(state, "product.finalPrice", 0),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:28:hardcoded string:	    salesDetails: get(state, 'details.salesDetails', {}),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:29:hardcoded string:	    addressDetail: get(state, 'address.details', {}),
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:33:hardcoded variable:	const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:56:hardcoded string:	            selectedProduct: 'combo',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:57:hardcoded string:	            course: 'K12',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:59:hardcoded object:	            productConfig: {},
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:60:hardcoded array:	            fields: [],
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:65:hardcoded object:	        let { selectedProduct } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:66:hardcoded array:	        let productOptions = this.getProductOptions() || [];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:68:hardcoded variable:	        const radioBtnStyle = {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:69:hardcoded string:	            fontWeight: '500',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:70:hardcoded string:	            fontSize: 'medium',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:71:hardcoded string:	            background: '#fcf5ff'
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:74:hardcoded string:	            <RadioGroup onChange={this.onChangeProduct} value={selectedProduct} buttonStyle="solid">
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:75:hardcoded object:	                {productOptions.map(({ label, value }, idx) => (
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:76:hardcoded object:	                    <RadioButton style={radioBtnStyle} value={value} key={idx}>{label}</RadioButton>
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:87:hardcoded string:	        const { value } = get(e, 'target');
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:88:hardcoded object:	        this.setState({ selectedProduct: null }, () => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:89:hardcoded object:	            this.setState({ selectedProduct: value, });
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:95:hardcoded array:	        const { Products = [] } = this.props.productConfig || {};
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:96:hardcoded variable:	        const products = Products.map((product) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:97:hardcoded object:	            const { name, formattedName } = product;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:99:hardcoded object:	                label: `${name}`,
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:107:hardcoded object:	        const {selectedProduct, compProps, productCombination, tablets} = details;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:108:hardcoded object:	        const { user } = compProps
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:110:hardcoded string:	            case 'combo': return <AakashNeo productType={selectedProduct} {...compProps} user={user} productCombination={productCombination} tablets = {tablets} />
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:116:hardcoded object:	        const { selectedProduct, error } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:117:hardcoded object:	        const { productCombination, tablets = {} } = this.props; //To render some specific component after the main product details form
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:118:hardcoded variable:	        const compProps = {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:119:hardcoded string:	            ref: 'aakashNeoLiveComponent',
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:126:hardcoded object:	                <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:127:hardcoded object:	                {this.buildProductOptions()}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:128:hardcoded object:	                {this.buildProductComponent({selectedProduct, compProps, productCombination, tablets})}
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoProductPage.js:134:hardcoded object:	export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(AakashNeoProductPage)
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:7:hardcoded object:	export const getProductLearningType = ({ featureEnableList, isPrivilegedUser, isDocEligible }) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:8:hardcoded string:	  const isAakashLiveHybridEnabledForSm = get(featureEnableList, 'aakash_hybrid_senior_manager_list', "");
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:9:hardcoded string:	  const isAakashLiveHybridEnabledForAsm = get(featureEnableList, 'aakash_hybrid_assistant_senior_manager_list', "");
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:10:hardcoded string:	  const isAakashLiveHybridEnabledForBda = get(featureEnableList, 'aakash_hybrid_access_for_bda', "");
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:11:hardcoded string:	  const isAakashDoubtsOnChatEnabled = get(featureEnableList, 'aakash_doubts_on_chat_senior_manager_list', "");
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:13:hardcoded object:	  const { isDevEnv } = window
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:15:hardcoded variable:	  const productLearningTypes = [
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:16:hardcoded string:	    { label: "Aakash Byju’s Live Program", value: "aakash_byjus_live" },
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:18:hardcoded string:	      label: "Aakash Byju’s Tablet Learning Program",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:19:hardcoded string:	      value: "aakash_byjus_tlp",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:22:hardcoded string:	    //   label: "Advance Order",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:23:hardcoded string:	    //   value: "advance_order"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:29:hardcoded string:	      label: "Aakash Test Series",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:30:hardcoded string:	      value: "aakash_test_series"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:37:hardcoded string:	      label: "Aakash Doubts On Chat",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:38:hardcoded string:	      value: "aakash_doubts_on_chat",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:45:hardcoded string:	    //     label: "Aakash Byju’s Live Hybrid Program",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:46:hardcoded string:	    //     value: "aakash_byjus_live_hybrid_program",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:51:hardcoded string:	        label: "Aakash Byjus Tab Hybrid Program",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:52:hardcoded string:	        value: "aakash_byjus_tab_hybrid_program"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:60:hardcoded variable:	export const getSubType = () => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:61:hardcoded variable:	  const subType = [
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:63:hardcoded string:	      label: "Daily Test Series",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:64:hardcoded string:	      value: "daily_test_series"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:67:hardcoded string:	      label: "Mock Test Series",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:68:hardcoded string:	      value: "mock_test_series",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:71:hardcoded string:	      label: "Ranker Test Series",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:72:hardcoded string:	      value: "ranker_test_series"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:75:hardcoded string:	      label: "Scholar Test Series",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:76:hardcoded string:	      value: "scholar_test_series"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:82:hardcoded variable:	export const getDocDuration = () => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:86:hardcoded string:	      label: "1 Month (30 sessions)",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:87:hardcoded string:	      value: "1"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:90:hardcoded string:	      label: "3 Months (90 sessions)",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:91:hardcoded string:	      value: "3",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:94:hardcoded string:	      label: "6 Month (180 sessions)",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:95:hardcoded string:	      value: "6"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:98:hardcoded string:	      label: "12 Month (360 sessions)",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:99:hardcoded string:	      value: "12"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:104:hardcoded object:	export const checkDocEligibility = ({ productLearningType, userProfile, existingProfiles }) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:106:hardcoded variable:	  let currentProfileDetails = existingProfiles.find(profile => profile.value == userProfile);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:107:hardcoded string:	  let eligibleProductsForDoc = ["aakash_neo_classes", "aakash"];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:108:hardcoded string:	  let existingActiveProduct = userProfile != "newProfile" ? currentProfileDetails.productTypes[0] : [];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:109:hardcoded string:	  let isEligible = userProfile != "newProfile" && eligibleProductsForDoc.includes(existingActiveProduct);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:115:hardcoded variable:	export const getGradeWiseProductLearningType = (details) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:116:hardcoded string:	  const { selectedInitialClass = "", initialGradeProductLearningType = "", selectedFinalClass = "", isAdvanceOrder, productLearningType } = details
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:117:hardcoded variable:	  let productLearningTypes = [
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:118:hardcoded string:	    { label: "Aakash Byju’s Live Program", value: "aakash_byjus_live" },
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:120:hardcoded string:	      label: "Aakash Byju’s Tablet Learning Program",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:121:hardcoded string:	      value: "aakash_byjus_tlp",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:124:hardcoded string:	      label: "Aakash Byju’s Live Hybrid Program",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:125:hardcoded string:	      value: "aakash_byjus_live_hybrid_program",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:128:hardcoded string:	      label: "Aakash Byjus Tab Hybrid Program",
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:129:hardcoded string:	      value: "aakash_byjus_tab_hybrid_program"
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:133:hardcoded string:	  productLearningTypes = (productLearningType === 'aakash_byjus_tlp' && selectedInitialClass == '11') 
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:134:hardcoded string:	    ? productLearningTypes.filter((val) => !["aakash_byjus_live_hybrid_program", "aakash_byjus_tab_hybrid_program"].includes(val.value)) 
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:135:hardcoded string:	      : (["aakash_byjus_live", "aakash_byjus_live_hybrid_program", "aakash_byjus_tab_hybrid_program"].includes(productLearningType) || (selectedInitialClass === "11" && selectedFinalClass === "12"))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:137:hardcoded string:	          : selectedInitialClass + "" === "8" ? productLearningTypes.filter((val) => val.value === "aakash_byjus_tlp")
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:138:hardcoded string:	            : productLearningTypes.filter((val) => !["aakash_byjus_live_hybrid_program", "aakash_byjus_tab_hybrid_program"].includes(val.value))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:144:hardcoded variable:	export const getInitialGradeProductCategory = () => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:145:hardcoded string:	  return [{ label: "Live Classes", value: "aakash_byjus_classes" }];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:148:hardcoded variable:	export const getInitialClassValues = (details) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:149:hardcoded string:	  const { classes, productLearningType = "", isDevEnv, isAdvanceOrder } = details;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:150:hardcoded array:	  let eligibleGrades = [];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:151:hardcoded string:	  const isHybridCourse = ["aakash_byjus_live_hybrid_program", "aakash_byjus_tab_hybrid_program"].includes(productLearningType)
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:153:hardcoded string:	  if ((productLearningType === "aakash_byjus_live_hybrid_program" && !isAdvanceOrder) || (isDevEnv && !isAdvanceOrder && productLearningType === "aakash_byjus_tab_hybrid_program")) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:154:hardcoded string:	    eligibleGrades = ["11", "12"];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:155:hardcoded string:	  } else if (productLearningType === "advance_order" || (isAdvanceOrder && !isHybridCourse && productLearningType !== "aakash_byjus_live")) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:156:hardcoded string:	    eligibleGrades = ["8", "9", "10", "11"];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:157:hardcoded string:	  } else if (productLearningType === "aakash_doubts_on_chat" || productLearningType === "aakash_test_series") {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:158:hardcoded string:	    eligibleGrades = ["11", "12", "13+"];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:159:hardcoded string:	  } else if (isAdvanceOrder && productLearningType === "aakash_byjus_live" && !isHybridCourse) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:160:hardcoded string:	    eligibleGrades = ["9", "10", "11"];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:162:hardcoded string:	    eligibleGrades = ["11"]
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:164:hardcoded string:	    eligibleGrades = ["8", "9", "10", "11", "12", "13+"];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:166:hardcoded variable:	  let initialClasses = classes;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:171:hardcoded variable:	export const getFinalClassValues = (details) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:172:hardcoded object:	  const { classes, selectedInitialClass, productLearningType, isDevEnv, isAdvanceOrder, tlpExtension = false, isPriviledgedUser = false} = details;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:173:hardcoded string:	  const eligibleGrades = ["8", "9", "10", "11", "12", "13+"];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:174:hardcoded variable:	  let finalClasses = classes;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:177:hardcoded string:	  if (["8", "9", "10", "11", "12"].includes(selectedInitialClass)) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:178:hardcoded string:	    finalClasses = finalClasses.filter((classVal) => !["13+", "11"].includes(classVal.value));
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:180:hardcoded string:	  if (selectedInitialClass == "13+") {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:181:hardcoded string:	    finalClasses = finalClasses.filter((classVal) => !["8", "9", "10", "11", "12"].includes(classVal.value));
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:183:hardcoded string:	  if (productLearningType === "advance_order" || isAdvanceOrder || tlpExtension ) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:184:hardcoded string:	    finalClasses = finalClasses.filter((classVal) => ["12"].includes(classVal.value));
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:186:hardcoded string:	  if (productLearningType === "aakash_test_series") {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:187:hardcoded string:	    finalClasses = finalClasses.filter((classVal) => ["12", "13+"].includes(classVal.value));
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:189:hardcoded string:	  if ( ["aakash_byjus_live","aakash_byjus_tlp"].includes(productLearningType)) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:190:hardcoded string:	    const maxClassesAllowed = isPriviledgedUser? 5 : (selectedInitialClass==="9") ? 4 : 3;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:191:hardcoded string:	    if(productLearningType=== "aakash_byjus_live")
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:193:hardcoded number:	      finalClasses = finalClasses.filter( ( classVal ) => parseInt(classVal.value) - parseInt(selectedInitialClass) + 1 <= maxClassesAllowed);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:199:hardcoded variable:	export const getSubCourses = (classConfig) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:200:hardcoded array:	  let subCourses = [];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:201:hardcoded object:	  let { selectedBoardConfig, selectedFinalClass, tlpFinalClass } = classConfig;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:202:hardcoded string:	  selectedFinalClass = selectedFinalClass !== "12" && tlpFinalClass === '12' ? "12" : selectedFinalClass
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:203:hardcoded object:	  const selectedClassConfig = find(selectedBoardConfig.classes, { class: selectedFinalClass }) || {};
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:204:hardcoded string:	  const k12Grade = ["11", "12", "13+"];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:205:hardcoded number:	  if (k12Grade.includes(selectedFinalClass)) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:206:hardcoded string:	    subCourses = get(selectedClassConfig, "subCourses");
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:211:hardcoded variable:	export const fetchNeoSubCourses = (details) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:212:hardcoded object:	  const { isDevEnv } = window
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:214:hardcoded string:	  // subCourses = subCourses.filter(course => ["JEE", "NEET"].includes(get(course, "value", "")))
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:215:hardcoded object:	  let { selectedFinalClass, subCourses, selectedInitialClass, productLearningType, isAcceleratorProgram = false, isPriviledgedUser } = details;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:216:hardcoded string:	  let eligibleCourses = isAcceleratorProgram && isPriviledgedUser ? ["JEE", "NEET", "JEE/NEET", "JEE-ACHIEVER", "NEET-SCHOLAR"]
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:217:hardcoded string:	    : (["JEE/NEET","JEE","NEET"])
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:220:hardcoded string:	  if (productLearningType == 'aakash_byjus_live_hybrid_program' || (isDevEnv && productLearningType === 'aakash_byjus_tab_hybrid_program')) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:221:hardcoded string:	    subCourses = subCourses.filter((course) => !["JEE/NEET"].includes(course.value));
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:224:hardcoded string:	  if (selectedInitialClass == "13+" && (productLearningType == 'aakash_byjus_live' || productLearningType === 'aakash_doubts_on_chat')) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:225:hardcoded string:	    subCourses = subCourses.filter((course) => !["JEE/NEET"].includes(course.value));
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:227:hardcoded string:	  if (selectedInitialClass == "11", "12", "12+" && productLearningType == 'aakash_test_series') {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:228:hardcoded string:	    subCourses = subCourses.filter((course) => !["JEE/NEET"].includes(course.value));
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:234:hardcoded variable:	export const getValidityOptions = (details) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:235:hardcoded object:	  const { selectedInitialClass, productLearningType, productType, subCourse, selectedFinalClass, isPriviledgedUser, isDevEnv, validity, isDocEligible } = details;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:236:hardcoded array:	  let options = [];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:242:hardcoded number:	  options = options.filter((val) => parseInt(val.value) > 2022);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:243:hardcoded string:	  if ((!isPriviledgedUser || productLearningType === "advance_order" || productLearningType === "aakash_doubts_on_chat" || productLearningType === "aakash_test_series")) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:244:hardcoded number:	    options =  isPriviledgedUser ? (options.filter((val) => [2023,2024].includes(parseInt(val.value)))) : (options.filter((val) => [2024].includes(parseInt(val.value))));
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:246:hardcoded string:	  if ( isPriviledgedUser && subCourse && [ "JEE-ACHIEVER", "NEET-SCHOLAR" ].includes( subCourse ) ) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:247:hardcoded number:	      options = options.filter((val) => parseInt(val.value) == 2023)
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:252:hardcoded variable:	const getFormattedValidity = (productDetails) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:253:hardcoded object:	  const { validity, selectedInitialClass, productLearningType, productType, selectedFinalClass, isPriviledgedUser, isDevEnv } = productDetails || {};
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:254:hardcoded array:	  let formattedValidity = [];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:255:hardcoded variable:	  let currentYear = getCurrentAcademicYear();
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:256:hardcoded variable:	  let thisYear = new Date().getFullYear();
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:262:hardcoded variable:	    let currentMonth = new Date().getMonth();
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:264:hardcoded string:	      currentMonth >= 4 ? validity.filter((ele) => ele.value != "x") : validity;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:266:hardcoded number:	      { label: currentYear + 1, value: currentYear + 1 },
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:267:hardcoded number:	      { label: currentYear + 2, value: currentYear + 2 },
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:274:hardcoded variable:	const getPriviledUserValidity = (productType, productCombination, isDevEnv) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:275:hardcoded variable:	  let currentYear = getCurrentAcademicYear(productType);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:276:hardcoded variable:	  let updatedYear = currentYear;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:277:hardcoded number:	  const validityUpto = updatedYear + 15; // Validity upto 2035 for priviled user
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:278:hardcoded array:	  const validity = [];
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:290:hardcoded variable:	export const getClasses = (selectedBoardConfig) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:291:hardcoded array:	  const { classes = [] } = selectedBoardConfig;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:292:hardcoded string:	  let classOptions = cloneDeep(classes.map((opt) => get(opt, "value")));
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:296:hardcoded variable:	export const checkIsPrivilegedUser = (user) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:298:hardcoded string:	  const userPermissions = get(user, "permissions", []);
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:299:hardcoded variable:	  const isPrivilegedUser = userPermissions.includes(
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:305:hardcoded variable:	export const validateAakashNeoMentoringDetails = (byjusClassesFormValue, productDetails) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:306:hardcoded array:	  let neoClassesMentoringDetails = [], bhlpCourseDetails = [], validatedResponse = { status: true };
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:307:hardcoded object:	  const { mentoring, courseInfo } = byjusClassesFormValue;
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:309:hardcoded number:	  if (productDetails && mentoring.length > 0 && !isEmpty(courseInfo)) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:315:hardcoded number:	  } else if (neoClassesMentoringDetails.length === 0 || isEmpty(courseInfo)) {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:325:hardcoded array:	export const getByjusClassesMap = (classes = []) => {
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:326:hardcoded object:	  const byjusClassMap = {};
microservices-middleware/client/src/modules/ordertype/aakashneo/AakashNeoHelper.js:328:hardcoded string:	    byjusClassMap[get(cls, "class")] = get(cls, "isOneToManyApplicable");
