microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:1:hardcoded object:import { get } from "lodash";
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:3:hardcoded variable:export const getSalesCustomerDetails = (quotation, customerDoc) => {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:4:hardcoded object:    const { customerDetails } = quotation;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:5:hardcoded variable:    const salesDetails = {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:6:hardcoded string:        directSalesBy: get(quotation, "directSalesBy", ""),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:7:hardcoded string:        directSalesById: get(quotation, "directSalesBy", "")
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:10:hardcoded variable:    const customerData = {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:11:hardcoded string:        studentName: get(customerDetails, 'studentName'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:12:hardcoded string:        parentName: get(customerDetails, 'parentName'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:13:hardcoded string:        parentCountryCode: get(customerDetails, 'primaryMobileNo').split("-")[0],
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:14:hardcoded string:        parentMobileNo: get(customerDetails, 'primaryMobileNo').split("-")[1],
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:15:hardcoded string:        email: get(customerDetails, 'email'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:16:hardcoded string:        attachments : get(customerDoc, 'attachments')
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:25:hardcoded variable:export const getAddressDetails = (quotation) => {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:26:hardcoded object:    const { addressDetails = {} } = quotation;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:27:hardcoded variable:    const addressData = {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:28:hardcoded number:        addressLine1: addressDetails.addressLine1,
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:29:hardcoded number:        addressLine2: addressDetails.addressLine2,
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashHelper.js:30:hardcoded number:        addressLine3: addressDetails.addressLine3,
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:1:hardcoded object:import React, { Component, Fragment, lazy } from 'react';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:3:hardcoded object:import { get, isEqual, isEmpty, remove, debounce } from 'lodash';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:4:hardcoded object:import { Select, message, Button } from 'antd';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:5:hardcoded object:import { Row, Col } from 'reactstrap';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:7:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:8:hardcoded file path:import AppLayout from 'modules/applayout/AppLayout';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:9:hardcoded file path:import AntDformBuilder from 'components/form/AntDFormBuilder'
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:10:hardcoded file path:import InfoWrapper from 'components/InfoWrapper';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:11:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:12:hardcoded file path:import UploadFile from 'modules/upload/UploadFile';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:13:hardcoded object:import { saveSalesAndCustomerDetails, saveIdentifier } from 'modules/details/salesCustomerReducer';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:14:hardcoded object:import { saveAddressDetails } from 'modules/address/addressReducer';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:15:hardcoded object:import { countryCodeList } from 'modules/address/utils/addressConfig';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:16:hardcoded object:import { accountMap, retentionDefaultUser, eligibleAvpEmailIdsForSCN, USER_ROLES_TO_FREEZE_SALESDONEBY } from 'modules/details/components/utils/detailConfig';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:17:hardcoded file path:import CashbackConfirmationModal from 'modules/details/components/CashbackConfirmationModal';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:18:hardcoded object:import { getSalesCustomerDetails } from './AakashHelper';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:20:hardcoded object:import { leadquaredRelatedPermissions } from "utility/screenPermission";
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:21:hardcoded string:const Masked = lazy(() => import("components/masking/Masked"))
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:23:hardcoded variable:const SelectOption = Select.Option;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:25:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:26:hardcoded string:    omsConfig: get(state, 'auth.details.omsConfig'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:27:hardcoded string:    authDetails: get(state, 'auth.details', {}),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:28:hardcoded string:    orderPunchingType: get(state, 'auth.orderPunchingType'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:29:hardcoded string:    leadDetails: get(state, 'auth.leadDetails', {}),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:30:hardcoded string:    salesDetails: get(state, 'details.salesDetails', {}),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:31:hardcoded string:    identifier: get(state, 'details.identifier', null),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:32:hardcoded string:    loading: get(state, 'details.loading'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:33:hardcoded string:    customerDetails: get(state, 'details.customerDetails', {}),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:34:hardcoded string:    error: get(state, 'details.error'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:35:hardcoded string:    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:36:hardcoded string:    selectedQuotation: get(state, 'auth.selectedQuotation'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:39:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:56:hardcoded array:            salesPersons: [],
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:57:hardcoded object:            salesPersonDetails: {},//maintaining this sate to track sales person name and id also
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:60:hardcoded object:            customerDetails: {},
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:61:hardcoded object:            salesDetails: {},
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:62:hardcoded array:            cashbacks: [],
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:64:hardcoded array:            lockedErrors: [],
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:66:hardcoded array:            directSalesPersons: [],
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:67:hardcoded array:            appointedSalesPersons: [],
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:68:hardcoded array:            bookedSalesPersons: [],
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:71:hardcoded string:            parentCountryCode: "+91",
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:73:hardcoded number:            duplicateReasonLength: 0,
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:75:hardcoded array:            existingProfiles: [],
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:76:hardcoded object:            leadUserDetails: {},
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:84:hardcoded object:        const { authDetails } = this.props
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:85:hardcoded object:        const { user } = authDetails || {};
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:86:hardcoded string:        const userPermissions = get(user, 'permissions', []);
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:87:hardcoded string:        const userEmail = get(user, 'email', "");
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:88:hardcoded variable:        const isPriviledgedUser = userPermissions.includes(leadquaredRelatedPermissions.allownMultipleOrderOnSameProspectId);
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:90:hardcoded object:        let filter = {};
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:92:hardcoded string:            filter["username"] = { "$regex": searchText.replace(/[+]/g, "\\+"), "$options": 'i' };
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:94:hardcoded string:            filter["username"] = userEmail
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:97:hardcoded object:        this.setState({ salesPersonLoading: true, error: null });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:99:hardcoded string:            url: '/api/details/getSalesPersonDetails',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:100:hardcoded string:            method: 'POST',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:101:hardcoded object:            body: { filter }
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:103:hardcoded string:            const docs = get(response, 'data.docs', []);
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:104:hardcoded variable:            const result = this.getFormattedSalesPersonList(docs);
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:109:hardcoded number:            if(result.length === 1) {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:111:hardcoded number:                    salesDoneByUser: result[0],
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:118:hardcoded object:            this.setState({ salesPersonLoading: false, error: JSON.stringify(error) });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:124:hardcoded array:            this.setState({ [field]: result });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:138:hardcoded string:                label: get(sp, 'username'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:139:hardcoded string:                value: get(sp, 'userId')
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:146:hardcoded variable:        const customerDetails = await this.customerDetailsForm.getFormValues();
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:147:hardcoded variable:        const salesDetails = await this.salesDetailsForm.getFormValues();
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:159:hardcoded object:        const { salesDetails } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:161:hardcoded string:        salesDetails[`${name}`] = get(option, 'label');
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:162:hardcoded string:        salesDetails[`${name}Id`] = get(option, 'value');
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:164:hardcoded object:        this.setState({ salesDetails });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:175:hardcoded object:        const { authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:176:hardcoded object:        const { salesDetails = {} } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:177:hardcoded string:        const { directSalesBy = "" } = salesDetails
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:179:hardcoded variable:            const payload = {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:181:hardcoded string:                isLeadCreatedByAdmin: get(authDetails, "isLeadCreatedByAdmin", false)
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:183:hardcoded object:            this.setState({ loading: true, error: null });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:185:hardcoded string:                url: '/api/details/evaluateUser',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:186:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:189:hardcoded object:                this.setState({ error: null, loading: false });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:190:hardcoded object:                this.setState({ leadUserDetails: response.data });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:192:hardcoded object:                this.setState({ error, loading: false });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:198:hardcoded variable:        let isSuccess = false;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:199:hardcoded object:        const { leadDetails, identifier, authDetails, isOmsLive, orderPunchingType, omsConfig, selectedQuotation } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:200:hardcoded object:        const { salesDetails, parentCountryCode } = this.state; //Get both id and email
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:201:hardcoded object:        let { customerDetails } = details;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:202:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:203:hardcoded string:        const altContactNo = get(selectedQuotation.customerDetails, "alternateMobileNo[0].mobile", "");
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:204:hardcoded variable:        let uploadedPhoto = this.getAttachments();
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:205:hardcoded string:        customerDetails.attachments = { name: "photo", url: get(uploadedPhoto[0], "url", "") };
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:206:hardcoded string:        customerDetails.category = get(selectedQuotation.customerDetails, "category", "")
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:207:hardcoded string:        customerDetails.occupation = get(selectedQuotation.customerDetails, "occupation", "")
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:208:hardcoded string:        customerDetails.communicationPreferences = get(selectedQuotation.customerDetails, "communicationPreference", "")
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:209:hardcoded string:        if (["local", "development"].includes(env)) {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:210:hardcoded array:            customerDetails.alternateMobileNo = [];
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:211:hardcoded object:            customerDetails.alternateMobileNo.push({ mobile: altContactNo });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:213:hardcoded string:        const parentMobileNo = get(customerDetails, 'parentMobileNo', '');
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:214:hardcoded object:        customerDetails.studentMobileNo = `${parentCountryCode}-${parentMobileNo}`
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:215:hardcoded object:        customerDetails.parentMobileNo = `${parentCountryCode}-${parentMobileNo}`
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:216:hardcoded string:        leadDetails["loggedInEmailId"] = get(authDetails, 'loggedInEmailId');
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:217:hardcoded string:        leadDetails["createdByEmailId"] = get(authDetails, "createdByEmailId", "");
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:218:hardcoded string:        leadDetails["leadCreatedAt"] = get(authDetails, "leadCreatedAt", "");
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:219:hardcoded string:        leadDetails["createdByRole"] = get(authDetails, "createdByRole", "");
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:220:hardcoded string:        leadDetails["orderPunchedByRole"] = get(authDetails.user, 'role', "");
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:221:hardcoded string:        const quotationId = get(selectedQuotation, "quotationId", "");
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:222:hardcoded string:        const customerId = get(selectedQuotation, "customerId", "");
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:223:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:231:hardcoded string:            loggedInUserDetails: get(authDetails, 'user', {}),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:235:hardcoded object:        this.setState({ loading: true, error: null });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:237:hardcoded string:            url: '/api/crp/saveSalesAndCustomerDetails',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:238:hardcoded string:            method: 'POST',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:241:hardcoded string:            const { identifier, salesDetails, customerDetails } = get(response, 'data');
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:244:hardcoded object:            this.setState({ loading: false });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:247:hardcoded object:            const { errors, duplicateReasonRequired, lockedErrors } = error;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:250:hardcoded string:                errors["msg"] = "Please provide duplicate reason and proceed."
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:270:hardcoded object:        this.setState({ showCashbackConfirmationModal: isConfirmed });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:277:hardcoded object:        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:278:hardcoded object:        this.setState({ loading: true, error: null });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:280:hardcoded variable:            const response = await CallApi({
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:281:hardcoded string:                url: '/api/cashback/getCashbackDetails',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:282:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:283:hardcoded object:                body: { identifier }
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:285:hardcoded string:            const cashbacks = get(response, 'data', []);
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:286:hardcoded number:            if (cashbacks.length === 0) {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:289:hardcoded object:                this.setState({ cashbacks, showCashbackConfirmationModal: true, loading: false });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:292:hardcoded object:            this.setState({ loading: false, error });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:297:hardcoded variable:        const details = await this.validateForms();
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:298:hardcoded variable:        let uploadedFile = this.getAttachments();
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:300:hardcoded object:            let { customerDetails } = details
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:301:hardcoded object:            let { parentMobileNo } = customerDetails
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:302:hardcoded string:            if (parentMobileNo.includes("-") || parentMobileNo.includes(".")) {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:304:hardcoded string:                    error: "Primary Contact No should not contain any special character."
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:309:hardcoded variable:                const isSuccess = await this.storeDetailsInDb(details);
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:319:hardcoded object:        const { photo } = this.refs;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:320:hardcoded variable:        const uploadPhotoValue = photo && photo.getUploadedFiles();
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:322:hardcoded variable:            const attachments = uploadPhotoValue;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:326:hardcoded object:            this.setState({ uploadError: `Please upload student's Photo.` });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:332:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:333:hardcoded string:        let url = `/product${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:338:hardcoded string:        const accountType = get(this.props, 'authDetails.accountType', '');
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:339:hardcoded array:        const accountMapArray = get(accountMap, accountType, []);
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:340:hardcoded object:        const { directSalesPersons, appointedSalesPersons, salesDetails, salesPersonLoading } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:341:hardcoded object:        const {authDetails} = this.props;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:342:hardcoded object:        const { loggedInEmailId } = authDetails;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:343:hardcoded string:        const { role } = get(authDetails, "user", "");
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:344:hardcoded variable:        const isRoleBda = USER_ROLES_TO_FREEZE_SALESDONEBY.includes(role);
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:346:hardcoded variable:        let fields = [
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:348:hardcoded string:                type: 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:349:hardcoded string:                name: 'typeOfSales',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:350:hardcoded string:                value: get(salesDetails, 'typeOfSales')
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:352:hardcoded string:                type: accountMapArray.includes("directSalesBy") ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:353:hardcoded string:                name: 'directSalesBy',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:354:hardcoded string:                label: 'Sales Done By',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:357:hardcoded string:                value: isRoleBda ? loggedInEmailId : get(salesDetails, 'directSalesBy'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:358:hardcoded number:                onSearch: debounce(this.onSearchUser, 1000),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:364:hardcoded string:            // accountMapArray.includes("salesAppointmentBy") ? {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:365:hardcoded string:            //     type: accountMapArray.includes("salesAppointmentBy") ? 'select' : 'hidden',//accountType == "calling" ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:366:hardcoded string:            //     name: 'salesAppointmentBy',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:367:hardcoded string:            //     label: 'Sales Appointment By',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:368:hardcoded string:            //     required: accountMapArray.includes("salesAppointmentBy") ? true : false,
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:370:hardcoded string:            //     value: get(salesDetails, 'salesAppointmentBy'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:371:hardcoded string:            //     onSearch: ((text) => this.onSearchUser('salesAppointmentBy', text)),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:383:hardcoded array:        let rule = []
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:384:hardcoded string:        if (countryCode === '+91') {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:386:hardcoded number:                pattern: new RegExp(/^(\+\d{1,3}[- ]?)?\d{10}$/), message: `Enter 10 digit valid Mobile No`
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:395:hardcoded string:        const { orderPunchingType = "" } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:396:hardcoded string:        const parentMob = get(customerDetails, 'parentMobileNo', '');
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:397:hardcoded string:        const userPermissions = get(this.props, "authDetails.user.permissions", [])
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:398:hardcoded variable:        const isPrivilegedUser = userPermissions.includes(leadquaredRelatedPermissions.allownMultipleOrderOnSameProspectId);
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:399:hardcoded variable:        const fields = [{
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:400:hardcoded string:            type: 'text',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:401:hardcoded string:            name: 'parentName',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:402:hardcoded string:            label: 'Parent Name',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:404:hardcoded string:            value: get(customerDetails, 'parentName'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:406:hardcoded array:                pattern: new RegExp(/^[a-zA-Z\s\.]+$/), message: `Enter valid name`
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:408:hardcoded number:                max: 80,
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:409:hardcoded number:                message: `Parent Name cannot be more than 80 characters long`
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:412:hardcoded string:            type: 'text',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:413:hardcoded string:            name: 'studentName',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:414:hardcoded string:            label: 'Student Name',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:416:hardcoded string:            value: get(customerDetails, 'studentName'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:418:hardcoded array:                pattern: new RegExp(/^[a-zA-Z\s\.]+$/), message: `Enter valid name`
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:420:hardcoded number:                max: 80,
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:421:hardcoded number:                message: `Student Name cannot be more than 80 characters long`
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:424:hardcoded string:            type: 'inputgroup',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:425:hardcoded string:            name: 'parentMobileGroup',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:426:hardcoded string:            label: 'Primary Contact No.',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:427:hardcoded number:            gutter: 1,
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:428:hardcoded string:            // help: isPrimaryNumberMisMatched ? `Since this primary contact number is different from lead mobile number, Order Verification link and OTP will be sent on ${studentMob}` : "",
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:431:hardcoded string:                    type: 'select',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:432:hardcoded string:                    name: 'parentCountryCode',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:434:hardcoded string:                    message: "Please enter country code",
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:438:hardcoded number:                    span: 10,
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:439:hardcoded string:                    value: get(customerDetails, 'parentCountryCode'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:442:hardcoded string:                    type: 'maskedMobile',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:443:hardcoded string:                    name: 'parentMobileNo',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:445:hardcoded string:                    message: "Please enter Contact No.",
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:447:hardcoded number:                    span: 14,
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:456:hardcoded string:            type: 'maskedMail',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:457:hardcoded string:            name: 'email',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:458:hardcoded string:            label: 'Email ID',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:460:hardcoded string:            value: get(customerDetails, 'email'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:462:hardcoded string:                type: 'email', message: 'Enter valid Email',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:464:hardcoded number:                pattern: new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i), message: `Enter valid email`
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:467:hardcoded string:                transform: (value) => value.replace(/\s/g, '')
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:471:hardcoded string:            type: (duplicateReasonRequired || get(customerDetails, 'duplicateReason')) ? 'textarea' : 'hidden',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:472:hardcoded string:            name: 'duplicateReason',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:473:hardcoded string:            label: 'Reason',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:474:hardcoded string:            value: get(customerDetails, 'duplicateReason'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:475:hardcoded string:            required: duplicateReasonRequired || get(customerDetails, 'duplicateReason'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:477:hardcoded string:                type: "string",
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:478:hardcoded string:                "min": 70,
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:480:hardcoded string:                    return value ? value.trim() : '';
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:484:hardcoded string:            helpText: (70 - duplicateReasonLength) > 0 ? `${70 - duplicateReasonLength} characters remaining.` : ''
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:491:hardcoded array:            [name]: value
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:496:hardcoded array:        this.setState({ [name]: value });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:500:hardcoded object:        const { leadUserDetails = {} } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:501:hardcoded object:        const { leadDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:502:hardcoded string:        let studentMob = get(leadDetails, "studentMobile", "").split(",")[0];
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:503:hardcoded string:        studentMob = studentMob.split(",")[0];
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:504:hardcoded string:        studentMob = studentMob.split("-");
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:505:hardcoded number:        studentMob = studentMob.length > 1 ? studentMob[1] : studentMob[0];
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:506:hardcoded string:        const { avpEmailId = "" } = leadUserDetails;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:508:hardcoded string:        if ((!parentMobileNo || studentMob != parentMobileNo) && (get(leadUserDetails, "role", "") === "bdt" || eligibleAvpEmailIdsForSCN.includes(avpEmailId))) {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:509:hardcoded object:            this.setState({ isPrimaryNumberMisMatched: true })
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:511:hardcoded object:            this.setState({ isPrimaryNumberMisMatched: false })
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:517:hardcoded object:        this.setState({ duplicateReasonLength: value.length });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:521:hardcoded array:        this.setState({ [name]: value });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:526:hardcoded string:            <Select defaultValue="+91" style={{ width: '5%' }}>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:527:hardcoded string:                <SelectOption value="+91">+91</SelectOption>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:533:hardcoded object:        this.setState({ loading: true, error: null });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:535:hardcoded string:            url: '/api/details/getOrderDeatils',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:536:hardcoded string:            method: 'POST',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:537:hardcoded object:            body: { orderId, studentMobile }
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:539:hardcoded array:            const orders = response.data || [];
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:541:hardcoded number:            this.setState({ orderDetails: orders[0], loading: false, error: null });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:543:hardcoded number:            if (orders[0]) {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:544:hardcoded number:                const { customerDetails } = orders[0];
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:546:hardcoded variable:                const salesDetails = {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:547:hardcoded string:                    directSalesBy: retentionDefaultUser["user"],
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:548:hardcoded string:                    directSalesById: retentionDefaultUser["userId"]
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:550:hardcoded variable:                const customerData = {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:551:hardcoded string:                    studentName: get(customerDetails[0], 'studentName'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:552:hardcoded string:                    parentName: get(customerDetails[0], 'parentName'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:553:hardcoded string:                    parentCountryCode: get(customerDetails[0], '+91'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:554:hardcoded string:                    parentMobileNo: get(customerDetails[0], 'parentMobile'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:555:hardcoded string:                    email: get(customerDetails[0], 'parentEmail')
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:557:hardcoded variable:                const addressDetails = {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:558:hardcoded string:                    address: get(customerDetails[0], 'address'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:559:hardcoded string:                    country: get(customerDetails[0], 'country'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:560:hardcoded string:                    state: get(customerDetails[0], 'state'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:561:hardcoded string:                    city: get(customerDetails[0], 'city'),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:562:hardcoded string:                    zipcode: get(customerDetails[0], 'zipCode')
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:568:hardcoded object:            this.setState({ loading: false, error });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:574:hardcoded object:            this.setState({ loading: true });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:578:hardcoded string:                    method: 'POST',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:580:hardcoded string:                        identifiers: lockedErrors.map(ele => get(ele, 'identifier'))
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:583:hardcoded object:                this.setState({ lockedErrors: null, loading: false, error: null });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:586:hardcoded object:                this.setState({ error, loading: false });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:593:hardcoded object:            this.setState({ loading: true });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:597:hardcoded string:                    method: 'POST',
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:599:hardcoded string:                        identifiers: lockedErrors.map(ele => get(ele, 'identifier'))
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:602:hardcoded object:                this.setState({ lockedErrors: null, loading: false, error: null });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:605:hardcoded object:                this.setState({ error, loading: false });
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:610:hardcoded array:    getLockedErrorBody = (lockedErrors = []) => {
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:611:hardcoded number:        window.scrollTo(0, 0);
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:616:hardcoded object:                        <Fragment key={index}>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:617:hardcoded string:                            <p>System has found an incomplete order with cashback associated with mobile number: {get(errorBody, 'mobileNo')} </p>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:619:hardcoded string:                                Click to Continue With Incomplete Order:{" "}<a style={{ textDecoration: "none" }}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:620:hardcoded string:                                    href={`https://run.leadsquared.com/LeadManagement/LeadDetails?LeadID=${get(errorBody, 'prospectId')}`}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:621:hardcoded string:                                    target="_blank"
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:622:hardcoded string:                                >https://run.leadsquared.com/LeadManagement/LeadDetails?LeadID={get(errorBody, 'prospectId')}</a>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:625:hardcoded string:                                <Button type="danger" onClick={() => this.clearAllCashbacksLinkedDraftOrders(lockedErrors)}>Discard Incomplete Order(s)</Button>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:635:hardcoded object:        const { authDetails = {} } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:636:hardcoded array:        const { directSalesPersons = [] } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:637:hardcoded string:        const userRole = get(authDetails.user, 'role', "");
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:638:hardcoded object:        let salesDetails = {};
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:641:hardcoded string:            const { label = "", value = "" } = get(directSalesPersons, "0", {});
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:642:hardcoded string:            salesDetails["directSalesBy"] = label;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:643:hardcoded string:            salesDetails["directSalesById"] = value;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:654:hardcoded object:        let { salesDetails = {}, customerDetails = {}, leadDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:666:hardcoded object:        let { salesDetails = {}, customerDetails = {}, leadDetails, orderPunchingType, authDetails, identifier, selectedQuotation } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:667:hardcoded object:        let customerContactDetails = {};
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:669:hardcoded string:        let { orderId, studentMobile = '' } = leadDetails;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:670:hardcoded string:        studentMobile = studentMobile.split(',')[0];
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:673:hardcoded variable:        const data = getSalesCustomerDetails(selectedQuotation, customerDetails);
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:674:hardcoded string:        const role = get(authDetails, 'user.role', '');
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:677:hardcoded string:            typeOfSales: get(selectedQuotation, 'type_of_sales', "DSSales"),
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:678:hardcoded string:            ...get(data, "salesDetails", {})
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:681:hardcoded string:            ...get(data, "customerData", {})
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:683:hardcoded string:        customerContactDetails["parentCountryCode"] = get(get(data, "customerData", {}), "parentCountryCode", "");
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:703:hardcoded object:        const { authDetails, leadDetails, orderPunchingType, identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:704:hardcoded object:        const { loading, error, customerDetails, salesDetails, cashbacks, orderDetails, showCashbackConfirmationModal, lockedErrors, leadUserDetails, uploadError, salesDoneByUser } = this.state;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:705:hardcoded string:        const userPermissions = get(this.props, "authDetails.user.permissions", [])
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:706:hardcoded variable:        const salesPersonfields = this.getSalesFormFields();
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:707:hardcoded variable:        const customerFormFields = this.getCustomerFormFields();
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:708:hardcoded string:        const studentMob = get(leadDetails, "studentMobile", "").split(",")[0];
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:709:hardcoded string:        const role = get(authDetails, 'user.role', '');
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:710:hardcoded variable:        const isPrivilegedUser = userPermissions.includes(leadquaredRelatedPermissions.allownMultipleOrderOnSameProspectId);
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:711:hardcoded string:        const parentMob = get(customerDetails, 'parentMobileNo', '');
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:714:hardcoded string:            salesDetails["directSalesBy"] = salesDoneByUser?.label;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:715:hardcoded string:            salesDetails["directSalesById"] = salesDoneByUser?.value;
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:721:hardcoded string:                    step="sales"
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:722:hardcoded object:                    onClickNextBtn={this.onClickNextBtn}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:723:hardcoded object:                    loading={loading}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:724:hardcoded object:                    error={error}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:725:hardcoded object:                    orderPunchingType={orderPunchingType}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:728:hardcoded object:                        errorBody={this.getLockedErrorBody(lockedErrors)}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:731:hardcoded object:                        message={`Order Found!`}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:732:hardcoded string:                        description={`Order#${get(orderDetails, 'orderId')} - ${get(orderDetails, 'orderhiveOrderStatus', '')} is found !`}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:735:hardcoded string:                        <Col md={6} className="pr-0">
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:736:hardcoded string:                            <div className="card m-2" style={{ height: "100%" }}>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:737:hardcoded string:                                <div className='card-header bg-aakash text-white'> Sales Person Details </div>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:739:hardcoded object:                                    fields={salesPersonfields}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:740:hardcoded object:                                    wrappedComponentRef={(inst) => this.salesDetailsForm = inst}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:741:hardcoded object:                                    initialValues={salesDetails}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:743:hardcoded string:                                <div style={{ marginTop: "8%" }}>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:745:hardcoded string:                                        message={"Lead Details: "}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:748:hardcoded string:                                                <p>Lead Mobile Number:  <Masked isSuperUser={isPrivilegedUser} type="mobile">{studentMob}</Masked></p>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:749:hardcoded string:                                                <p>Lead Created By: {get(authDetails, "createdByEmailId", "")}</p>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:750:hardcoded string:                                                {get(leadUserDetails, "isValidated", false) && get(leadUserDetails, "message", "") && <p>{get(leadUserDetails, "message", "")}</p>}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:751:hardcoded string:                                                {!get(leadUserDetails, "isValidated", false) && <p style={{ color: "Red", marginTop: "2%" }}>{get(leadUserDetails, "message", "")}</p>}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:752:hardcoded string:                                                {get(leadUserDetails, "role", "") === "bdt" && <p style={{ color: "Red", marginTop: "2%" }}>Only sales that are done using the leads allotted to you during your training program will be considered for final evaluation.</p>}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:753:hardcoded string:                                                {get(leadUserDetails, "role", "") != "bdt" && <p style={{ color: "Red", marginTop: "2%" }}>Order Verification will happen on Lead Mobile Number. Please ensure you are punching the order on the correct lead.</p>}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:761:hardcoded string:                        <Col md={6} className="pl-0">
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:762:hardcoded string:                            <div className="card m-2" style={{ height: "100%" }}>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:763:hardcoded string:                                <div className='card-header bg-aakash text-white'> Customer Details </div>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:770:hardcoded string:                                    type="warning"
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:773:hardcoded object:                                    fields={customerFormFields}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:774:hardcoded object:                                    wrappedComponentRef={(inst) => this.customerDetailsForm = inst}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:775:hardcoded object:                                    initialValues={{...customerDetails, parentMobileNo: parentMob}}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:778:hardcoded number:                                <div className={`card border-0`} style={{ margin: 4 }}>
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:779:hardcoded string:                                    {uploadError && <div style={{ color: 'red', margin: '2%' }}>{uploadError}</div>}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:780:hardcoded string:                                    {/* <span style={{ "color": "red","margin-top" :"20px","position" :"absolute" ,"margin-left":"14px","display":"inline-block","font-size":"14px","font-family": "SimSun, sans-serif"}}>*</span> */}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:783:hardcoded string:                                            name: "photo",
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:784:hardcoded string:                                            label: <span style={{ "margin-right": "4px", "margin-right": "-1px" }}><span style={{ "color": "red", "margin-right": "2px", "font-size": "14px", "font-family": "SimSun, sans-serif" }}>*</span> Student Photo </span>,
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:785:hardcoded number:                                            count: 1,
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:786:hardcoded string:                                            accept: ".jpeg,.jpg,.png,.pdf"
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:788:hardcoded object:                                        identifier={identifier}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:789:hardcoded string:                                        ref="photo"
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:790:hardcoded object:                                        initialValue={customerDetails.attachments}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:798:hardcoded object:                            onClickConfirm={() => this.onCashbackConfirmation(true)}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:799:hardcoded object:                            onClickCancel={() => this.onCashbackConfirmation(false)}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:800:hardcoded object:                            visible={showCashbackConfirmationModal}
microservices-middleware/client/src/modules/ordertype/aakashorders/AakashSalesCustomerPage.js:801:hardcoded object:                            cashbacks={cashbacks}
