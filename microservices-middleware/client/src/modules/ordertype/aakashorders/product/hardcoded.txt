microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:7:hardcoded variable:	const AakashPriceSummary = (props) => {
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:8:hardcoded object:	    let { aakashPriceBreakup = {}, scholarshipDetails, acstGiven, finalPrice } = props;
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:9:hardcoded string:	    let { maxPrice = "", bnatPercentage = "", discountType, tabletPrice } = aakashPriceBreakup
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:11:hardcoded variable:	    const columns = [{
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:12:hardcoded string:	        title: 'Registration Fee',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:13:hardcoded string:	        dataIndex: 'registrationFee',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:14:hardcoded string:	        key: 'registrationFee '
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:16:hardcoded string:	        title: 'Admission Fee',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:17:hardcoded string:	        dataIndex: 'admissionFee',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:18:hardcoded string:	        key: 'admissionFee',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:20:hardcoded string:	        title: 'Tech and Exam Fee',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:21:hardcoded string:	        dataIndex: 'techAndExamFee',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:22:hardcoded string:	        key: 'techAndExamFee'
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:24:hardcoded string:	        title: 'Classroom Fee*',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:25:hardcoded string:	        dataIndex: 'classroomFee',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:26:hardcoded string:	        key: 'classroomFee'
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:28:hardcoded string:	        title: 'Tuition Fee*',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:29:hardcoded string:	        dataIndex: 'tuitionFee',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:30:hardcoded string:	        key: 'tuitionFee'
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:32:hardcoded string:	        title: 'Net Amount',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:34:hardcoded string:	        key: 'netAmount',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:35:hardcoded string:	        render: (value, index) => { return currencyFormatter(finalPrice, "INR") }
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:38:hardcoded variable:	    const scholarhipColumns = [{
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:39:hardcoded string:	        title: 'Category',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:40:hardcoded string:	        dataIndex: 'category',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:41:hardcoded string:	        key: 'category '
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:42:hardcoded string:	    }, { title: 'Based On', dataIndex: '', key: 'category', render: (value, index) => getBasedOnText(value, index) }, , {
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:43:hardcoded string:	        title: 'Scholarship %',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:44:hardcoded string:	        render: (value, index) => { return value.amount ? value.amount : value['value'] + " %" },
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:45:hardcoded string:	        key: 'amount'
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:48:hardcoded variable:	    const SpecialScholarhipColumns = [{
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:49:hardcoded string:	        title: 'Category',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:50:hardcoded string:	        dataIndex: 'category',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:51:hardcoded string:	        key: 'category '
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:53:hardcoded string:	    { title: 'Based On', dataIndex: '', key: 'basesdOn', render: (value, index) => getBasedOnText(value, index) },
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:55:hardcoded string:	        title: 'Scholarship',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:56:hardcoded string:	        dataIndex: '',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:57:hardcoded string:	        key: 'value',
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:58:hardcoded string:	        render: (value, index) => { return (value.amount || value.totalAmount) ? (value.amount || value.totalAmount) : value['value'] + " %" },
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:61:hardcoded variable:	    const getBasedOnText = (record) => {
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:63:hardcoded object:	        let { basedOn } = record;
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:70:hardcoded string:	                type="info"
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:71:hardcoded string:	                message=""
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:74:hardcoded object:	                        <strong>{`Course Price of the Product : `}</strong>{maxPrice}<br />
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:75:hardcoded object:	                        <strong>{`Tablet Price : `}</strong>{tabletPrice}<br />
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:76:hardcoded object:	                        {/* <strong>{`Total Scholarship % : `}</strong>{bnatPercentage}<br></br>
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:77:hardcoded object:	                        <strong>{`Scholarship Amount : `}</strong>{bnatPercentage} */}
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:79:hardcoded object:	                            pagination={false}
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:80:hardcoded string:	                            columns={(acstGiven === "no" || acstGiven === "bnat") ? SpecialScholarhipColumns : scholarhipColumns}
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:81:hardcoded string:	                            size="small"
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:82:hardcoded object:	                            bordered={true}
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:83:hardcoded object:	                            dataSource={scholarshipDetails.scholarships}
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:84:hardcoded string:	                            style={{ whiteSpace: 'pre' }}
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:87:hardcoded object:	                            pagination={false}
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:88:hardcoded object:	                            columns={columns}
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:89:hardcoded string:	                            size="small"
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:90:hardcoded object:	                            bordered={true}
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:91:hardcoded array:	                            dataSource={[aakashPriceBreakup]}
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:92:hardcoded string:	                        // style={{ padding: '3%', overflowY: 'auto', height: '450px' }}
microservices-middleware/client/src/modules/ordertype/aakashorders/product/aakashPriceSummary.js:94:hardcoded number:	                        <li>Security Fee of INR 5000 to be collected at the center and refundable after the course completion by the center. (Not Included in this Fee Structure).</li>
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:3:hardcoded variable:	export const filterAakashInitialClass = (detail) => {
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:4:hardcoded object:	    let { classes, integratedBatch } = detail
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:5:hardcoded variable:	    let filteredClass = classes;
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:7:hardcoded number:	    // removed non eligible grades(11+12, 12, 12th Pass)
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:8:hardcoded string:	    let eligibleGrade = ["11", "12", "12+"]
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:9:hardcoded string:	    filteredClass = filteredClass.filter(classObj => eligibleGrade.includes(get(classObj, 'value', '')));
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:12:hardcoded string:	        filteredClass = filteredClass.filter(classObj => get(classObj, 'value', '') != "12+");
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:17:hardcoded variable:	export const filterAakashFinalClass = (detail) => {
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:18:hardcoded object:	    let { classes, initialClass } = detail;
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:19:hardcoded array:	    let filteredClass = [];
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:21:hardcoded string:	    if (["11", 11, "12", 12].includes(initialClass)) {
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:22:hardcoded string:	        filteredClass = classes.filter(classObj => get(classObj, 'value', '') == "12");
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:23:hardcoded string:	    } else if (["12+"].includes(initialClass)) {
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:24:hardcoded string:	        filteredClass = classes.filter(classObj => get(classObj, 'value', '') == "12+");
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:29:hardcoded variable:	export const branchBasedSubCourse = (detail) => {
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:30:hardcoded object:	    let { branch, selectedBranch, subCourseOptions } = detail;
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:31:hardcoded array:	    let applicableCourse = []
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:34:hardcoded string:	        applicableCourse = branch.filter(classObj => get(classObj, 'value', '') == selectedBranch && get(classObj, 'applicableCourseList', ''));
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:36:hardcoded number:	            applicableCourse = applicableCourse[0]
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:37:hardcoded string:	            subCourseOptions = subCourseOptions.filter(option =>  get(applicableCourse, 'applicableCourseList', []).includes(option.value))
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:44:hardcoded variable:	export const getStates = (crpBranches) => {
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:45:hardcoded variable:	    let states = crpBranches.map((branch) => (branch.state))
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:46:hardcoded array:	    states = [...new Set(states)].map(state => {return {label: state, value:state}})
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:50:hardcoded variable:	export const getCities = (crpBranches, state) => {
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:51:hardcoded variable:	    let cities = crpBranches.filter(branch => branch.state == state)
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:52:hardcoded array:	    cities = [... new Set(cities.map(city => city.city))]
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:53:hardcoded object:	    cities = cities.map(city => {return {label: city, value: city}})
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:57:hardcoded variable:	export const getBranches = (crpBranches, city) => {
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:58:hardcoded variable:	    let branches = crpBranches.filter(branch => branch.city == city)
microservices-middleware/client/src/modules/ordertype/aakashorders/product/AakashProductHelper.js:60:hardcoded object:	    branches = branches.map(branch => {return {label: branch, value: branch}})
