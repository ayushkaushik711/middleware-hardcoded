microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:5:hardcoded variable:	export const filterFinalClass = (productDetails) => {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:6:hardcoded string:	    let { classes, selectedInitialClass = '' } = productDetails
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:7:hardcoded variable:	    let filteredClass = classes;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:8:hardcoded number:	    let maxClass = parseInt(selectedInitialClass, 10) + 3;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:10:hardcoded string:	    if (["9", "10"].includes(selectedInitialClass.toString())) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:11:hardcoded string:	        maxClass = "12";
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:15:hardcoded string:	        const classValue = get(classObj, 'value', '');
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:16:hardcoded variable:	        const isClassAllowed = (Number(classValue) >= Number(selectedInitialClass) && Number(classValue) <= Number(maxClass))
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:17:hardcoded string:	        return (["11+12", "11"].indexOf(classValue) < 0 && isClassAllowed);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:23:hardcoded string:	export const filterTLPFinalClass = ({classes = [], selectedInitialClass = "", selectedFinalClass = "" }) => {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:24:hardcoded variable:	    let filteredClasses = classes.filter(ele => parseInt(ele.value) >= selectedFinalClass)
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:26:hardcoded number:	    let maxClass = parseInt(selectedFinalClass) + 3;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:27:hardcoded number:	    if (selectedInitialClass === 4) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:28:hardcoded string:	        maxClass = "8"
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:29:hardcoded number:	    } else if (selectedInitialClass === 6) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:30:hardcoded string:	        maxClass = "10";
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:31:hardcoded string:	    } else if (["9", "10"].includes(selectedInitialClass.toString()) ||
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:32:hardcoded string:	        ["9", "10"].includes(selectedFinalClass.toString())) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:33:hardcoded string:	        maxClass = "12";
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:37:hardcoded string:	        const classValue = get(classObj, 'value', '');
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:38:hardcoded variable:	        const isClassAllowed = (Number(classValue) > Number(selectedFinalClass) && Number(classValue) <= Number(maxClass))
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:39:hardcoded string:	        return (["11+12", "11"].indexOf(classValue) < 0 && isClassAllowed);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:45:hardcoded variable:	export const filterBoards = (productDetail) => {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:46:hardcoded object:	    let { boards, tlpOrderData, formNumber } = productDetail
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:47:hardcoded number:	    if (parseInt(formNumber, 10) === 1) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:48:hardcoded string:	        let board = get(tlpOrderData, "customerDetails", [])[0].productInfo[0].board;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:49:hardcoded string:	        boards = boards.filter(ele => get(ele, "value", "") === board);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:54:hardcoded variable:	export const filterStateBoards = (productDetail) => {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:55:hardcoded array:	    let { state = [], tlpOrderData, formNumber } = productDetail;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:56:hardcoded number:	    if (parseInt(formNumber, 10) === 1) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:57:hardcoded string:	        let selectedState = get(tlpOrderData, "customerDetails", [])[0].productInfo[0].state;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:58:hardcoded string:	        state = state.filter(ele => get(ele, "value", "") === selectedState);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:63:hardcoded variable:	const getPriviledUserValidity = (allowedCurrentYearValidity) => {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:64:hardcoded variable:	    let currentYear = getCurrentAcademicYear();
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:65:hardcoded number:	    let updatedYear = allowedCurrentYearValidity ? currentYear + 2 : currentYear + 1;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:66:hardcoded number:	    const validityUpto = updatedYear + 10; // Validity upto 2030 for priviled user
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:67:hardcoded array:	    const validity = []
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:79:hardcoded variable:	export const getFormattedValidity = (productDetails) => {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:80:hardcoded object:	    let { validity, user, productCombination, initialClass, finalClass, authDetails = {} } = productDetails;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:81:hardcoded array:	    let formattedValidity = [];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:82:hardcoded string:	    const permissions = get(user, "permissions", []);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:83:hardcoded variable:	    let currentAcademicYr = getCurrentAcademicYear();
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:85:hardcoded object:	    const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:86:hardcoded string:	    const allowedCurrentYearValidity = initialClass == finalClass || finalClass == "" ? true : false;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:88:hardcoded number:	    if (permissions.indexOf(productPermissions.ignoreValidityCheck) >= 0) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:93:hardcoded object:	            let { label, value } = entry;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:94:hardcoded variable:	            let currentYear = currentAcademicYr;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:95:hardcoded number:	            let updatedYear = currentYear + 2;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:96:hardcoded string:	            label = label.includes('x') ? eval(label.replace('x', updatedYear)) : label;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:97:hardcoded string:	            value = value.includes('x') ? eval(value.replace('x', updatedYear)) : value;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:106:hardcoded string:	    if (productCombination && productCombination.indexOf("byjus_classes") >= 0) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:109:hardcoded number:	                label: currentAcademicYr + 2,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:110:hardcoded number:	                value: currentAcademicYr + 2 }]
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:114:hardcoded string:	    formattedValidity = formattedValidity.filter(validity => validity.value != "TRIAL_PACK");
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:118:hardcoded object:	export const validateProfileSelection = (productDetails = {}) => {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:119:hardcoded variable:	    let result = true
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:120:hardcoded string:	    const { userProfile = "" } = productDetails;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductHelper.js:121:hardcoded object:	    if (!userProfile) { result = false };
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:11:hardcoded number:	    isK12Class, getClasses,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:12:hardcoded number:	    isK3orPreKClass, getK3orPreKTablets, getTablets, getProfileDetails,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:14:hardcoded string:	} from 'modules/product/components/productHelper';
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:29:hardcoded string:	import './style.scss';
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:31:hardcoded variable:	const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:32:hardcoded string:	    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:33:hardcoded string:	    tlpOrderData: get(state, 'auth.tlpOrderData'),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:34:hardcoded string:	    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:35:hardcoded string:	    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:36:hardcoded string:	    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:37:hardcoded string:	    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:38:hardcoded string:	    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:39:hardcoded string:	    leadDetails: get(state, 'auth.leadDetails', {}),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:40:hardcoded string:	    authDetails: get(state, 'auth.details', {}),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:41:hardcoded string:	    orderPunchingType: get(state, 'auth.orderPunchingType')
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:44:hardcoded variable:	const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:75:hardcoded array:	            eligibleCustomers: [],
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:77:hardcoded object:	            productConfig: {},
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:78:hardcoded array:	            fields: [],
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:83:hardcoded number:	            isD4Available: false,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:84:hardcoded string:	            classType: "neo",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:85:hardcoded number:	            isV4Batch: true
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:90:hardcoded object:	        let { productDetails, byjusClassesFormValue, schoolAndProficiencyDetails } = details
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:96:hardcoded string:	            doubtClassDetails: get(byjusClassesFormValue, "formValue.selectedDoubtClass", null),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:97:hardcoded string:	            electiveDetails: get(byjusClassesFormValue, "formValue.electivesDetails", null),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:98:hardcoded string:	            languageOfInstruction: get(byjusClassesFormValue, "formValue.languageOfInstruction", null),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:99:hardcoded string:	            languageOfInstructionId: get(byjusClassesFormValue, "formValue.languageOfInstructionId", null)
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:106:hardcoded object:	        let { leadDetails = {}, authDetails = {}, identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:107:hardcoded object:	        let { course, formCountArray, productType } = this.state;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:108:hardcoded array:	        let updatedStudentDetails = [], bhlpCourseDetails = [], byjusClassesMentoringDetails = []
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:109:hardcoded string:	        let productCombination = '';
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:110:hardcoded number:	        for (var i = 0; i < formCountArray.length; i++) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:111:hardcoded array:	            const isRenewal = get(this.state, `isRenewed-${formCountArray[i]}`);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:113:hardcoded array:	                const form = this.refs[`productDetailsForm-${formCountArray[i]}`];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:114:hardcoded array:	                const byjusClassesMentoringForm = this.refs[`byjusClassesDetailsForm-${formCountArray[i]}`];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:115:hardcoded array:	                const proficiencyForm = this.refs[`proficiencyForm-${formCountArray[i]}`];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:116:hardcoded array:	                const schoolForm = this.refs[`schoolForm-${formCountArray[i]}`]
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:118:hardcoded object:	                const details = await form.getProductDetails() || {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:119:hardcoded string:	                let productDetails = get(details, 'productDetails') || {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:120:hardcoded object:	                if (isEmpty(productDetails)) { return }
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:122:hardcoded array:	                    const tablet = get(this.state, `tablet-${formCountArray[i]}`, null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:123:hardcoded number:	                    const isD4Tablet = tablet && D4_TABLET_LIST.includes(tablet) ? true : false;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:126:hardcoded number:	                        selectD4SDCard: tablet ? isD4Tablet : get(this.state, `existingD4Order-${formCountArray[i]}`), //logic to pic d4 if learnstation selected or if existing order has d4 OR if non-learnstation tablet is selected then no d4
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:130:hardcoded array:	                        tabletId: this.state[`tabletId-${formCountArray[i]}`]
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:133:hardcoded array:	                productCombination = get(this.state, `productCombination-${formCountArray[i]}`);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:134:hardcoded variable:	                const byjusClassesFormValue = byjusClassesMentoringForm && await byjusClassesMentoringForm.getMentoringValues();
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:135:hardcoded variable:	                const studentMarksDetails = proficiencyForm && await proficiencyForm.getStudentAcademicDetails();
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:136:hardcoded variable:	                const schoolAndProficiencyDetails = schoolForm && await schoolForm.getSchoolDetails()
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:139:hardcoded variable:	                    const response = validateByjusClassesMentoringDetails(byjusClassesFormValue, productDetails);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:140:hardcoded string:	                    byjusClassesMentoringDetails = get(response, "byjusClassesMentoringDetails", []);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:141:hardcoded string:	                    bhlpCourseDetails = get(response, "bhlpCourseDetails", []);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:147:hardcoded string:	                if (productCombination === "byjus_classes") {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:148:hardcoded object:	                    productDetails = this.getUpdatedProductDetails({ productDetails, studentMarksDetails, byjusClassesFormValue, schoolAndProficiencyDetails })
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:158:hardcoded string:	        leadDetails["orderPunchedByRole"] = get(authDetails.user, 'role', "");
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:159:hardcoded number:	        if (updatedStudentDetails.length > 1) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:161:hardcoded string:	            productType = "sibling"
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:163:hardcoded string:	            const { initialClass, finalClass, tlpFinalGrade = '' } = updatedStudentDetails[0]
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:164:hardcoded string:	            productType = (initialClass === finalClass) && !tlpFinalGrade ? "single" : "combo"
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:168:hardcoded variable:	            const payload = {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:176:hardcoded number:	                isV4Batch: this.state.isV4Batch || true
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:180:hardcoded object:	                url: `/api/neo/product/${productType}`
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:186:hardcoded object:	        const { tlpOrderData, identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:187:hardcoded string:	        const orderPunchingType = "renewal";
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:188:hardcoded array:	        const { students = [] } = productDetails;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:189:hardcoded array:	        let productCombinationArray = []
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:191:hardcoded string:	        productDetails["productCombination"] = productCombinationArray.includes('byjus_classes') ? 'byjus_classes' : 'byjus_tlp';
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:193:hardcoded variable:	        const payload = {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:204:hardcoded string:	                url: '/api/product/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:205:hardcoded string:	                method: 'POST',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:208:hardcoded string:	                const { productDetails, identifier, salesDetails, customerDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:213:hardcoded object:	                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:215:hardcoded string:	                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:217:hardcoded object:	                this.setState({ error });
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:224:hardcoded object:	        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:225:hardcoded string:	        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:230:hardcoded object:	        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:233:hardcoded object:	            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:235:hardcoded string:	                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:239:hardcoded string:	                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:242:hardcoded string:	                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:243:hardcoded object:	                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:249:hardcoded string:	        const aakashBatchesGrades = ['11', '13'] 
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:252:hardcoded string:	                { label: 'Aakash SD Card', value: 'AAKASH_SD_CARD' },
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:253:hardcoded string:	                { label: "Aakash Byjus Live", value: 'AAKASH_LIVE' }
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:256:hardcoded number:	        else if (MOL_K3_GRADES.includes(selectedInitialClass)) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:258:hardcoded string:	                { label: "Byju's Early Learning Program", value: 'belp' },
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:259:hardcoded string:	                { label: "DBEL Streaming", value: 'dbel_streaming'}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:264:hardcoded string:	                { label: 'Byjus-TLP', value: 'byjus_tlp' },
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:265:hardcoded string:	                { label: 'Byjus Classes(New)', value: 'byjus_classes' }  
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:271:hardcoded object:	        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:275:hardcoded object:	        const { tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:276:hardcoded string:	        const { customerDetails = [], orderPunchingCategory = '', renewedOrders = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:277:hardcoded variable:	        const existingRenewedPids = getRenewedPids(renewedOrders)
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:279:hardcoded variable:	        const gradeMap = {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:280:hardcoded string:	            "-1": "LKG",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:281:hardcoded string:	            "0": "UKG"
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:283:hardcoded variable:	        const columns = [
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:285:hardcoded string:	                title: 'Student Name',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:286:hardcoded string:	                dataIndex: 'name',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:287:hardcoded string:	                key: 'name',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:288:hardcoded number:	                width: 100,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:289:hardcoded string:	                align: "center",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:292:hardcoded object:	                        children: <div>{text} {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:293:hardcoded string:	                            record.enabled ? <Badge color="success">Qualified</Badge> :
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:294:hardcoded string:	                                <Badge color="secondary">Not-Qualified</Badge>
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:300:hardcoded string:	                title: 'Grades',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:301:hardcoded string:	                dataIndex: 'classInfo',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:302:hardcoded string:	                key: 'classInfo',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:303:hardcoded number:	                width: 100,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:304:hardcoded string:	                align: "center",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:307:hardcoded object:	                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:312:hardcoded string:	                title: "Select",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:313:hardcoded number:	                width: 20,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:314:hardcoded string:	                align: "center",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:316:hardcoded object:	                    value={record}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:317:hardcoded object:	                    onChange={record.handleChange}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:321:hardcoded array:	        let data = [];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:323:hardcoded number:	        for (var i = 0; i < customerDetails.length; i++) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:324:hardcoded string:	            const { studentName = "", productInfo = [], productSelectionType = "", studentId = '', premiumAccount = '' } = customerDetails[i] || {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:325:hardcoded string:	            const { initialClass = "", finalClass = "", validity = "" } = productInfo[0] || {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:326:hardcoded object:	            const isEligibleToRenew = checkEligibilityforRenewal({ initialClass, finalClass, validity, orderPunchingCategory, premiumAccount, existingRenewedPids })
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:327:hardcoded object:	            const product = `${productSelectionType}` || `${orderPunchingCategory}`;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:328:hardcoded variable:	            const detail = {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:329:hardcoded array:	                key: this.state.formCountArray[i],
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:332:hardcoded array:	                classInfo: finalClass ? `${upperCase(product)}: ${gradeMap[initialClass] || initialClass} - ${gradeMap[finalClass] || finalClass}` :
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:333:hardcoded array:	                    `${upperCase(product)}: ${gradeMap[initialClass] || initialClass}`,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:342:hardcoded object:	                pagination={false}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:343:hardcoded object:	                columns={columns}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:344:hardcoded object:	                dataSource={data}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:345:hardcoded object:	                bordered={true}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:346:hardcoded string:	                rowClassName={record => !record.enabled && "disabled-row"}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:354:hardcoded string:	        const checkedFormNo = get(e, 'target.value.key', null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:355:hardcoded string:	        const studentId = get(e, 'target.value.studentId', null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:356:hardcoded object:	        const schoolForm = get(this.state, `schoolForm-${checkedFormNo}`)
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:359:hardcoded string:	        let customerDetails = get(this.props, 'tlpOrderData.customerDetails', []);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:360:hardcoded array:	        customerDetails = isArray(customerDetails) ? customerDetails : [customerDetails];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:361:hardcoded variable:	        const customerDetail = customerDetails.filter(ele => ele.studentId === studentId);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:362:hardcoded number:	        let { initialClass, finalClass, validity, board, state } = get(customerDetail, `0.productInfo[0]`, {});
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:363:hardcoded string:	        const products = get(customerDetail[0], 'products', []);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:364:hardcoded number:	        const isD4Exists = products.length && products.some(sku => (D4_TABLET_LIST.includes(sku.skuId)) ||
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:365:hardcoded string:	            (D4_TABLET_LIST.includes(sku.orderItemId)) || (['D4_TLP'].includes(sku.type)) || (['D4'].includes(sku.brand)) 
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:366:hardcoded string:	            || (sku.name.includes('D4')) || (sku.sku.includes('D4')) || (sku.skuName.includes('D4')));
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:368:hardcoded number:	        //validity is calculated as original order final year validity + 1 (for the next year)
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:369:hardcoded number:	        validity = Number(validity) + (Number(finalClass) - Number(initialClass)) + 1;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:372:hardcoded string:	            [`isRenewed-${checkedFormNo}`]: get(e, 'target.checked', false),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:373:hardcoded array:	            [`validity-${checkedFormNo}`]: validity,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:374:hardcoded number:	            [`initialClass-${checkedFormNo}`]: `${Number(finalClass) + 1}`,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:375:hardcoded number:	            [`existingD4Order-${checkedFormNo}`]: isD4Exists,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:376:hardcoded array:	            [`board-${checkedFormNo}`]: board,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:377:hardcoded array:	            [`state-${checkedFormNo}`]: state,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:378:hardcoded string:	            [`finalClass-${checkedFormNo}`]: "",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:379:hardcoded string:	            [`productCombination-${checkedFormNo}`]: "",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:380:hardcoded string:	            [`productLearningType-${checkedFormNo}`]: ""
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:386:hardcoded object:	        const { selectedProfile = {} } = this.state;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:387:hardcoded array:	        let { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:388:hardcoded string:	        existingProfiles = existingProfiles.filter(ele => ele.value != 'newProfile');
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:389:hardcoded number:	        for (var i = 0; i < existingProfiles.length; i++) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:390:hardcoded string:	            if (Object.values(selectedProfile).flat().includes(existingProfiles[i].value) && existingProfiles[i].value !== "newProfile") {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:391:hardcoded array:	                existingProfiles[i].disabled = true;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:393:hardcoded array:	            else { existingProfiles[i].disabled = false; }
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:399:hardcoded string:	        const { Tablets, tablets, selectedInitialClass, D4EligibleManagers, productCombination = "", selectedFinalClass, tlpFinalGrade, MeTablets = [] } = details
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:400:hardcoded object:	        const { user, salesDetails, authDetails, leadDetails } = this.props
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:401:hardcoded object:	        const { subCourse: selectedSubCourse } = this.state
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:402:hardcoded object:	        const { env, featureEnableList } = authDetails
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:403:hardcoded string:	        const isEpicSamplerEnabled = get(featureEnableList, 'byjusmath_epic_sampler_bda');
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:404:hardcoded array:	        let options = []
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:405:hardcoded number:	        if (isK3orPreKClass(selectedInitialClass)) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:406:hardcoded number:	            options = getK3orPreKTablets({ Tablets, user, selectedClass: selectedInitialClass, salesDetails, authDetails, D4EligibleManagers, leadDetails, productCombination, MeTablets })
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:408:hardcoded number:	            options = getTablets({ tablets, user, selectedClass: selectedInitialClass, selectedFinalClass, salesDetails, authDetails, D4EligibleManagers, leadDetails, productCombination, selectedSubCourse, env, selectedTlpFinalGrade: tlpFinalGrade, MeTablets })
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:410:hardcoded string:	        if (['11', '12', '12+', '13+'].includes(selectedFinalClass) || ['11', '12', '12+', '13+'].includes(tlpFinalGrade)) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:411:hardcoded string:	            options = options.filter(name => name.label !== "BYJU'S Learn Station 10inch Wifi White Tablet (Rs 13000)")
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:413:hardcoded string:	        if (['11', '12', '12+', '13+'].includes(selectedFinalClass) || ['11', '12', '12+', '13+'].includes(tlpFinalGrade)) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:414:hardcoded string:	            options = options.filter(tablet => tablet.value != "TLXMZ2")
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:415:hardcoded string:	            options.push({ label: "Lenovo 10 inch Tablet Mobile Data (3GB/ 32GB) - (Rs 16000)", value: "TLXMZZ" })
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:417:hardcoded string:	        if (['11', '12', '12+', '13+'].includes(selectedFinalClass) || ['11', '12', '12+', '13+'].includes(tlpFinalGrade)) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:418:hardcoded string:	            options = options.filter(tab => !["BYJU'S LearnStation 10inch Mobile Data Grey Tablet (Rs 10000)"].includes(tab.label))
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:420:hardcoded object:	        options = getSamplerTlpTabletOptions({ options, env, isEpicSamplerEnabled, productCombination })
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:425:hardcoded array:	        const { tlpOrderData, existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:427:hardcoded array:	        let { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:428:hardcoded array:	        customerDetails = isArray(customerDetails) ? customerDetails : [customerDetails];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:429:hardcoded variable:	        const customerDetail = customerDetails.filter(ele => ele.studentId === studentId);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:430:hardcoded string:	        const { productInfo = [], productSelectionType = "" } = customerDetail[0] || {}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:431:hardcoded number:	        let { initialClass, finalClass, board, state } = productInfo[0];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:434:hardcoded object:	        const isRenewed = get(this.state, `isRenewed-${formNumber}`, false);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:435:hardcoded object:	        const { productConfig } = this.state;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:437:hardcoded object:	        const selectedInitialClass = get(this.state, `initialClass-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:438:hardcoded string:	        const selectedFinalClass = get(this.state, `finalClass-${formNumber}`, "");
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:439:hardcoded object:	        const selectedTlpFinalClass = get(this.state, `tlpFinalGrade-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:440:hardcoded number:	        const selectedD4Tablet = get(this.state, `d4tablet-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:441:hardcoded object:	        const selectedSubCourse = get(this.state, `subCourse-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:442:hardcoded object:	        const productLearningType = get(this.state, `productLearningType-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:443:hardcoded object:	        const addTlpCourse = get(this.state, `addTlpCourse-${formNumber}`, false);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:444:hardcoded object:	        const initialValidity = get(this.state, `validity-${formNumber}`, null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:445:hardcoded string:	        const productCombination = get(this.state, `productCombination-${formNumber}`, '');
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:447:hardcoded object:	        const { user, leadDetails = {} } = this.props;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:448:hardcoded number:	        const { Products = [], Boards = [], Tablets = [], D4EligibleManagers = [], MeTablets = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:449:hardcoded string:	        const productConfiguration = find(Products, { formattedName: 'combo' }) || {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:450:hardcoded array:	        const { tablets = [] } = productConfiguration || {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:451:hardcoded string:	        const selectedBoardConfig = find(Boards, { formattedName: board ? board : 'CBSE' }) || {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:452:hardcoded object:	        const selectedClassConfig = find(selectedBoardConfig.classes, { class: selectedFinalClass }) || {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:453:hardcoded object:	        const selectedTlpClassConfig = find(selectedBoardConfig.classes, { class: selectedTlpFinalClass }) || {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:455:hardcoded variable:	        const byjusClassesMap = getByjusClassesMap(selectedBoardConfig.classes);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:456:hardcoded string:	        const classes = getClasses(selectedBoardConfig, user, '', productCombination);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:457:hardcoded string:	        const subCourses = ["11", "12", 11, 12].includes(selectedTlpFinalClass) ? get(selectedTlpClassConfig, 'subCourses', []) : get(selectedClassConfig, 'subCourses', []);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:458:hardcoded variable:	        const subCourseOptions = subCourses && fetchSubCourseOptions(productCombination, subCourses)
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:459:hardcoded string:	        const isBocp = ['byjus_classes'].includes(productCombination);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:460:hardcoded number:	        const tabletOptions = checkPrivTabletAccess(leadDetails, user) ? getAllAvailableTabletsBasedOnUser(user) : this.getTabletOptions({ Tablets, tablets, selectedInitialClass, D4EligibleManagers, productCombination, selectedFinalClass, tlpFinalGrade: selectedTlpFinalClass, MeTablets })
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:462:hardcoded variable:	        const fields = [
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:464:hardcoded string:	                type: isRenewed ? 'text' : 'hidden',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:465:hardcoded string:	                name: 'originalOrderType',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:466:hardcoded string:	                label: 'Original Order Type',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:472:hardcoded string:	                type: isRenewed ? 'text' : 'hidden',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:473:hardcoded string:	                name: 'originalOrderFinalGrade',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:474:hardcoded string:	                label: 'Original Order Final-Grade',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:480:hardcoded string:	                type: 'hidden',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:482:hardcoded string:	                name: 'studentName'
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:485:hardcoded string:	                type: isRenewed ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:486:hardcoded string:	                name: 'productLearningType',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:487:hardcoded string:	                label: 'Product Type',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:488:hardcoded array:	                options: this.getProductCombinationList(selectedInitialClass) || [],
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:491:hardcoded string:	                message: 'Please select product type'
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:494:hardcoded string:	                type: 'hidden',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:495:hardcoded string:	                name: 'board',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:496:hardcoded string:	                value: board ? board : 'CBSE'
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:499:hardcoded string:	                type: 'hidden',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:500:hardcoded string:	                name: 'state',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:504:hardcoded string:	                type: isRenewed ? 'text' : 'hidden',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:505:hardcoded string:	                label: 'Initial Grade',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:506:hardcoded string:	                name: 'initialClass',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:513:hardcoded string:	                type: isRenewed ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:514:hardcoded string:	                name: 'finalClass',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:515:hardcoded string:	                label: "Final Grade",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:517:hardcoded array:	                options: filterFinalClass({ classes, selectedInitialClass }) || [],
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:520:hardcoded string:	                message: isBocp ? 'Please Select Byjus Classes - Final Grade' : "Please Select Final Grade"
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:523:hardcoded string:	                type: isRenewed && selectedFinalClass && ['byjus_classes'].includes(productLearningType) ? 'checkbox' : 'hidden',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:524:hardcoded string:	                name: 'addTlpCourse',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:526:hardcoded string:	                checkBoxLabel: "Extend product with Tablet Learning Program",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:528:hardcoded object:	                onChange: (...params) => this.handleChanges(...params, {}, formNumber)
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:531:hardcoded string:	                type: isRenewed && selectedFinalClass && addTlpCourse ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:532:hardcoded string:	                name: 'tlpFinalGrade',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:533:hardcoded string:	                label: "TLP Final Grade",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:535:hardcoded array:	                options: filterTLPFinalClass({classes, selectedInitialClass, selectedFinalClass}) || [],
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:539:hardcoded string:	                type: 'hidden',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:540:hardcoded string:	                name: 'validity',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:544:hardcoded string:	                type: isRenewed && selectedFinalClass ? 'text' : 'hidden',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:545:hardcoded string:	                name: 'finalValidity',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:546:hardcoded string:	                label: 'Final Validity',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:550:hardcoded string:	                type: isK12Class(selectedFinalClass, selectedTlpFinalClass) && isRenewed ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:551:hardcoded string:	                name: 'subCourse',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:552:hardcoded string:	                label: 'Select Sub Course',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:553:hardcoded number:	                required: isK12Class(selectedFinalClass, selectedTlpFinalClass) && isRenewed,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:554:hardcoded array:	                options: subCourseOptions || [],
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:557:hardcoded string:	                message: "Please select Sub Course"
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:560:hardcoded string:	                type: (!isRenewed) || selectedD4Tablet ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:561:hardcoded array:	                options: (tabletOptions.length && tabletOptions) || [],
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:562:hardcoded string:	                name: 'tablet',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:563:hardcoded string:	                label: 'Select Tablet',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:565:hardcoded string:	                message: "Please select Tablet",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:566:hardcoded number:	                required: isK3orPreKClass(selectedInitialClass) && isRenewed && !selectedD4Tablet ? true : false
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:568:hardcoded string:	                type: ((existingProfiles.length > 0 && isRenewed) ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:569:hardcoded array:	                options: this.getOptions() || [],
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:570:hardcoded string:	                name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:571:hardcoded string:	                label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:573:hardcoded string:	                message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:575:hardcoded number:	                required: (existingProfiles.length > 0 && isRenewed) ? true : false,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:577:hardcoded string:	                    display: 'block',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:578:hardcoded string:	                    height: '30px',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:579:hardcoded string:	                    lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:590:hardcoded array:	                [`${formNumber}`]: [`${ele.target.value}`]
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:596:hardcoded array:	        const productDetailsForm = this.refs[`productDetailsForm-${formNumber}`];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:597:hardcoded array:	        const schoolForm = this.refs[`schoolForm-${formNumber}`]
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:598:hardcoded variable:	        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:600:hardcoded string:	        if (name === "finalClass") {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:601:hardcoded object:	            const initialValidity = get(this.state, `validity-${formNumber}`, null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:602:hardcoded object:	            const initialClass = get(this.state, `initialClass-${formNumber}`, null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:603:hardcoded variable:	            const finalValidity = Number(initialValidity) + (Number(value) - Number(initialClass));
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:604:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ tlpFinalGrade: "", subCourse: "", finalValidity: finalValidity, tablet: "" })
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:606:hardcoded string:	                [`subCourse-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:607:hardcoded string:	                [`tlpFinalGrade-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:608:hardcoded array:	                [`finalValidity-${formNumber}`]: finalValidity,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:609:hardcoded array:	                [`addTlpCourse-${formNumber}`]: false,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:610:hardcoded string:	                [`tablet-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:611:hardcoded string:	                [`tabletId-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:612:hardcoded string:	                [`tabletName-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:616:hardcoded string:	         if (name === "tlpFinalGrade") {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:617:hardcoded object:	            const initialValidity = get(this.state, `validity-${formNumber}`, null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:618:hardcoded object:	            const finalClass = get(this.state, `finalClass-${formNumber}`, null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:619:hardcoded object:	            const initialClass = get(this.state, `initialClass-${formNumber}`, null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:620:hardcoded variable:	            const tlpFinalGradeValidity = value ? Number(initialValidity) + (Number(value) - Number(initialClass)) : 
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:622:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ tlpFinalGrade: "", subCourse: "", finalValidity: tlpFinalGradeValidity })
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:623:hardcoded array:	            this.setState({ [`finalValidity-${formNumber}`]: tlpFinalGradeValidity });
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:626:hardcoded string:	        if (name === "productLearningType") {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:628:hardcoded string:	                finalClass: "", subCourse: "", tablet: "", tlpFinalGrade: "",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:629:hardcoded string:	                mathPercent: "", sciencePercent: "", languageOfInstruction: ""
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:633:hardcoded array:	                [`productCombination-${formNumber}`]: value,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:634:hardcoded string:	                [`isByjusClasses-${formNumber}`]: value === "byjus_classes" ? true : false,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:635:hardcoded string:	                [`finalClass-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:636:hardcoded string:	                [`subCourse-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:637:hardcoded array:	                [`addTlpCourse-${formNumber}`]: false
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:641:hardcoded string:	        if (name === "addTlpCourse") {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:642:hardcoded object:	            const finalValidity = get(this.state, `finalValidity-${formNumber}`, null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:643:hardcoded object:	            const finalClass = get(this.state, `finalClass-${formNumber}`, null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:644:hardcoded object:	            const tlpFinalClass = get(this.state, `tlpFinalGrade-${formNumber}`, null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:645:hardcoded variable:	            const tlpFinalGradeValidity = tlpFinalClass ? Number(finalValidity) - ( Number(tlpFinalClass) - Number(finalClass)) : finalValidity;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:646:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ tlpFinalGrade: "", finalValidity: tlpFinalGradeValidity})
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:648:hardcoded array:	                [`tlpFinalGrade-${formNumber}`]: null,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:649:hardcoded array:	                [`finalValidity-${formNumber}`]: tlpFinalGradeValidity
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:653:hardcoded string:	        if (name === "subCourse") {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:654:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ d4tablet: "" });
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:656:hardcoded string:	                [`d4tablet-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:657:hardcoded string:	                [`tabletId-${formNumber}`]: "",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:662:hardcoded string:	        if (name === "tablet") {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:663:hardcoded string:	            const { label = "" } = props || {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:664:hardcoded array:	            const siblingName = this.state[`siblingName-${formNumber}`];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:666:hardcoded string:	                [`tabletId-${formNumber}`]: value ? `T-${value}-${siblingName}` : "",
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:667:hardcoded array:	                [`tabletName-${formNumber}`]: `${label}`,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:668:hardcoded number:	                [`selectD4SDCard-${formNumber}`]: D4_TABLET_LIST.includes(value),
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:674:hardcoded array:	            [`${name}-${formNumber}`]: value,
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:680:hardcoded object:	        const { formCountArray } = this.state;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:681:hardcoded object:	        const productLearningType = get(this.state, `productLearningType-${formNo}`);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:682:hardcoded string:	        const isByjusClassForm = ["byjus_classes"].includes(productLearningType);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:683:hardcoded variable:	        const currentForm = formCountArray.find(formCount => formCount === formNo);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:685:hardcoded variable:	        let isByjusClassesApplicable = false;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:686:hardcoded array:	        this.setState({ [`isByjusClasses-${currentForm}`]: false })
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:688:hardcoded array:	        isByjusClassesApplicable = byjusClassesMap[selectedInitialClass] || false;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:692:hardcoded array:	                [`isByjusClasses-${currentForm}`]: (isByjusClassesApplicable) ? true : false
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:698:hardcoded object:	        const { eligibleCustomers } = this.state;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:699:hardcoded array:	        const studentName = eligibleCustomers[index].studentName;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:700:hardcoded array:	        const studentId = eligibleCustomers[index].studentId;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:701:hardcoded variable:	        const fields = this.getFormFields(formNumber, formSerialNum, studentName, studentId, index);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:702:hardcoded array:	        let { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:703:hardcoded object:	        const isRenewEnabled = get(this.state, `isRenewed-${formNumber}`, false);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:704:hardcoded string:	        const currentProfile = get(existingProfiles.find(({ label }) => label.indexOf(studentName) >= 0), 'value');
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:708:hardcoded object:	                    heading={`Student name: ${studentName}`}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:709:hardcoded string:	                    initialValues={{ userProfile: currentProfile, flowOfTopic: "default" }}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:710:hardcoded object:	                    fields={fields}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:711:hardcoded object:	                    ref={`productDetailsForm-${formNumber}`}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:712:hardcoded object:	                    key={studentName}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:720:hardcoded array:	        const { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:721:hardcoded object:	        const { eligibleCustomers, formCountArray } = this.state;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:723:hardcoded object:	        const selectedProfile = {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:724:hardcoded number:	        for (var i = 0; i < formCountArray.length; i++) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:725:hardcoded array:	            const studentName = eligibleCustomers[i].studentName;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:726:hardcoded string:	            const currentProfile = get(existingProfiles.find(({ label }) => label.indexOf(studentName) >= 0), 'value');
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:727:hardcoded array:	            selectedProfile[formCountArray[i]] = currentProfile;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:728:hardcoded object:	            this.setState({ selectedProfile });
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:734:hardcoded object:	            this.setState({ productConfig: nextProps.productConfig });
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:739:hardcoded object:	        let { productDetails, customerDetails, identifier, tlpOrderData, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:740:hardcoded array:	        let options = [];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:741:hardcoded variable:	        let showProfileSelectionOption = false;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:742:hardcoded array:	        let existingProfiles = [];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:743:hardcoded object:	        this.setState({ loading: true });
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:744:hardcoded object:	        let tlpCustomerProfileDetail = {}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:746:hardcoded string:	            const tlpCustomerDetails = get(tlpOrderData, "customerDetails", []);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:747:hardcoded string:	            const orderId = get(tlpOrderData, "orderId", "");
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:748:hardcoded number:	            if (tlpCustomerDetails.length > 0) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:750:hardcoded number:	                    studentMobileNo: tlpCustomerDetails[0].studentMobile, orderId
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:765:hardcoded string:	            selectedProduct: get(productDetails, 'productType', 'single')
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:773:hardcoded array:	        let formCountArray = [];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:774:hardcoded object:	        const { tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:775:hardcoded array:	        let { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:776:hardcoded array:	        customerDetails = isArray(customerDetails) ? customerDetails : [customerDetails];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:777:hardcoded array:	        let { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:778:hardcoded variable:	        const eligibleCustomers = customerDetails.filter(ele => {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:779:hardcoded array:	            const { productInfo = [] } = ele;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:780:hardcoded number:	            const { finalClass } = productInfo[0];
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:781:hardcoded string:	            return (!["14", "13", "12+", "11+12"].includes(finalClass)) 
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:783:hardcoded string:	        const { type = "" } = eligibleCustomers[0] || {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:785:hardcoded object:	        const selectedProfile = {};
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:786:hardcoded variable:	        let currentTime = (new Date()).getTime();
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:787:hardcoded number:	        for (var i = 0; i < eligibleCustomers.length; i++) {
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:790:hardcoded string:	            const currentProfile = get(existingProfiles.find(({ label }) => label.indexOf(eligibleCustomers[i].studentName) >= 0), 'value');
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:793:hardcoded string:	        this.setState({ eligibleCustomers, course: 'K10/K12', formCountArray, selectedProfile, productType: type });
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:798:hardcoded object:	        const productCombination = get(this.state, `productCombination-${formNo}`, null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:799:hardcoded string:	        if (this.state[`isRenewed-${formNo}`] && !["12"].includes(`initialClass-${formNo}`) &&
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:800:hardcoded string:	            productCombination === "byjus_classes" && 
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:802:hardcoded variable:	            const isEligible = getBatchesEligibility(this.state, formNo)
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:809:hardcoded object:	        const { changeNextBtnMode, productType, identifier, authDetails } = this.props; //To render some specific component after the main product details form
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:810:hardcoded object:	        const { error, formCountArray, classType } = this.state;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:811:hardcoded object:	        const { env, featureEnableList } = authDetails
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:815:hardcoded string:	                <div className="card m-2">
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:816:hardcoded string:	                    <div style={{ paddingBottom: '12px' }}>
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:817:hardcoded object:	                        <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:819:hardcoded string:	                        <Row style={{ overflow: 'auto', height: '200px', padding: '1%' }}>  {this.showOrderDetails()} </Row>
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:822:hardcoded number:	                            const formSerialNum = index + 1;
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:823:hardcoded object:	                            const productLearningType = get(this.state, `productLearningType-${formNo}`, null);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:824:hardcoded string:	                            const isProficiencyAndFot = [ "belp", "dbel_streaming" ].includes(productLearningType) ? true : isProficiencyAndFotAvailable({ state: this.state, props: this.props, handleChanges: this.handleChanges, formNumber: formNo, type: productLearningType === "byjus_classes" ? "renewal" : null });
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:825:hardcoded variable:	                            const isBatchesEligible = this.checkBatchesEligibility(formNo, env)
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:826:hardcoded string:	                            const bfsBatch = "1:6"
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:827:hardcoded array:	                            const isByjusMathBatchesEligible = (this.state[`board-${formNo}`]) && (this.state[`initialClass-${formNo}`]) && (this.state[`validity-${formNo}`]) && (this.state[`productLearningType-${formNo}`]);
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:828:hardcoded object:	                            const details = {...this.props, productCombination: productLearningType}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:830:hardcoded object:	                                <Fragment key={index}>
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:831:hardcoded object:	                                    {this.buildSiblingProductForm(formSerialNum, formNo, index)}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:834:hardcoded object:	                                            ref={`schoolForm-${formNo}`}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:835:hardcoded array:	                                            board={this.state[`board-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:836:hardcoded array:	                                            grade={this.state[`initialClass-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:837:hardcoded array:	                                            premiumId={this.state[`premiumId-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:838:hardcoded object:	                                            formNumber={formNo}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:839:hardcoded object:	                                            handleSiblingChanges={this.handleChanges}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:840:hardcoded object:	                                            handleClassBlurEvent={this.handleClassBlurEvent}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:841:hardcoded array:	                                            state={this.state[`state-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:842:hardcoded object:	                                            props={details}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:847:hardcoded object:	                                    {/* Batch Details */}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:849:hardcoded object:	                                        ref={`byjusClassesDetailsForm-${formNo}`}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:850:hardcoded object:	                                        identifier={identifier}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:851:hardcoded object:	                                        classType={classType}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:852:hardcoded array:	                                        initialClass={this.state[`initialClass-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:853:hardcoded array:	                                        board={this.state[`board-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:854:hardcoded array:	                                        state={this.state[`state-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:855:hardcoded number:	                                        isV4Batch={this.state.isV4Batch} // represents new tutor+ batching api
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:856:hardcoded object:	                                        productType={productType}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:857:hardcoded array:	                                        validity={this.state[`validity-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:858:hardcoded array:	                                        subCourse={this.state[`subCourse-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:859:hardcoded string:	                                        productCombination={"byjus_classes"}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:860:hardcoded array:	                                        proficiency={this.state[`proficiency-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:861:hardcoded array:	                                        trackId={this.state[`trackId-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:865:hardcoded object:	                                        ref={`byjusMathMentoringForm-${formNo}`}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:866:hardcoded object:	                                        identifier={identifier}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:867:hardcoded array:	                                        initialClass={this.state[`initialClass-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:868:hardcoded array:	                                        board={this.state[`board-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:869:hardcoded object:	                                        bfsBatch={bfsBatch}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:870:hardcoded array:	                                        productCombination={this.state[`productLearningType-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:871:hardcoded object:	                                        classType={classType}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:872:hardcoded number:	                                        isGauntletTwoUser={featureEnableList.gauntlet_2}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:873:hardcoded object:	                                        isGauntletBDAUser={featureEnableList.gauntlet_for_bda_level}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:880:hardcoded string:	                            ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:881:hardcoded object:	                            onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:882:hardcoded object:	                            getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:883:hardcoded object:	                            changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:884:hardcoded object:	                            setError={this.setError}
microservices-middleware/client/src/modules/ordertype/renewalorder/ProductPage.js:893:hardcoded object:	export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(RenewalProductPage);