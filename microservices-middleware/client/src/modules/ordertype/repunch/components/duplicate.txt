microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:1:hardcoded object:import React, { Component } from 'react';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:4:hardcoded object:import { get, isEmpty } from 'lodash';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:6:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:7:hardcoded file path:import AppLayout from 'modules/applayout/AppLayout';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:8:hardcoded file path:import AntDformBuilder from 'components/form/AntDFormBuilder'
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:9:hardcoded object:import { loadRepunchConfigurations } from '../RepunchDetailsReducer';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:11:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:12:hardcoded string:    identifier: get(state, 'details.identifier', null),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:13:hardcoded string:    loading: get(state, 'details.loading'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:14:hardcoded string:    error: get(state, 'details.error'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:15:hardcoded string:    repunchConfig: get(state, "repunch.configs", [])
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:18:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:30:hardcoded number:            duplicateReasonLength: 0,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:31:hardcoded object:            repunchConfig: {}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:37:hardcoded array:            [name]: value,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:44:hardcoded object:        const { repunchDetailsForm } = this;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:45:hardcoded string:        if (name === "primaryReason") {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:46:hardcoded string:            repunchDetailsForm && repunchDetailsForm.setFieldsValue({ secondaryReason: "", duplicateReason: "" })
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:48:hardcoded array:        this.setState({ [name]: value });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:53:hardcoded object:        this.setState({ duplicateReasonLength: value.length });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:57:hardcoded array:        const { repunchConfig = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:67:hardcoded object:        const { repunchConfig } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:68:hardcoded object:        const { primaryReason } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:69:hardcoded variable:        const data = primaryReason && repunchConfig.find(dt => dt.formattedName === primaryReason);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:70:hardcoded string:        const seondaryReasons = get(data, "seondaryReasons", []);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:81:hardcoded object:        const { duplicateReasonLength } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:82:hardcoded object:        const { repunchConfig } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:83:hardcoded object:        const { config = {} } = repunchConfig;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:84:hardcoded array:        let fields = [];
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:85:hardcoded variable:        const primaryOptions = this.getPrimaryption();
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:89:hardcoded string:                type: "select",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:90:hardcoded string:                name: "primaryReason",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:91:hardcoded string:                label: "Primary Reason",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:96:hardcoded string:                type: "select",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:97:hardcoded string:                name: "secondaryReason",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:98:hardcoded string:                label: "Secondary Reason",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:103:hardcoded string:                type: 'textarea',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:104:hardcoded string:                name: 'duplicateReason',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:105:hardcoded string:                label: 'Reason',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:108:hardcoded string:                    type: "string",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:109:hardcoded string:                    "min": 70,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:111:hardcoded string:                        return value ? value.trim() : '';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:115:hardcoded string:                helpText: (70 - duplicateReasonLength) > 0 ? `${70 - duplicateReasonLength} characters remaining.` : ''
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:123:hardcoded variable:        const repunchDetails = await this.repunchDetailsForm.getFormValues();
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:134:hardcoded variable:        let isSuccess = false;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:135:hardcoded object:        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:136:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:141:hardcoded object:        this.setState({ loading: true, error: null });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:143:hardcoded string:            url: '/api/repunch/saveRepunchDetails',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:144:hardcoded string:            method: 'POST',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:158:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:159:hardcoded string:        const url = pathname ? `${pathname}${get(history, 'location.search')}` : `/product${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:165:hardcoded variable:        const details = await this.validateForms();
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:167:hardcoded variable:            const isSuccess = await this.storeDetailsInDb(details);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:175:hardcoded string:        this.navigateToScreen('/details');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:179:hardcoded object:        let { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:186:hardcoded object:        const { loading, error } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:187:hardcoded variable:        const salesPersonfields = this.getSalesFormFields();
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:191:hardcoded string:                    step="repunch"
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:192:hardcoded object:                    onClickPrevBtn={this.onClickPrevBtn}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:193:hardcoded object:                    onClickNextBtn={this.onClickNextBtn}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:194:hardcoded object:                    loading={loading}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:195:hardcoded object:                    error={error}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:196:hardcoded string:                    orderPunchingType={"REPUNCH_ORDER_TYPE"}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:198:hardcoded string:                    <div className="card m-2" style={{ height: "100%" }}>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:199:hardcoded string:                        <div className='card-header bg-repunch text-white'> Repunch Details </div>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:201:hardcoded object:                            fields={salesPersonfields}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchDetails.js:202:hardcoded object:                            wrappedComponentRef={(inst) => this.repunchDetailsForm = inst}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:1:hardcoded object:import React, { Component } from 'react';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:3:hardcoded object:import { Row, Col } from 'antd';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:4:hardcoded object:import { get, isEqual, concat, isEmpty, find } from 'lodash';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:6:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:7:hardcoded file path:import AppLayout from 'modules/applayout/AppLayout';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:8:hardcoded file path:import AntDformBuilder from 'components/form/AntDFormBuilder'
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:9:hardcoded file path:import UploadFile from 'modules/upload/UploadFile';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:10:hardcoded file path:import AddressList from 'modules/address/components/AddressList';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:12:hardcoded object:import { saveAddressDetails } from 'modules/address/addressReducer';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:13:hardcoded object:import { countryList, stateList } from 'modules/address/utils/addressConfig';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:14:hardcoded object:import { getAddressDetails } from '../../OrderHelper';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:16:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:17:hardcoded string:    omsConfig: get(state, 'auth.details.omsConfig'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:18:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:19:hardcoded string:    orderPunchingType: get(state, 'auth.orderPunchingType'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:20:hardcoded string:    leadDetails: get(state, 'auth.leadDetails', {}),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:21:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:22:hardcoded string:    addressDetails: get(state, 'address.details', {}),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:23:hardcoded string:    attachments: get(state, 'address.attachments'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:24:hardcoded string:    loading: get(state, 'address.loading'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:25:hardcoded string:    error: get(state, 'address.error'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:26:hardcoded string:    repunchDoc: get(state, "repunch", {})
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:29:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:40:hardcoded object:            updatedFieldValue: {}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:45:hardcoded object:        const { country } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:46:hardcoded array:        let rule = []
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:48:hardcoded string:        if (country != 'India') {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:50:hardcoded number:                pattern: new RegExp(/^[a-zA-Z1-9][a-zA-Z0-9]*$/), message: `Not a valid Zipcode`
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:54:hardcoded number:                pattern: new RegExp(/^[1-9][0-9]{5}$/), message: `Not a valid Zipcode`
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:61:hardcoded variable:        let rule = [{
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:62:hardcoded number:            pattern: new RegExp(/^[a-zA-Z0-9! :&()\-`.+,/\"]*$/), message: `Invalid Address.Only hyphen(-),colon(:),slash(\),comma(,) are allowed as a special Character`
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:66:hardcoded string:                type: "string",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:67:hardcoded string:                "max": 30,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:69:hardcoded string:                    return value ? value.trim() : '';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:77:hardcoded object:        const { updatedFieldValue } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:78:hardcoded string:        updatedFieldValue["zipcode"] = event.target.value;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:79:hardcoded object:        this.setState({ updatedFieldValue });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:80:hardcoded object:        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:81:hardcoded object:        this.setState({ loading: true, error: null });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:82:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:87:hardcoded string:            url: '/api/address/getPincodeInfo',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:88:hardcoded string:            method: 'POST',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:91:hardcoded string:            const data = get(response, 'data');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:92:hardcoded string:            let { city = "", state = "" } = data;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:94:hardcoded string:            updatedFieldValue["city"] = city || ""
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:96:hardcoded string:            state = state && stateList.find(ele => ele.label.includes(state) || ele.label.split(" ")[0].includes(state.split(" ")[0]));
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:98:hardcoded string:            updatedFieldValue["state"] = state.value || undefined;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:100:hardcoded object:            this.setState({ loading: false, updatedFieldValue });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:102:hardcoded object:            this.setState({ loading: false });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:103:hardcoded object:            // this.setState({ error }, () => {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:104:hardcoded object:            //     this.setState({ loading: false });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:110:hardcoded string:        return (orderPunchingType == "TLP_TO_HLP_ORDER") ? true : false
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:114:hardcoded object:        const { country, updatedFieldValue } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:115:hardcoded string:        const { orderPunchingType = "", authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:116:hardcoded string:        const { state = "", city ="" } = updatedFieldValue;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:117:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:119:hardcoded array:        const cityList = [];
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:121:hardcoded string:        if(['local', 'development'].includes(env) &&  typeof city !== "string") {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:123:hardcoded object:                cityList.push({label: res, value: res})
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:127:hardcoded variable:        const fields = [{
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:128:hardcoded string:            type: 'text',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:129:hardcoded string:            name: 'addressLine1',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:130:hardcoded string:            label: 'Address 1(Apartment or House Number/Building Name)',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:131:hardcoded string:            placeholder: 'Address 1(Apartment or House Number/Building Name)',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:137:hardcoded string:            type: 'text',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:138:hardcoded string:            name: 'addressLine2',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:139:hardcoded string:            label: 'Address 2(Street Name/locality)',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:140:hardcoded string:            placeholder: 'Address 2(Street Name/locality)',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:146:hardcoded string:            type: 'textarea',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:147:hardcoded string:            name: 'addressLine3',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:148:hardcoded string:            label: 'Address 3(PO/Area Number/Landmark)',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:149:hardcoded string:            placeholder: 'Address 3(PO/Area Number/Landmark)',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:155:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:156:hardcoded string:            name: 'country',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:157:hardcoded string:            label: 'Country',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:159:hardcoded string:            value: "India",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:160:hardcoded string:            placeholder: 'Select Country',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:165:hardcoded string:            type: country === "India" ? 'number' : 'text',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:166:hardcoded string:            name: 'zipcode',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:167:hardcoded string:            label: 'Zip Code',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:168:hardcoded string:            placeholder: 'Enter Zip Code',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:169:hardcoded string:            required: country === "India" ? true : false,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:174:hardcoded string:            type: country === "India" ? 'select' : 'text',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:175:hardcoded string:            name: 'state',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:176:hardcoded string:            label: 'State',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:178:hardcoded string:            placeholder: country === "India" ? 'Select State' : 'Enter State',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:180:hardcoded string:            disabled: this.isDisabled(orderPunchingType) || ((state) && country === "India" ? true : false)
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:182:hardcoded string:            type: cityList.length > 1 ? 'select' : 'text',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:183:hardcoded string:            name: 'city',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:184:hardcoded string:            label: 'City',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:185:hardcoded string:            placeholder: 'Enter City',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:187:hardcoded string:            disabled: ['local', 'development'].includes(env) && (city !== "" && typeof city === 'string') ? true : false,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:190:hardcoded array:                pattern: new RegExp(/^[a-zA-Z\s\.]+$/), message: `Enter valid city`
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:193:hardcoded string:            type: ['development', 'local'].includes(env) ? 'hidden' : 'checkbox',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:194:hardcoded string:            name: 'isDirectSales',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:195:hardcoded string:            checkBoxLabel: 'This is a Direct Sale',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:204:hardcoded object:        const { updatedFieldValue } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:206:hardcoded array:        updatedFieldValue[name] = value;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:208:hardcoded object:        this.setState({ updatedFieldValue })
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:212:hardcoded object:        const { updatedFieldValue } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:213:hardcoded array:        updatedFieldValue[name] = value;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:214:hardcoded string:        updatedFieldValue["city"] = "";
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:215:hardcoded string:        updatedFieldValue["state"] = undefined;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:216:hardcoded string:        updatedFieldValue["zipcode"] = "";
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:219:hardcoded array:            [name]: value,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:226:hardcoded array:        this.setState({ [name]: checked });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:230:hardcoded object:        const { identifier, omsConfig } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:231:hardcoded object:        this.setState({ loading: true, error: null });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:234:hardcoded string:                url: '/api/address/saveAddressDetails',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:235:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:244:hardcoded string:                const data = get(response, 'data');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:246:hardcoded object:                this.setState({ loading: false });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:247:hardcoded string:                this.navigateToScreen('/payment');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:249:hardcoded object:                this.setState({ error }, () => {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:250:hardcoded object:                    this.setState({ loading: false, error: JSON.stringify(error) });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:257:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:258:hardcoded string:        const url = `${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:263:hardcoded string:        this.navigateToScreen('/product');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:267:hardcoded object:        const { isDirectSales, addressDetails } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:269:hardcoded object:        this.setState({ error: null, applicationFormError: null });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:270:hardcoded variable:        const updatedAddressDetails = await this.addressForm.getFormValues();
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:273:hardcoded string:            const { addressLine1 = "", addressLine2 = "", addressLine3 = "" } = updatedAddressDetails;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:274:hardcoded string:            let address = '';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:275:hardcoded string:            address = !isEmpty(updatedAddressDetails["addressLine3"]) ? `${addressLine1}, ${addressLine2}, ${addressLine3}` : `${addressLine1}, ${addressLine2}`;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:276:hardcoded string:            updatedAddressDetails["address"] = address;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:277:hardcoded array:            attachments = isDirectSales ? this.getAttachments() : [];
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:281:hardcoded variable:            const isAddressModified = !isEqual(addressDetails, updatedAddressDetails);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:287:hardcoded object:        const { applicationFrontSide, applicationBackSide } = this.refs;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:289:hardcoded variable:        const frontSideFormValues = applicationFrontSide && applicationFrontSide.getUploadedFiles();
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:290:hardcoded variable:        const backSideFormValues = applicationBackSide && applicationBackSide.getUploadedFiles();
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:293:hardcoded variable:            const attachments = concat(frontSideFormValues, backSideFormValues);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:298:hardcoded object:            this.setState({ applicationFormError: `Please upload both Front side and Back side of Application Form.` });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:306:hardcoded string:            country: addressDetails["country"],
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:312:hardcoded object:        let { addressDetails, attachments, loading, error, repunchDoc } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:313:hardcoded string:        const { previousOrderDetails = {} } = get(repunchDoc, "repunchDetails", {});
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:314:hardcoded variable:        const data = getAddressDetails(previousOrderDetails);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:319:hardcoded string:        if (!addressDetails["country"]) {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:320:hardcoded string:            this.setState({ country: 'India' })
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:322:hardcoded object:            this.setState({ country: addressDetails.country })
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:324:hardcoded object:        this.setState({ updatedFieldValue: addressDetails, addressDetails, attachments, loading, error });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:328:hardcoded object:        const { loading, error } = nextProps;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:330:hardcoded object:        (!isEqual(loading, this.props.loading)) && this.setState({ loading });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:331:hardcoded object:        (!isEqual(error, this.props.error)) && this.setState({ error });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:335:hardcoded object:        this.setState({ savedAddressCount: count });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:341:hardcoded object:        const { identifier, authDetails, orderPunchingType } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:342:hardcoded object:        const { omsConfig } = authDetails;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:343:hardcoded variable:        const fields = this.getFormFields();
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:344:hardcoded object:        const { env} = authDetails
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:346:hardcoded string:        if(['local', 'development'].includes(env)) {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:347:hardcoded string:            const {city = ''} = updatedFieldValue;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:348:hardcoded string:            if( typeof city !== 'string' ) {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:349:hardcoded string:                updatedFieldValue['city'] = updatedFieldValue['city'][0];
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:353:hardcoded string:        const cardHeaderStyle = { margin: 10, height: 425, overflow: 'scroll' };
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:357:hardcoded string:                step="address"
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:358:hardcoded object:                onClickPrevBtn={this.onClickPrevBtn}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:359:hardcoded object:                onClickNextBtn={this.onClickNextBtn}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:360:hardcoded object:                loading={loading}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:361:hardcoded object:                error={error}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:362:hardcoded object:                orderPunchingType={orderPunchingType}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:365:hardcoded number:                    <Col md={!isEmpty(omsConfig) ? 20 : 24}>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:366:hardcoded string:                        <div className='card-header bg-repunch text-white'> Sales Person Details </div>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:368:hardcoded string:                            ref="addressDetailForm"
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:369:hardcoded object:                            fields={fields}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:370:hardcoded object:                            wrappedComponentRef={(inst) => this.addressForm = inst}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:371:hardcoded object:                            initialValues={{ ...addressDetails, ...updatedFieldValue }}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:372:hardcoded object:                            style={cardHeaderStyle}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:376:hardcoded number:                        <Col md={4}>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:377:hardcoded number:                            <div className={`card border-0`} style={cardHeaderStyle}>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:378:hardcoded object:                                <div className={`card-header bg-repunch text-white`}>Saved Address(s)</div>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:380:hardcoded object:                                    selectSavedAddress={this.selectSavedAddress}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:381:hardcoded object:                                    updateSavedAddressCount={this.updateSavedAddressCount}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:384:hardcoded string:                            {savedAddressCount && savedAddressCount != 0 && <p style={{ position: 'relative', left: '5%' }}>{`${savedAddressCount || 0} saved address`}</p>}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:389:hardcoded number:                    <div className={`card border-0`} style={{ margin: 10 }} >
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:390:hardcoded object:                        <div className={`card-header bg-repunch text-white`}>Upload Application Form</div>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:391:hardcoded string:                        {applicationFormError && <div style={{ color: 'red', margin: '2%' }}>{applicationFormError}</div>}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:394:hardcoded string:                                name: "applicationFrontSide",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:395:hardcoded string:                                label: "Front Side",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:396:hardcoded number:                                count: 1,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:397:hardcoded string:                                accept: ".jpeg,.jpg,.png,.pdf"
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:399:hardcoded object:                            identifier={identifier}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:400:hardcoded string:                            ref="applicationFrontSide"
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:401:hardcoded string:                            initialValues={find(attachments, { name: 'applicationFrontSide' })}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:405:hardcoded string:                                name: "applicationBackSide",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:406:hardcoded string:                                label: "Back Side",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:407:hardcoded number:                                count: 1,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:408:hardcoded string:                                accept: ".jpeg,.jpg,.png,.pdf"
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:410:hardcoded object:                            identifier={identifier}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:411:hardcoded string:                            ref="applicationBackSide"
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchAddressPage.js:412:hardcoded string:                            initialValues={find(attachments, { name: 'applicationBackSide' })}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:1:hardcoded object:import React, { Component, Fragment, lazy } from 'react';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:3:hardcoded object:import { get, isEqual, isEmpty, remove, debounce } from 'lodash';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:4:hardcoded object:import { Select, message, Button } from 'antd';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:5:hardcoded object:import { Row, Col } from 'reactstrap';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:7:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:8:hardcoded file path:import AppLayout from 'modules/applayout/AppLayout';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:9:hardcoded file path:import AntDformBuilder from 'components/form/AntDFormBuilder'
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:10:hardcoded file path:import InfoWrapper from 'components/InfoWrapper';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:11:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:12:hardcoded object:import { saveSalesAndCustomerDetails, saveIdentifier } from 'modules/details/salesCustomerReducer';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:13:hardcoded object:import { loadRepunchConfigurations, saveRepunch } from '../RepunchDetailsReducer';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:14:hardcoded object:import { saveAddressDetails } from 'modules/address/addressReducer';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:15:hardcoded object:import { countryCodeList } from 'modules/address/utils/addressConfig';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:16:hardcoded object:import { accountMap, retentionDefaultUser, USER_ROLES_TO_FREEZE_SALESDONEBY } from 'modules/details/components/utils/detailConfig';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:17:hardcoded file path:import CashbackConfirmationModal from 'modules/details/components/CashbackConfirmationModal';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:18:hardcoded object:import { getSalesCustomerDetails } from '../../OrderHelper';
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:19:hardcoded object:import { leadquaredRelatedPermissions } from "utility/screenPermission";
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:20:hardcoded string:const Masked = lazy(() => import("components/masking/Masked"))
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:22:hardcoded variable:const SelectOption = Select.Option;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:24:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:25:hardcoded string:    omsConfig: get(state, 'auth.details.omsConfig'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:26:hardcoded string:    authDetails: get(state, 'auth.details', {}),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:27:hardcoded string:    orderPunchingType: get(state, 'auth.orderPunchingType'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:28:hardcoded string:    leadDetails: get(state, 'auth.leadDetails', {}),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:29:hardcoded string:    salesDetails: get(state, 'details.salesDetails', {}),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:30:hardcoded string:    identifier: get(state, 'details.identifier', null),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:31:hardcoded string:    loading: get(state, 'details.loading'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:32:hardcoded string:    customerDetails: get(state, 'details.customerDetails', {}),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:33:hardcoded string:    error: get(state, 'details.error'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:34:hardcoded string:    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:35:hardcoded string:    repunchDoc: get(state, "repunch", {})
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:38:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:61:hardcoded array:            salesPersons: [],
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:62:hardcoded object:            salesPersonDetails: {},//maintaining this sate to track sales person name and id also
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:65:hardcoded object:            customerDetails: {},
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:66:hardcoded object:            salesDetails: {},
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:67:hardcoded object:            customerDetails: {},
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:68:hardcoded array:            cashbacks: [],
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:70:hardcoded array:            lockedErrors: [],
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:72:hardcoded array:            directSalesPersons: [],
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:73:hardcoded array:            appointedSalesPersons: [],
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:74:hardcoded array:            bookedSalesPersons: [],
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:77:hardcoded string:            parentCountryCode: "+91",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:79:hardcoded array:            existingProfiles: [],
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:80:hardcoded object:            leadUserDetails: {},
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:81:hardcoded object:            repunchConfig: {}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:86:hardcoded object:        let filter = {};
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:87:hardcoded string:        const { accountNumber = "" } = this.props.leadDetails;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:89:hardcoded string:            filter["username"] = { "$regex": searchText.replace(/[+]/g, "\\+"), "$options": 'i' };
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:92:hardcoded object:        this.setState({ salesPersonLoading: true, error: null });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:94:hardcoded string:            url: '/api/details/getSalesPersonDetails',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:95:hardcoded string:            method: 'POST',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:96:hardcoded object:            body: { filter, field, accountNumber }
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:98:hardcoded string:            const docs = get(response, 'data.docs', []);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:99:hardcoded variable:            const result = this.getFormattedSalesPersonList(docs);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:104:hardcoded number:            if(result.length === 1) {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:106:hardcoded number:                    salesDoneByUser: result[0],
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:109:hardcoded string:            if (field === "salesAppointmentBy"){
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:110:hardcoded string:                this.setSalesPersonOptions("appointedSalesPersons", result);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:112:hardcoded string:                this.setSalesPersonOptions("directSalesPersons", result)
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:116:hardcoded object:            this.setState({ salesPersonLoading: false, error: JSON.stringify(error) });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:122:hardcoded array:            this.setState({ [field]: result });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:136:hardcoded string:                label: get(sp, 'username'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:137:hardcoded string:                value: get(sp, 'userId')
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:144:hardcoded variable:        const customerDetails = await this.customerDetailsForm.getFormValues();
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:145:hardcoded variable:        const salesDetails = await this.salesDetailsForm.getFormValues();
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:157:hardcoded object:        const { salesDetails } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:159:hardcoded string:        salesDetails[`${name}`] = get(option, 'label');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:160:hardcoded string:        salesDetails[`${name}Id`] = get(option, 'value');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:162:hardcoded object:        this.setState({ salesDetails });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:172:hardcoded object:        const { authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:173:hardcoded object:        const { salesDetails = {} } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:174:hardcoded string:        const { directSalesBy = "" } = salesDetails
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:176:hardcoded variable:            const payload = {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:178:hardcoded string:                isLeadCreatedByAdmin: get(authDetails, "isLeadCreatedByAdmin", false)
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:180:hardcoded object:            this.setState({ loading: true, error: null });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:182:hardcoded string:                url: '/api/details/evaluateUser',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:183:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:186:hardcoded object:                this.setState({ error: null, loading: false });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:187:hardcoded object:                this.setState({ leadUserDetails: response.data });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:189:hardcoded object:                this.setState({ error, loading: false });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:195:hardcoded variable:        let isSuccess = false;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:196:hardcoded object:        const { leadDetails, identifier, authDetails, isOmsLive, orderPunchingType, omsConfig, repunchDoc } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:197:hardcoded object:        const { salesDetails, parentCountryCode } = this.state; //Get both id and email
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:198:hardcoded object:        let { customerDetails } = details;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:199:hardcoded string:        const parentMobileNo = get(customerDetails, 'parentMobileNo', '');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:200:hardcoded object:        customerDetails.studentMobileNo = `${parentCountryCode}-${parentMobileNo}`
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:201:hardcoded object:        customerDetails.parentMobileNo = `${parentCountryCode}-${parentMobileNo}`
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:203:hardcoded string:        leadDetails["loggedInEmailId"] = get(authDetails, 'loggedInEmailId');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:204:hardcoded string:        leadDetails["createdByEmailId"] = get(authDetails, "createdByEmailId", "");
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:205:hardcoded string:        leadDetails["orderPunchedByRole"] = get(authDetails.user, 'role', "");
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:206:hardcoded string:        const originalOrderId = get(repunchDoc, "orderId", "");
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:208:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:216:hardcoded string:            loggedInUserDetails: get(authDetails, 'user', {}),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:220:hardcoded object:        this.setState({ loading: true, error: null });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:222:hardcoded string:            url: '/api/repunch/saveSalesAndCustomerDetails',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:223:hardcoded string:            method: 'POST',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:226:hardcoded string:            const { identifier, salesDetails, customerDetails } = get(response, 'data');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:229:hardcoded object:            this.setState({ loading: false });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:232:hardcoded object:            const { errors, lockedErrors } = error;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:250:hardcoded object:        this.setState({ showCashbackConfirmationModal: isConfirmed });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:257:hardcoded object:        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:258:hardcoded object:        this.setState({ loading: true, error: null });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:260:hardcoded variable:            const response = await CallApi({
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:261:hardcoded string:                url: '/api/cashback/getCashbackDetails',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:262:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:263:hardcoded object:                body: { identifier }
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:265:hardcoded string:            const cashbacks = get(response, 'data', []);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:266:hardcoded number:            if (cashbacks.length === 0) {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:269:hardcoded object:                this.setState({ cashbacks, showCashbackConfirmationModal: true, loading: false });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:272:hardcoded object:            this.setState({ loading: false, error });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:277:hardcoded variable:        const details = await this.validateForms();
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:280:hardcoded variable:            const isSuccess = await this.storeDetailsInDb(details);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:289:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:290:hardcoded string:        let url = `/repunch${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:296:hardcoded string:        return (["TLP_TO_HLP_ORDER", "TRIAL_PACK_TO_BYJUS_CLASSES", "REPUNCH_ORDER_TYPE", "RENEWAL_ORDER", "RENEWAL"].includes(orderPunchingType)) ? true : false
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:300:hardcoded string:        const accountType = get(this.props, 'authDetails.accountType', '');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:301:hardcoded array:        const accountMapArray = get(accountMap, accountType, []);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:304:hardcoded object:        const {authDetails} = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:305:hardcoded object:        const { loggedInEmailId } = authDetails;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:306:hardcoded string:        const { role } = get(authDetails, "user", "");
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:307:hardcoded variable:        const isRoleBda = USER_ROLES_TO_FREEZE_SALESDONEBY.includes(role);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:309:hardcoded variable:        let fields = [{
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:310:hardcoded string:            type: 'hidden',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:311:hardcoded string:            name: 'typeOfSales',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:312:hardcoded string:            value: get(salesDetails, 'typeOfSales')
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:314:hardcoded string:            type: accountMapArray.includes("directSalesBy") ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:315:hardcoded string:            name: 'directSalesBy',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:316:hardcoded string:            label: 'Sales Done By',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:319:hardcoded string:            value: isRoleBda ? loggedInEmailId : get(salesDetails, 'directSalesBy'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:320:hardcoded string:            onSearch: debounce((text) => this.onSearchUser(text, 'directSalesBy'), 1000),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:324:hardcoded string:            disabled: (isRoleBda && accountType !== "middle-east") ? true : false
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:326:hardcoded string:        accountMapArray.includes("salesAppointmentBy") ? {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:327:hardcoded string:            type: accountMapArray.includes("salesAppointmentBy") ? 'select' : 'hidden',//accountType == "calling" ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:328:hardcoded string:            name: 'salesAppointmentBy',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:329:hardcoded string:            label: 'Sales Appointment By',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:330:hardcoded string:            required: accountMapArray.includes("salesAppointmentBy") ? true : false,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:332:hardcoded string:            value: get(salesDetails, 'directSalesBy'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:333:hardcoded string:            onSearch: debounce((text) => this.onSearchUser(text, 'salesAppointmentBy'), 1000),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:344:hardcoded array:        let rule = []
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:345:hardcoded string:        if (countryCode === '+91') {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:347:hardcoded number:                pattern: new RegExp(/^(\+\d{1,3}[- ]?)?\d{10}$/), message: `Enter 10 digit valid Mobile No`
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:354:hardcoded object:        const { customerDetails, parentCountryCode } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:355:hardcoded string:        const parentMob = get(customerDetails, 'parentMobileNo', '');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:357:hardcoded variable:        const fields = [{
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:358:hardcoded string:            type: 'text',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:359:hardcoded string:            name: 'parentName',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:360:hardcoded string:            label: 'Parent Name',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:362:hardcoded string:            value: get(customerDetails, 'parentName'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:365:hardcoded array:                pattern: new RegExp(/^[a-zA-Z\s\.]+$/), message: `Enter valid name`
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:367:hardcoded number:                max: 80,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:368:hardcoded number:                message: `Parent Name cannot be more than 80 characters long`
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:371:hardcoded string:            type: 'text',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:372:hardcoded string:            name: 'studentName',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:373:hardcoded string:            label: 'Student Name',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:375:hardcoded string:            value: get(customerDetails, 'studentName'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:378:hardcoded array:                pattern: new RegExp(/^[a-zA-Z\s\.]+$/), message: `Enter valid name`
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:380:hardcoded number:                max: 80,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:381:hardcoded number:                message: `Student Name cannot be more than 80 characters long`
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:384:hardcoded string:            type: 'inputgroup',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:385:hardcoded string:            name: 'parentMobileGroup',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:386:hardcoded string:            label: 'Primary Contact No.',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:387:hardcoded number:            gutter: 1,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:390:hardcoded string:                    type: 'select',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:391:hardcoded string:                    name: 'parentCountryCode',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:393:hardcoded string:                    message: "Please enter country code",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:396:hardcoded number:                    span: 10,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:397:hardcoded string:                    value: get(customerDetails, 'parentCountryCode'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:401:hardcoded string:                    type: 'number',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:402:hardcoded string:                    name: 'parentMobileNo',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:404:hardcoded string:                    message: "Please enter Contact No.",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:406:hardcoded number:                    span: 14,
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:413:hardcoded string:            type: 'email',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:414:hardcoded string:            name: 'email',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:415:hardcoded string:            label: 'Email ID',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:417:hardcoded string:            value: get(customerDetails, 'email'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:420:hardcoded string:                type: 'email', message: 'Enter valid EmailId'
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:428:hardcoded array:            [name]: value
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:433:hardcoded object:        this.setState({ name: value });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:437:hardcoded array:        this.setState({ [name]: value });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:442:hardcoded string:            <Select defaultValue="+91" style={{ width: '5%' }}>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:443:hardcoded string:                <SelectOption value="+91">+91</SelectOption>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:449:hardcoded string:        let { parentMobileNo = "" } = customerDetails;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:451:hardcoded string:        const parentMobileData = parentMobileNo.split('-');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:454:hardcoded string:            parentCountryCode: parentMobileNo ? parentMobileData[0] : "+91",
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:455:hardcoded number:            parentMobileNo: parentMobileData[1]
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:460:hardcoded object:        this.setState({ loading: true, error: null });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:462:hardcoded string:            url: '/api/details/getOrderDeatils',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:463:hardcoded string:            method: 'POST',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:464:hardcoded object:            body: { orderId, studentMobile }
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:466:hardcoded array:            const orders = response.data || [];
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:468:hardcoded number:            this.setState({ orderDetails: orders[0], loading: false, error: null });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:470:hardcoded number:            if (orders[0]) {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:471:hardcoded number:                const { customerDetails } = orders[0];
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:473:hardcoded variable:                const salesDetails = {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:474:hardcoded string:                    directSalesBy: retentionDefaultUser["user"],
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:475:hardcoded string:                    directSalesById: retentionDefaultUser["userId"]
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:477:hardcoded variable:                const customerData = {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:478:hardcoded string:                    studentName: get(customerDetails[0], 'studentName'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:479:hardcoded string:                    parentName: get(customerDetails[0], 'parentName'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:480:hardcoded string:                    parentCountryCode: get(customerDetails[0], '+91'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:481:hardcoded string:                    parentMobileNo: get(customerDetails[0], 'parentMobile'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:482:hardcoded string:                    email: get(customerDetails[0], 'parentEmail')
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:484:hardcoded variable:                const addressDetails = {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:485:hardcoded string:                    address: get(customerDetails[0], 'address'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:486:hardcoded string:                    country: get(customerDetails[0], 'country'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:487:hardcoded string:                    state: get(customerDetails[0], 'state'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:488:hardcoded string:                    city: get(customerDetails[0], 'city'),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:489:hardcoded string:                    zipcode: get(customerDetails[0], 'zipCode')
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:495:hardcoded object:            this.setState({ loading: false, error });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:501:hardcoded object:            this.setState({ loading: true });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:505:hardcoded string:                    method: 'POST',
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:507:hardcoded string:                        identifiers: lockedErrors.map(ele => get(ele, 'identifier'))
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:510:hardcoded object:                this.setState({ lockedErrors: null, loading: false, error: null });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:513:hardcoded object:                this.setState({ error, loading: false });
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:518:hardcoded array:    getLockedErrorBody = (lockedErrors = []) => {
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:519:hardcoded number:        window.scrollTo(0, 0);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:524:hardcoded object:                        <Fragment key={index}>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:525:hardcoded string:                            <p>System has found an incomplete order with cashback associated with mobile number: {get(errorBody, 'mobileNo')} </p>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:527:hardcoded string:                                Click to Continue With Incomplete Order:{" "}<a style={{ textDecoration: "none" }}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:528:hardcoded string:                                    href={`https://run.leadsquared.com/LeadManagement/LeadDetails?LeadID=${get(errorBody, 'prospectId')}`}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:529:hardcoded string:                                    target="_blank"
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:530:hardcoded string:                                >https://run.leadsquared.com/LeadManagement/LeadDetails?LeadID={get(errorBody, 'prospectId')}</a>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:533:hardcoded string:                                <Button type="danger" onClick={() => this.clearAllCashbacksLinkedDraftOrders(lockedErrors)}>Discard Incomplete Order(s)</Button>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:543:hardcoded object:        const { authDetails = {} } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:544:hardcoded array:        const { directSalesPersons = [] } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:545:hardcoded string:        const userRole = get(authDetails.user, 'role', "");
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:546:hardcoded object:        let salesDetails = {};
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:549:hardcoded string:            const { label = "", value = "" } = get(directSalesPersons, "0", {});
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:550:hardcoded string:            salesDetails["directSalesBy"] = label;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:551:hardcoded string:            salesDetails["directSalesById"] = value;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:562:hardcoded object:        let { salesDetails = {}, customerDetails = {}, leadDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:573:hardcoded object:        let { salesDetails = {}, customerDetails = {}, leadDetails, identifier, repunchDoc, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:574:hardcoded object:        let customerContactDetails = {};
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:575:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:576:hardcoded string:        const role = get(authDetails, 'user.role', '');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:577:hardcoded string:        const repunchDetails = get(repunchDoc, "repunchDetails", {});
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:578:hardcoded string:        const previousOrderDetails = get(repunchDetails, "previousOrderDetails", {});
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:580:hardcoded string:        let { orderId, studentMobile = '' } = leadDetails;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:581:hardcoded string:        studentMobile = studentMobile.split(',')[0];
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:587:hardcoded variable:        const data = await getSalesCustomerDetails(previousOrderDetails, env);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:589:hardcoded string:            typeOfSales: get(previousOrderDetails, 'type_of_sales', "DSSales"),
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:590:hardcoded string:            ...get(data, "salesDetails", {})
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:593:hardcoded string:            ...get(data, "customerData", {})
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:595:hardcoded string:        customerContactDetails["parentCountryCode"] = get(get(data, "customerData", {}), "parentCountryCode", "");
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:615:hardcoded object:        const { authDetails, leadDetails, orderPunchingType } = this.props;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:616:hardcoded object:        const { loading, error, customerDetails, salesDetails, cashbacks, orderDetails, showCashbackConfirmationModal, lockedErrors, leadUserDetails, directSalesPersons, salesDoneByUser } = this.state;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:617:hardcoded string:        const userPermissions = get(this.props, "authDetails.user.permissions", [])
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:618:hardcoded variable:        const salesPersonfields = this.getSalesFormFields();
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:619:hardcoded variable:        const customerFormFields = this.getCustomerFormFields();
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:620:hardcoded string:        const studentMob = get(leadDetails, "studentMobile", "").split(",")[0];
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:621:hardcoded string:        const role = get(authDetails, 'user.role', '');
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:622:hardcoded variable:        const isPrivilegedUser = userPermissions.includes(leadquaredRelatedPermissions.allownMultipleOrderOnSameProspectId);
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:625:hardcoded string:            salesDetails["directSalesBy"] = salesDoneByUser?.label;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:626:hardcoded string:            salesDetails["directSalesById"] = salesDoneByUser?.value;
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:632:hardcoded string:                    step="sales"
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:633:hardcoded object:                    onClickNextBtn={this.onClickNextBtn}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:634:hardcoded object:                    loading={loading}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:635:hardcoded object:                    error={error}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:636:hardcoded object:                    orderPunchingType={orderPunchingType}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:639:hardcoded object:                        errorBody={this.getLockedErrorBody(lockedErrors)}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:642:hardcoded object:                        message={`Order Found!`}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:643:hardcoded string:                        description={`Order#${get(orderDetails, 'orderId')} - ${get(orderDetails, 'orderhiveOrderStatus', '')} is found !`}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:646:hardcoded string:                        <Col md={6} className="pr-0">
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:647:hardcoded string:                            <div className="card m-2" style={{ height: "100%" }}>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:648:hardcoded string:                                <div className='card-header bg-repunch text-white'> Sales Person Details </div>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:650:hardcoded object:                                    fields={salesPersonfields}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:651:hardcoded object:                                    wrappedComponentRef={(inst) => this.salesDetailsForm = inst}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:652:hardcoded object:                                    initialValues={salesDetails}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:654:hardcoded string:                                <div style={{ marginTop: "8%" }}>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:656:hardcoded string:                                        message={"Lead Details: "}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:659:hardcoded string:                                                <p>Lead Mobile Number: <Masked isSuperUser={isPrivilegedUser} type="mobile">{studentMob}</Masked></p>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:660:hardcoded string:                                                <p>Lead Created By: {get(authDetails, "createdByEmailId", "")}</p>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:661:hardcoded string:                                                {get(leadUserDetails, "isValidated", false) && get(leadUserDetails, "message", "") && <p>{get(leadUserDetails, "message", "")}</p>}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:662:hardcoded string:                                                {!get(leadUserDetails, "isValidated", false) && <p style={{ color: "Red", marginTop: "2%" }}>{get(leadUserDetails, "message", "")}</p>}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:663:hardcoded string:                                                {get(leadUserDetails, "role", "") === "bdt" && <p style={{ color: "Red", marginTop: "2%" }}>Only sales that are done using the leads allotted to you during your training program will be considered for final evaluation.</p>}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:664:hardcoded string:                                                {get(leadUserDetails, "role", "") != "bdt" && <p style={{ color: "Red", marginTop: "2%" }}>Order Verification will happen on Lead Mobile Number. Please ensure you are punching the order on the correct lead.</p>}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:672:hardcoded string:                        <Col md={6} className="pl-0">
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:673:hardcoded string:                            <div className="card m-2" style={{ height: "100%" }}>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:674:hardcoded string:                                <div className='card-header bg-repunch text-white'> Customer Details </div>
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:681:hardcoded string:                                    type="warning"
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:684:hardcoded object:                                    fields={customerFormFields}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:685:hardcoded object:                                    wrappedComponentRef={(inst) => this.customerDetailsForm = inst}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:686:hardcoded object:                                    initialValues={customerDetails}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:693:hardcoded object:                            onClickConfirm={() => this.onCashbackConfirmation(true)}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:694:hardcoded object:                            onClickCancel={() => this.onCashbackConfirmation(false)}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:695:hardcoded object:                            visible={showCashbackConfirmationModal}
microservices-middleware/client/src/modules/ordertype/repunch/components/RepunchSalesCustomerPage.js:696:hardcoded object:                            cashbacks={cashbacks}
