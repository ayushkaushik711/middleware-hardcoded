microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:14:hardcoded string:	import '../byjusclass/style.scss';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:18:hardcoded variable:	const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:19:hardcoded string:	    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:20:hardcoded string:	    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:21:hardcoded string:	    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:22:hardcoded string:	    tlpOrderData: get(state, 'auth.tlpOrderData'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:23:hardcoded string:	    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:24:hardcoded string:	    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:25:hardcoded string:	    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:26:hardcoded string:	    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:27:hardcoded string:	    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:28:hardcoded string:	    leadDetails: get(state, 'auth.leadDetails', {}),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:29:hardcoded string:	    user: get(state, "auth.details.user", {})
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:32:hardcoded variable:	const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:57:hardcoded array:	            eligibleCustomers: [],
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:62:hardcoded string:	            classType: "neo",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:68:hardcoded object:	        const {orderPunchingType, leadDetails = {}, authDetails = {}, productConfig, identifier, tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:69:hardcoded object:	        const { orderPunchingCategory, orderId, lineOrderItems } = tlpOrderData
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:70:hardcoded object:	        const {parentOrderItems:previousOrderLineItems} = lineOrderItems
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:71:hardcoded array:	        const form = this.refs[`productDetailsForm`];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:72:hardcoded object:	        const details = await form.getProductDetails() || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:73:hardcoded string:	        let productDetails = get(details, 'productDetails') || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:74:hardcoded variable:	        const upgradeOrderDetails = {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:75:hardcoded string:	            "baseOrderId": orderId,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:76:hardcoded string:	            "newCourse": "aakash_test_series_upgrade",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:77:hardcoded string:	            "oldCourse": orderPunchingCategory
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:79:hardcoded string:	        productDetails["upgradeOrderDetails"] = upgradeOrderDetails
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:84:hardcoded string:	        leadDetails["orderPunchedByRole"] = get(authDetails.user, 'role', "");
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:87:hardcoded variable:	            const payload = {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:90:hardcoded string:	                productCombination: "AAKASH_TEST_SERIES_UPGRADE",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:96:hardcoded string:	                url: '/api/aakashTestSeriesUpgrade/product/getProduct'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:102:hardcoded object:	        const {orderPunchingType, leadDetails = {}, authDetails = {}, productConfig, identifier, tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:103:hardcoded object:	        const { orderPunchingCategory, orderId, lineOrderItems } = tlpOrderData
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:104:hardcoded object:	        const {parentOrderItems:previousOrderLineItems} = lineOrderItems
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:105:hardcoded array:	        const form = this.refs[`productDetailsForm`];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:106:hardcoded object:	        const details = await form.getProductDetails() || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:107:hardcoded string:	        let productDetails = get(details, 'productDetails') || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:108:hardcoded array:	        let bhlpCourseDetails = [], mentoringDetails = [], neoClassesFormValue;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:109:hardcoded string:	        let productLearningType = get(productDetails, "productLearningType", "")
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:110:hardcoded string:	        const initialClass = get(productDetails, "initialClass", "");
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:111:hardcoded string:	        const finalClass = get(productDetails, "finalClass", "");
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:112:hardcoded string:	        const isAcceleratorProgram =(["12"].includes(initialClass) && ["12"].includes(finalClass))
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:113:hardcoded object:	        const { aakashNeoDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:116:hardcoded variable:	        const response = validateAakashNeoMentoringDetails(neoClassesFormValue, productDetails);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:117:hardcoded string:	        mentoringDetails = get(response, "neoClassesMentoringDetails", []);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:118:hardcoded string:	        bhlpCourseDetails = get(response, "bhlpCourseDetails", []);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:121:hardcoded string:	            proficiency: "",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:122:hardcoded string:	            mathPercent: "",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:123:hardcoded string:	            sciencePercent: "",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:124:hardcoded string:	            languageOfInstruction: get(neoClassesFormValue, "formValue.languageOfInstruction", null),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:125:hardcoded string:	            languageOfInstructionId: get(neoClassesFormValue, "formValue.languageOfInstructionId", null),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:128:hardcoded variable:	        const upgradeOrderDetails = {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:129:hardcoded string:	            "baseOrderId": orderId,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:130:hardcoded string:	            "newCourse": "aakash_neo_live_classes_upgrade",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:131:hardcoded string:	            "oldCourse": orderPunchingCategory
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:133:hardcoded string:	        productDetails["upgradeOrderDetails"] = upgradeOrderDetails
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:138:hardcoded string:	        leadDetails["orderPunchedByRole"] = get(authDetails.user, 'role', "");
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:141:hardcoded variable:	            const payload = {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:144:hardcoded string:	                productCombination: "AAKASH_NEO_LIVE_CLASSES_UPGRADE",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:153:hardcoded string:	                url: '/api/aakashTestSeriesUpgrade/product/getUpgradeProduct'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:159:hardcoded object:	        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:160:hardcoded object:	        const { student } = productDetails;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:161:hardcoded variable:	        const payload = {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:169:hardcoded string:	                url: '/api/aakashTestSeriesUpgrade/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:170:hardcoded string:	                method: 'POST',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:173:hardcoded string:	                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:177:hardcoded object:	                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:179:hardcoded string:	                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:181:hardcoded object:	                this.setState({ error });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:188:hardcoded object:	        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:189:hardcoded string:	        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:194:hardcoded object:	        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:197:hardcoded object:	            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:199:hardcoded string:	                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:203:hardcoded string:	                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:206:hardcoded string:	                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:207:hardcoded object:	                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:213:hardcoded object:	        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:217:hardcoded object:	        const { tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:218:hardcoded array:	        const { neoProductInfo, customerDetails = [] } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:219:hardcoded variable:	        const columns = [
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:221:hardcoded string:	                title: 'Student Name',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:222:hardcoded string:	                dataIndex: 'name',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:223:hardcoded string:	                key: 'name',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:227:hardcoded object:	                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:229:hardcoded object:	                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:232:hardcoded number:	                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:235:hardcoded string:	                title: 'Class Info',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:236:hardcoded string:	                dataIndex: 'classInfo',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:237:hardcoded string:	                key: 'classInfo',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:238:hardcoded number:	                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:242:hardcoded object:	                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:244:hardcoded object:	                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:249:hardcoded string:	                title: 'Validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:250:hardcoded string:	                dataIndex: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:251:hardcoded string:	                key: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:252:hardcoded number:	                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:257:hardcoded object:	                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:259:hardcoded object:	                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:265:hardcoded string:	        const { studentName = "" } = customerDetails[0] || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:266:hardcoded string:	        const { initialClass = "", finalClass = "", validity = "", subCourse = "" } = neoProductInfo || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:267:hardcoded variable:	        let data = [{
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:268:hardcoded number:	            key: 1,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:270:hardcoded object:	            classInfo: `${subCourse}: ${initialClass}-${finalClass}`,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:272:hardcoded string:	            color: '#D6FCF8'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:276:hardcoded object:	            <Table pagination={false} columns={columns} dataSource={data} bordered={true}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:283:hardcoded array:	        const productDetailsForm = this.refs[`productDetailsForm`];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:284:hardcoded variable:	        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:286:hardcoded string:	        if (name == "initialClass") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:288:hardcoded string:	                finalClass: "", validity: ""
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:291:hardcoded string:	        if (name == "finalClass") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:292:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ validity: "" });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:296:hardcoded array:	            [name]: value,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:305:hardcoded variable:	        const currDate = new Date();
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:306:hardcoded variable:	        const currYear = currDate.getFullYear();
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:307:hardcoded variable:	        const currMonth = currDate.getMonth()
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:309:hardcoded number:	            if (currMonth > 1) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:310:hardcoded number:	                if ([12, 13].includes(initialClass)) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:313:hardcoded number:	                    initialClass = ((initialClass < finalClass)) ? (initialClass + 1) : initialClass;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:319:hardcoded number:	            initialClass = (currMonth > 1 && initialClass < finalClass) ? initialClass + 1 : initialClass;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:329:hardcoded string:	        if (initialClass == "13+" || initialClass == "13") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:330:hardcoded string:	            return [{ label: "12th Pass", value: "13+" }]
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:333:hardcoded object:	            label: `${initialClass}`,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:334:hardcoded object:	            value: `${initialClass}`
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:339:hardcoded variable:	        let finalClassValues = initialClassValues.filter(ele => {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:340:hardcoded string:	            if (ele.value !== "11") return parseInt(ele.value) >= selectedInitialClass
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:342:hardcoded string:	        finalClassValues = finalClassValues.filter(ele => ![12, '12'].includes(ele.value))
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:343:hardcoded number:	        finalClassValues = finalClassValues.splice(0, 3);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:347:hardcoded object:	        const { validity, selectedInitialClass, selectedFinalClass, currentInitialClass, initialValidity } = validityDetails
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:348:hardcoded object:	        const { env } = this.props.authDetails;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:349:hardcoded variable:	        let currentMonth = (new Date()).getMonth();
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:351:hardcoded string:	        const isDevEnv = ['development', 'local'].includes(env)
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:352:hardcoded object:	        const subscriptionOptions = { selectedInitialClass, selectedFinalClass, currentInitialClass, initialValidity }
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:354:hardcoded variable:	        let formattedValidity = validity && validity.map((entry) => {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:355:hardcoded object:	            let { label, value } = entry;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:356:hardcoded variable:	            let currentYear = getCurrentAcademicYear();
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:357:hardcoded variable:	            let updatedYear = currentYear;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:358:hardcoded string:	            label = label.includes('x') ? eval(label.replace('x', updatedYear)) : label;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:359:hardcoded string:	            value = value.includes('x') ? eval(value.replace('x', updatedYear)) : value;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:367:hardcoded variable:	        // const isSubscriptionEligible = this.getSubscriptionEligibility(subscriptionOptions)
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:369:hardcoded string:	        //     formattedValidity.push({ label: "Monthly Subscription", value: 'subscription' })
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:372:hardcoded string:	        // formattedValidity = formattedValidity.filter(validity => validity.value !== "TRIAL_PACK");
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:373:hardcoded number:	        return formattedValidity.slice(0, 2);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:377:hardcoded array:	        let options = [];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:382:hardcoded number:	        initialClass = Number(initialClass) > 3 ? Number(initialClass) : 4;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:383:hardcoded number:	        while (parseInt(initialClass) <= parseInt(finalClass) && initialClass != 13) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:385:hardcoded number:	                label: parseInt(initialClass, 10),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:391:hardcoded string:	        options = options.filter(ele => ![11, '11'].includes(ele.value) && parseInt(ele.value) >= selectedInitialClass)
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:392:hardcoded string:	        if (finalClass == "13+" || finalClass == "13") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:393:hardcoded string:	            options.push({ label: "12th Pass", value: "13+" })
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:399:hardcoded variable:	        let subTypeValues = [
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:401:hardcoded string:	                label: "Daily Test Series",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:402:hardcoded string:	                value: "daily_test_series"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:405:hardcoded string:	                label: "Mock Test Series",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:406:hardcoded string:	                value: "mock_test_series",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:409:hardcoded string:	                label: "Ranker Test Series",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:410:hardcoded string:	                value: "ranker_test_series"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:413:hardcoded string:	                label: "Scholar Test Series",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:414:hardcoded string:	                value: "scholar_test_series"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:420:hardcoded string:	            case "daily_test_series":
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:421:hardcoded string:	                return subTypeValues.filter((val) => !["mock_test_series", "daily_test_series"].includes(val.value))
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:423:hardcoded string:	            case "mock_test_series":
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:424:hardcoded string:	                return subTypeValues.filter((val) => !["mock_test_series", "daily_test_series"].includes(val.value))
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:426:hardcoded string:	            case "ranker_test_series":
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:427:hardcoded string:	                return subTypeValues.filter((val) => !["mock_test_series", "daily_test_series","ranker_test_series","scholar_test_series"].includes(val.value))
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:429:hardcoded string:	            case "scholar_test_series":
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:430:hardcoded string:	                return subTypeValues.filter((val) => !["mock_test_series", "daily_test_series","scholar_test_series"].includes(val.value))
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:439:hardcoded object:	        const { selectedProfile = {} } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:440:hardcoded array:	        let { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:441:hardcoded string:	        existingProfiles = existingProfiles.filter(ele => ele.value != 'newProfile');
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:442:hardcoded number:	        for (var i = 0; i < existingProfiles.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:443:hardcoded string:	            if (Object.values(selectedProfile).flat().includes(existingProfiles[i].value) && existingProfiles[i].value !== "newProfile") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:444:hardcoded array:	                existingProfiles[i].disabled = true;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:446:hardcoded array:	            else { existingProfiles[i].disabled = false; }
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:452:hardcoded object:	        this.setState({ isUpgradeToTestSeries: !this.state.isUpgradeToTestSeries })
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:456:hardcoded array:	        const { tlpOrderData, existingProfiles = [], productConfig = {}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:458:hardcoded object:	        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:459:hardcoded array:	        let { customerDetails = [], orderPunchingCategory } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:461:hardcoded array:	        customerDetails = isArray(customerDetails) ? customerDetails : [customerDetails];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:462:hardcoded number:	        const { productInfo = [], type, products } = customerDetails[0] || {}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:463:hardcoded number:	        let { initialClass, finalClass, board, validity, subCourse, state, formValues } = productInfo[0];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:464:hardcoded object:	        const { subType } = formValues
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:465:hardcoded variable:	        const initialValidity = validity;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:470:hardcoded variable:	        const isUpgradeRequired = get(this.state, `isUpgradeToTestSeries`);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:471:hardcoded variable:	        const selectedInitialClass = initialClass
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:472:hardcoded variable:	        const selectedFinalClass = finalClass
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:473:hardcoded variable:	        const initialClassValues = this.getInitialGrade(initialClass, finalClass, initialValidity)
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:474:hardcoded string:	        const currentInitialClass = initialClassValues.length ? get(initialClassValues[0], 'value') : ''
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:475:hardcoded array:	        const { Products = [], Boards = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:477:hardcoded object:	        const productConfiguration = find(Products, { formattedName: type }) || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:478:hardcoded array:	        const validityOptions = productConfiguration.validity || [];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:480:hardcoded object:	        const validityDetails = { validity: validityOptions, selectedInitialClass, selectedFinalClass, currentInitialClass, initialValidity }
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:482:hardcoded variable:	        const fields = [
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:484:hardcoded string:	                type: 'checkbox',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:485:hardcoded string:	                name: 'isUpgradeToTestSeries',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:487:hardcoded string:	                checkBoxLabel: 'Do you want to upgrade?'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:490:hardcoded string:	                type: (!isUpgradeRequired) ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:492:hardcoded string:	                name: 'initialClass',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:493:hardcoded string:	                label: 'Select Initial Grade',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:498:hardcoded string:	                type: (isUpgradeRequired && orderPunchingType === "AAKASH_TEST_SERIES_UPGRADE") ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:499:hardcoded string:	                name: 'subType',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:500:hardcoded string:	                label: 'Select Sub Type',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:501:hardcoded string:	                message: "Please Select Sub Type",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:503:hardcoded string:	                required: (orderPunchingType === "AAKASH_TEST_SERIES_UPGRADE") ? true: false,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:507:hardcoded string:	                type: (!isUpgradeRequired) ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:508:hardcoded string:	                name: 'finalClass',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:509:hardcoded string:	                label: "Select Final Grade",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:515:hardcoded string:	                type: (!isUpgradeRequired) ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:516:hardcoded string:	                name: 'subCourse',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:517:hardcoded string:	                label: 'Select Sub Course',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:522:hardcoded string:	                type: (!isUpgradeRequired) ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:524:hardcoded string:	                name: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:525:hardcoded string:	                label: 'Select Initial Validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:528:hardcoded string:	                message: "Please Select Initial Validity"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:530:hardcoded string:	                type: ((existingProfiles.length > 0 && isUpgradeRequired) ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:532:hardcoded string:	                name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:533:hardcoded string:	                label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:535:hardcoded string:	                message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:536:hardcoded number:	                required: (existingProfiles.length > 0 && isUpgradeRequired) ? true : false,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:538:hardcoded string:	                    display: 'block',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:539:hardcoded string:	                    height: '30px',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:540:hardcoded string:	                    lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:548:hardcoded array:	        const { existingProfiles = [] } = this.props
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:549:hardcoded object:	        const { neoformValues } = this.state
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:550:hardcoded object:	        const { subCourse } = neoformValues
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:551:hardcoded variable:	        const fields = this.getFields()
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:554:hardcoded number:	                initialValues={{ subCourse, userProfile: existingProfiles[0]?.value }}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:555:hardcoded object:	                fields={fields}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:556:hardcoded object:	                ref={`productDetailsForm`}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:565:hardcoded object:	        this.setState({ eligibleForNewLoan: true })
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:569:hardcoded array:	        let formCountArray = [];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:570:hardcoded object:	        const { tlpOrderData, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:571:hardcoded array:	        let { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:572:hardcoded array:	        customerDetails = isArray(customerDetails) ? customerDetails : [customerDetails];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:573:hardcoded number:	        const { productInfo = [] } = customerDetails[0];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:574:hardcoded number:	        const { formValues } = productInfo[0];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:575:hardcoded number:	        this.setState({ neoProductInfo: productInfo[0], neoformValues: formValues, customerDetails });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:576:hardcoded array:	        let { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:577:hardcoded number:	        this.setState({ userProfile: existingProfiles[0]?.value })
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:582:hardcoded object:	        const { changeNextBtnMode } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:585:hardcoded object:	        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:586:hardcoded array:	        let { customerDetails = [], orderPunchingCategory } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:588:hardcoded array:	        customerDetails = isArray(customerDetails) ? customerDetails : [customerDetails];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:589:hardcoded array:	        customerDetails = isArray(customerDetails) ? customerDetails : [customerDetails];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:590:hardcoded number:	        const { productInfo = [], type, products } = customerDetails[0] || {}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:591:hardcoded string:	        let { productType = "combo", initialClass, finalClass, subCourse, state, formValues } = productInfo[0];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:592:hardcoded variable:	        const selectedInitialClass = get(this.state, `initialClass`);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:593:hardcoded variable:	        const selectedFinalClass = get(this.state, `finalClass`);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:594:hardcoded variable:	        const validity = get(this.state, `validity`);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:595:hardcoded object:	        const { error } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:596:hardcoded string:	        const isTestSeriesUpgrade = (["AAKASH_TEST_SERIES_UPGRADE"].includes(orderPunchingType) )
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:600:hardcoded string:	                <div className="card m-2">
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:601:hardcoded string:	                    <div style={{ paddingBottom: '12px' }}>
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:602:hardcoded object:	                        <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:603:hardcoded string:	                        <Row style={{ overflow: 'auto', height: '160px', padding: '1%' }}>  {this.showOrderDetails()} </Row>
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:604:hardcoded object:	                        {this.buildProductDetailsForm()}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:605:hardcoded string:	                        {validity && orderPunchingType === "AAKASH_NEO_LIVE_CLASSES_UPGRADE" && <AakashNeoBatches
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:606:hardcoded string:	                            ref="aakashNeoDetailsForm"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:607:hardcoded object:	                            identifier={identifier}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:608:hardcoded object:	                            initialClass={selectedInitialClass}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:609:hardcoded object:	                            finalClass={selectedFinalClass}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:610:hardcoded object:	                            productType={productType}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:611:hardcoded object:	                            validity={validity}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:612:hardcoded object:	                            subCourse={subCourse}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:613:hardcoded string:	                            productCombination="byjus_aakash_neo"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:614:hardcoded string:	                            classType="neo"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:615:hardcoded string:	                            courseType="regular"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:619:hardcoded string:	                                ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:620:hardcoded object:	                                onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:621:hardcoded object:	                                getProductDetails={ isTestSeriesUpgrade ? this.getProductDetails : this.getAakashLiveProductDetails}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:622:hardcoded object:	                                changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:623:hardcoded object:	                                setError={this.setError}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:624:hardcoded object:	                                eligibleForNewLoan={true}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashtestseries/AakashTestSeriesUpgradeProductPage.js:635:hardcoded object:	export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(AakashTestSeriesUpgrade);
