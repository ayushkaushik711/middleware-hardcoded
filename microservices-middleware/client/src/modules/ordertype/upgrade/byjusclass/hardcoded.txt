microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:17:hardcoded string:	import './style.scss';
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:27:hardcoded variable:	const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:28:hardcoded string:	    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:29:hardcoded string:	    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:30:hardcoded string:	    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:31:hardcoded string:	    tlpOrderData: get(state, 'auth.tlpOrderData'),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:32:hardcoded string:	    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:33:hardcoded string:	    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:34:hardcoded string:	    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:35:hardcoded string:	    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:36:hardcoded string:	    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:37:hardcoded string:	    leadDetails: get(state, 'auth.leadDetails', {}),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:38:hardcoded string:	    user: get(state, "auth.details.user", {})
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:41:hardcoded variable:	const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:66:hardcoded array:	            eligibleCustomers: [],
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:71:hardcoded string:	            classType: "neo"
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:76:hardcoded object:	        let { env, productDetails, studentMarksDetails, byjusClassesFormValue, schoolAndProficiencyDetails } = details
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:82:hardcoded string:	            electiveDetails: get(byjusClassesFormValue, "formValue.electivesDetails", null),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:83:hardcoded string:	            doubtClassDetails: get(byjusClassesFormValue, "formValue.selectedDoubtClass", null),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:84:hardcoded string:	            languageOfInstruction: get(byjusClassesFormValue, "formValue.languageOfInstruction", null),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:85:hardcoded string:	            languageOfInstructionId: get(byjusClassesFormValue, "formValue.languageOfInstructionId", null)
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:91:hardcoded object:	        const { leadDetails = {}, authDetails = {}, productConfig, identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:92:hardcoded array:	        const { Boards = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:93:hardcoded object:	        const { env } = authDetails
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:94:hardcoded object:	        const { isDevEnv } = window
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:96:hardcoded object:	        const { formCountArray, classType, productType } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:97:hardcoded array:	        let updatedStudentDetails = [];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:98:hardcoded array:	        let bhlpCourseDetails = [], byjusClassesMentoringDetails = [];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:100:hardcoded number:	        for (var i = 0; i < formCountArray.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:101:hardcoded array:	            const isUpgradeToByjusClasses = get(this.state, `isUpgradeToByjusClasses-${formCountArray[i]}`)
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:103:hardcoded array:	            const form = this.refs[`productDetailsForm-${formCountArray[i]}`];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:104:hardcoded array:	            const byjusClassesMentoringForm = this.refs[`byjusClassesDetailsForm-${formCountArray[i]}`]
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:105:hardcoded array:	            const proficiencyForm = this.refs[`proficiencyForm-${formCountArray[i]}`]
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:106:hardcoded array:	            const schoolForm = this.refs[`schoolForm-${formCountArray[i]}`]
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:107:hardcoded array:	            // const isUpgradeToByjusClasses= this.refs[`isUpgradeToByjusClasses-${formCountArray[i]}`]
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:109:hardcoded object:	            const details = await form.getProductDetails() || {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:110:hardcoded string:	            let productDetails = get(details, 'productDetails') || {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:111:hardcoded object:	            if (isEmpty(productDetails)) { return };
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:113:hardcoded string:	            productDetails['tabletId'] = this.state[`tabletId-${formCountArray[i]}`];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:114:hardcoded variable:	            const byjusClassesFormValue = byjusClassesMentoringForm && await byjusClassesMentoringForm.getMentoringValues();
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:115:hardcoded variable:	            const studentMarksDetails = proficiencyForm && await proficiencyForm.getStudentAcademicDetails();
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:116:hardcoded variable:	            const schoolAndProficiencyDetails = schoolForm && await schoolForm.getSchoolDetails()
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:119:hardcoded variable:	            const response = validateByjusClassesMentoringDetails(byjusClassesFormValue, productDetails);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:120:hardcoded string:	            byjusClassesMentoringDetails = get(response, "byjusClassesMentoringDetails", []);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:121:hardcoded string:	            bhlpCourseDetails = get(response, "bhlpCourseDetails", []);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:126:hardcoded string:	            if (classType == "neo" && isUpgradeToByjusClasses) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:127:hardcoded object:	                productDetails = this.getUpdatedProductDetails({ env, productDetails, studentMarksDetails, byjusClassesFormValue, schoolAndProficiencyDetails })
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:130:hardcoded number:	            /**If any sibling data is empty , make siblingCount as 0 and student Array empty to collect data first */
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:131:hardcoded array:	            !isEmpty(productDetails) ? updatedStudentDetails.push(productDetails) : (updatedStudentDetails = []);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:134:hardcoded string:	        leadDetails["orderPunchedByRole"] = get(authDetails.user, 'role', "");
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:137:hardcoded variable:	            const payload = {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:139:hardcoded string:	                productCombination: 'byjus_classes_upgrade',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:150:hardcoded string:	            //         url: '/api/tlptobyjusclassupgrade/getUpgradeProduct' 
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:155:hardcoded string:	                url: '/api/byjusclassupgrade/getUpgradeProduct'
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:162:hardcoded object:	        const { authDetails, tlpOrderData, identifier, leadDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:163:hardcoded object:	        const { user, env } = authDetails || {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:164:hardcoded string:	        const userPermissions = get(user, 'permissions', []);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:165:hardcoded variable:	        const isPriviledgedUser = userPermissions.includes(leadquaredRelatedPermissions.allownMultipleOrderOnSameProspectId);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:166:hardcoded string:	        leadDetails["loggedInEmailId"] = get(authDetails, 'loggedInEmailId');
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:167:hardcoded string:	        leadDetails["createdByEmailId"] = get(authDetails, "createdByEmailId", "");
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:168:hardcoded string:	        leadDetails["leadCreatedAt"] = get(authDetails, "leadCreatedAt", "");
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:169:hardcoded string:	        leadDetails["createdByRole"] = get(authDetails, "createdByRole", "");
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:170:hardcoded string:	        leadDetails["orderPunchedByRole"] = get(authDetails.user, 'role', "");
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:172:hardcoded string:	        // let salesIdentifier = ""
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:175:hardcoded variable:	        const payload = {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:187:hardcoded string:	                url: '/api/byjusclassupgrade/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:188:hardcoded string:	                method: 'POST',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:191:hardcoded string:	                const { productDetails, identifier, salesDetails, customerDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:197:hardcoded object:	                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:199:hardcoded string:	                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:201:hardcoded object:	                this.setState({ error });
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:208:hardcoded object:	        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:209:hardcoded string:	        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:214:hardcoded object:	        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:217:hardcoded object:	            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:219:hardcoded string:	                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:223:hardcoded string:	                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:226:hardcoded string:	                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:227:hardcoded object:	                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:233:hardcoded object:	        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:237:hardcoded object:	        const { tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:238:hardcoded array:	        const { eligibleCustomers = [] } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:239:hardcoded array:	        const { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:240:hardcoded variable:	        const columns = [
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:242:hardcoded string:	                title: 'Student Name',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:243:hardcoded string:	                dataIndex: 'name',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:244:hardcoded string:	                key: 'name',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:248:hardcoded object:	                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:250:hardcoded object:	                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:253:hardcoded number:	                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:256:hardcoded string:	                title: 'Class Info',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:257:hardcoded string:	                dataIndex: 'classInfo',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:258:hardcoded string:	                key: 'classInfo',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:259:hardcoded number:	                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:263:hardcoded object:	                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:265:hardcoded object:	                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:270:hardcoded string:	                title: 'Validity',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:271:hardcoded string:	                dataIndex: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:272:hardcoded string:	                key: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:273:hardcoded number:	                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:278:hardcoded object:	                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:280:hardcoded object:	                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:285:hardcoded array:	        let data = [];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:286:hardcoded number:	        for (var i = 0; i < customerDetails.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:287:hardcoded string:	            const { studentName = "", productInfo = [] } = customerDetails[i] || {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:288:hardcoded string:	            const { board = "", initialClass = "", finalClass = "", validity = "" } = productInfo[0] || {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:289:hardcoded variable:	            const isEligible = eligibleCustomers.filter(ele => ele.studentName == studentName);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:290:hardcoded string:	            const color = (isEmpty(isEligible)) ? '' : '#D6FCF8'
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:291:hardcoded variable:	            const detail = {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:292:hardcoded number:	                key: i + 1,
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:294:hardcoded object:	                classInfo: `${board}: ${initialClass}-${finalClass}`,
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:302:hardcoded object:	            <Table pagination={false} columns={columns} dataSource={data} bordered={true}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:310:hardcoded variable:	        const currDate = new Date();
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:311:hardcoded variable:	        const currYear = currDate.getFullYear();
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:312:hardcoded variable:	        const currMonth = currDate.getMonth()
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:314:hardcoded number:	            if (currMonth > 1) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:315:hardcoded string:	                if (initialClass == '12') {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:316:hardcoded number:	                    initialClass = 12;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:318:hardcoded number:	                else initialClass = ((initialClass < finalClass)) ? (initialClass + 1) : initialClass;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:323:hardcoded number:	            initialClass = (currMonth > 1 && initialClass < finalClass) ? initialClass + 1 : initialClass;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:332:hardcoded array:	                [`${formNumber}`]: [`${ele.target.value}`]
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:339:hardcoded array:	            [`isUpgradeToByjusClasses-${formNumber}`]: value,
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:340:hardcoded array:	            [`initialClass-${formNumber}`]: initialClass,
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:341:hardcoded string:	            [`state-${formNumber}`]: productInfo["state"],
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:342:hardcoded string:	            [`board-${formNumber}`]: productInfo["board"],
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:343:hardcoded array:	            [`subCourse-${formNumber}`]: studentSubcourse
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:348:hardcoded object:	        const { classType } = this.state
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:349:hardcoded object:	        const { user } = this.props
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:351:hardcoded variable:	        const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:352:hardcoded array:	        let options = [];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:353:hardcoded number:	        initialClass = Number(initialClass) > 3 ? Number(initialClass) : 4;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:357:hardcoded number:	                label: parseInt(initialClass, 10),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:364:hardcoded string:	        if (isPrivilegedUser && classType == "neo") {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:365:hardcoded string:	            options = options.filter(initialClass => !["11", 11, "11+12", "12", 12, "12+", "13", "13+", "14"].includes(initialClass.value))
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:371:hardcoded string:	        const productLearningType = "byjus_classes"
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:372:hardcoded string:	        const isByjusClassForm = ["byjus_classes"].includes(productLearningType);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:374:hardcoded variable:	        let isByjusClassesApplicable = false;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:376:hardcoded object:	        const { formCountArray } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:379:hardcoded variable:	        const currentForm = formCountArray.find(formCount => formCount === formNo);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:380:hardcoded array:	        this.setState({ [`isByjusClasses-${currentForm}`]: false })
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:381:hardcoded array:	        const initialClass = this.state[`initialClass-${currentForm}`];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:383:hardcoded array:	        isByjusClassesApplicable = byjusClassesMap[selectedInitialClass] || false;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:388:hardcoded array:	                [`isByjusClasses-${currentForm}`]: (isByjusClassesApplicable) ? true : false
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:394:hardcoded variable:	        const types = [
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:396:hardcoded string:	            label: "TLP",
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:397:hardcoded string:	            value: "TLP"
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:400:hardcoded string:	            label: "Byjus Classes",
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:401:hardcoded string:	            value: "byjus_classes",
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:408:hardcoded object:	        let formmField = {}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:410:hardcoded string:	        if (extensionType == "TLP") {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:411:hardcoded string:	            formmField["label"] = 'Select TLP - Final Grade'
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:412:hardcoded string:	            formmField["value"] = "tlpFinalGrade"
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:414:hardcoded string:	            formmField["label"] = "Select BYJU's CLASSES - Final Grade"
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:415:hardcoded string:	            formmField["value"] = "byjusClassFinalGrade"
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:421:hardcoded object:	        const classObjConfig = find(classesConfig, { class: selectedInitialClass }) || {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:422:hardcoded string:	        let maxClass = get(classObjConfig, 'maxClass', '');
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:423:hardcoded number:	        if (selectedInitialClass == 4) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:424:hardcoded string:	            maxClass = "8"
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:425:hardcoded number:	        } else if (selectedInitialClass == 6) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:426:hardcoded string:	            maxClass = "10";
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:429:hardcoded number:	        if (selectedFinalClass == 10) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:430:hardcoded string:	            maxClass = "12"
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:432:hardcoded string:	        if (['11', '12'].includes(selectedFinalClass)) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:433:hardcoded number:	            maxClass = 0
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:436:hardcoded variable:	        let filteredClasses = classes.filter((classObj) => {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:437:hardcoded string:	            const classValue = get(classObj, 'value', '');
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:439:hardcoded variable:	            const isClassAllowed = (
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:443:hardcoded string:	            return (["11+12"].indexOf(classValue) < 0 && isClassAllowed);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:446:hardcoded number:	        filteredClasses = filteredClasses.filter(dt => parseInt(dt.value, 10) > parseInt(selectedFinalClass, 10));
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:451:hardcoded object:	        const { selectedProfile = {} } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:452:hardcoded array:	        let { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:453:hardcoded string:	        existingProfiles = existingProfiles.filter(ele => ele.value != 'newProfile');
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:454:hardcoded number:	        for (var i = 0; i < existingProfiles.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:455:hardcoded string:	            if (Object.values(selectedProfile).flat().includes(existingProfiles[i].value) && existingProfiles[i].value !== "newProfile") {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:456:hardcoded array:	                existingProfiles[i].disabled = true;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:458:hardcoded array:	            else { existingProfiles[i].disabled = false; }
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:464:hardcoded variable:	        let finalClassValues = initialClassValues.filter(ele => {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:465:hardcoded string:	            if (ele.value !== "11") return parseInt(ele.value) >= selectedInitialClass
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:467:hardcoded string:	        finalClassValues = finalClassValues.filter(ele => ![12, '12'].includes(ele.value))
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:468:hardcoded number:	        finalClassValues = finalClassValues.splice(0, 3);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:473:hardcoded object:	        const { authDetails, tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:474:hardcoded array:	        const { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:475:hardcoded object:	        const { env, user } = authDetails;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:476:hardcoded string:	        const { role = "" } = user;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:478:hardcoded string:	        const type = get(customerDetails[0], 'type')
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:479:hardcoded object:	        const { selectedInitialClass, selectedFinalClass, currentInitialClass, initialValidity } = subscriptionOptions
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:480:hardcoded string:	        let selectedFinalClassList = [selectedInitialClass, null, '', undefined]
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:483:hardcoded variable:	        const currDate = new Date();
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:484:hardcoded variable:	        const currYear = currDate.getFullYear();
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:485:hardcoded variable:	        const currMonth = currDate.getMonth();
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:486:hardcoded number:	        const currentAcademicYear = currMonth < 1 ? currYear : currYear + 1
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:488:hardcoded string:	        const isSubscriptionEligible = ["development", "local"].includes(env) && ["single", "combo"].includes(type.toLowerCase()) && ["student_success_specialist", "senior_student_success_specialist"].includes(role) && currentAcademicYear == initialValidity && selectedFinalClassList.includes(selectedFinalClass) && selectedInitialClass == currentInitialClass
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:493:hardcoded object:	        const { validity, selectedInitialClass, selectedFinalClass, currentInitialClass, initialValidity } = validityDetails
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:494:hardcoded object:	        const { env } = this.props.authDetails;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:495:hardcoded variable:	        let currentMonth = (new Date()).getMonth();
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:497:hardcoded string:	        const isDevEnv = ['development', 'local'].includes(env)
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:498:hardcoded object:	        const subscriptionOptions = { selectedInitialClass, selectedFinalClass, currentInitialClass, initialValidity }
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:500:hardcoded string:	        //validity = (currentMonth >= 4) ? validity.filter(ele => ele.value != 'x') : validity
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:501:hardcoded variable:	        let formattedValidity = validity && validity.map((entry) => {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:502:hardcoded object:	            let { label, value } = entry;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:503:hardcoded variable:	            let currentYear = getCurrentAcademicYear();
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:504:hardcoded variable:	            let updatedYear = currentYear;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:505:hardcoded string:	            label = label.includes('x') ? eval(label.replace('x', updatedYear)) : label;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:506:hardcoded string:	            value = value.includes('x') ? eval(value.replace('x', updatedYear)) : value;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:514:hardcoded variable:	        const isSubscriptionEligible = this.getSubscriptionEligibility(subscriptionOptions)
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:516:hardcoded string:	            formattedValidity.push({ label: "Monthly Subscription", value: 'subscription' })
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:519:hardcoded string:	        formattedValidity = formattedValidity.filter(validity => validity.value !== "TRIAL_PACK");
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:523:hardcoded number:	                formattedValidity = [{ label: 2024, value: 2024 }]
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:528:hardcoded number:	                formattedValidity = [{ label: 2024, value: 2024 }]
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:531:hardcoded number:	        return formattedValidity.slice(0, 2);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:535:hardcoded number:	        for (let i = 0; i < products.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:536:hardcoded string:	            const sku = get(products[i], "sku", "")
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:537:hardcoded string:	            const skuSplit = sku.split("/")
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:538:hardcoded number:	            if (skuSplit.length > 1) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:539:hardcoded string:	                const subCourse = skuSplit[1].split(" ")[0]
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:540:hardcoded string:	                if (subCourse) return subCourse == "JEE+NEET" ? "JEE/NEET" : subCourse
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:546:hardcoded array:	        const { tlpOrderData, existingProfiles = [], productConfig = {}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:547:hardcoded object:	            , authDetails, user, leadDetails = {} } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:548:hardcoded object:	        const { env, featureEnableList } = authDetails;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:549:hardcoded object:	        const { unit } = user;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:550:hardcoded string:	        const isSingleYearByjusClasses = get(featureEnableList, 'single_year_byjus_classes');
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:551:hardcoded array:	        let { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:552:hardcoded object:	        const { classType, productCombination, tablet: selectedTablets } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:553:hardcoded array:	        customerDetails = isArray(customerDetails) ? customerDetails : [customerDetails];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:554:hardcoded variable:	        const customerDetail = customerDetails.filter(ele => ele.studentId === studentId);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:555:hardcoded number:	        const { productInfo = [], type, products } = customerDetail[formSerialNum - 1] || customerDetail[0] || {}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:556:hardcoded number:	        let { initialClass, finalClass, board, validity, subCourse, state, tablet = {}, } = productInfo[0];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:557:hardcoded variable:	        const initialValidity = validity;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:558:hardcoded variable:	        const studentSubcourse = subCourse ? subCourse : this.getSubCourse(products)
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:560:hardcoded number:	        //let maxFinalClassValue = (Number(finalClass) <= ((initialClass) + 2)) ? Number(finalClass) : ((initialClass) + 2);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:563:hardcoded object:	        const isUpgradeRequired = get(this.state, `isUpgradeToByjusClasses-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:564:hardcoded object:	        const selectedInitialClass = get(this.state, `initialClass-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:565:hardcoded object:	        const selectedFinalClass = get(this.state, `finalClass-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:566:hardcoded variable:	        let initialClassValues = this.getInitialGrade(initialClass, finalClass);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:567:hardcoded object:	        const { isDevEnv } = window;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:568:hardcoded string:	        initialClassValues = isSingleYearByjusClasses || (isDevEnv && ['K3', 'K9'].includes(unit)) ? [initialClassValues[0]] : initialClassValues;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:569:hardcoded string:	        const currentInitialClass = initialClassValues.length ? get(initialClassValues[0], 'value') : '';
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:571:hardcoded array:	        const { Products = [], Boards = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:573:hardcoded object:	        const productConfiguration = find(Products, { formattedName: type }) || {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:574:hardcoded array:	        const validityOptions = productConfiguration.validity || [];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:575:hardcoded array:	        const { tablets = [] } = productConfiguration || {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:577:hardcoded object:	        const selectedBoardConfig = find(Boards, { formattedName: board }) || {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:578:hardcoded variable:	        const classesConfig = selectedBoardConfig.classes;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:579:hardcoded string:	        const classes = getClasses(selectedBoardConfig,user, 'tlpUpgrade');
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:580:hardcoded variable:	        const byjusClassesMap = getByjusClassesMap(selectedBoardConfig.classes);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:582:hardcoded object:	        const validityDetails = { validity: validityOptions, selectedInitialClass, selectedFinalClass, currentInitialClass, initialValidity }
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:583:hardcoded object:	        const extensionType = get(this.state, `extensionType-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:584:hardcoded object:	        const addExtension = get(this.state, `addExtension-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:586:hardcoded variable:	        const fields = [{
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:587:hardcoded string:	            type: 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:589:hardcoded string:	            name: 'studentName'
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:591:hardcoded string:	            type: 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:593:hardcoded string:	            name: 'board'
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:596:hardcoded string:	            type: 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:598:hardcoded string:	            name: 'subCourse'
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:601:hardcoded string:	            type: 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:603:hardcoded string:	            name: 'state'
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:606:hardcoded string:	            type: 'checkbox',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:607:hardcoded string:	            name: 'isUpgradeToByjusClasses',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:608:hardcoded number:	            onChange: (...params) => this.onCheckboxChange(...params, formNumber, productInfo[0], initialClass, studentSubcourse),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:609:hardcoded string:	            checkBoxLabel: 'Do you want to upgrade?'
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:611:hardcoded string:	            type: (!isUpgradeRequired) ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:613:hardcoded string:	            name: 'initialClass',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:614:hardcoded string:	            label: 'Select Byjus Class-Initial Grade',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:619:hardcoded string:	            type: (type === 'single' || !isUpgradeRequired) ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:620:hardcoded string:	            name: 'finalClass',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:621:hardcoded string:	            label: "Select Byjus Class-Final Grade",
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:627:hardcoded string:	            type: (!isUpgradeRequired) ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:629:hardcoded string:	            name: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:630:hardcoded string:	            label: 'Select Initial Validity',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:634:hardcoded string:	            message: "Please Select Initial Validity"
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:636:hardcoded string:	            type: isDevEnv &&  (type === 'single' || ( type === 'combo' && finalClass == selectedFinalClass)) ? 'checkbox' : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:637:hardcoded string:	            name: 'addExtension',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:638:hardcoded string:	            checkBoxLabel: "Extend with",
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:641:hardcoded string:	            type: isDevEnv && addExtension ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:642:hardcoded string:	            name: 'extensionType',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:643:hardcoded string:	            label: 'Select Extension Type',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:647:hardcoded string:	            message: "PLlease Select Extension Type"
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:650:hardcoded string:	            type: isDevEnv && extensionType ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:651:hardcoded string:	            name: this.getLabelAndValueField(extensionType)["value"],
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:652:hardcoded string:	            label: this.getLabelAndValueField(extensionType)["label"],
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:656:hardcoded string:	            message: `Please ${this.getLabelAndValueField(extensionType)["label"]}`
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:659:hardcoded string:	            type: isUpgradeRequired ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:660:hardcoded string:	            options: checkPrivTabletAccess(leadDetails, user) ? getAllAvailableTablets() : getTablets({ tablets, authDetails, productCombination: 'byjus_classes_upgrade' }),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:661:hardcoded string:	            name: 'tablet',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:662:hardcoded string:	            label: 'Select Tablet',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:664:hardcoded string:	            message: "Please select Tablet",
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:666:hardcoded string:	            type: ((existingProfiles.length > 0 && isUpgradeRequired) ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:668:hardcoded string:	            name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:669:hardcoded string:	            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:670:hardcoded string:	            helpText: "Please make sure the premium account chosen has the classes for which BHLP is required.",
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:672:hardcoded string:	            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:673:hardcoded number:	            required: (existingProfiles.length > 0 && isUpgradeRequired) ? true : false,
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:675:hardcoded string:	                display: 'block',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:676:hardcoded string:	                height: '30px',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:677:hardcoded string:	                lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:687:hardcoded array:	        const productDetailsForm = this.refs[`productDetailsForm-${formNumber}`];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:688:hardcoded array:	        const schoolForm = this.refs[`schoolForm-${formNumber}`]
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:690:hardcoded variable:	        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:693:hardcoded string:	        if (name === "initialClass") {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:695:hardcoded string:	                finalClass: "", validity: "",
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:696:hardcoded string:	                mathPercent: "", sciencePercent: "", languageOfInstruction: ""
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:701:hardcoded string:	        if (name === "finalClass") {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:702:hardcoded string:	            detailsForm && detailsForm.setFieldsValue({ validity: "" });
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:705:hardcoded string:	        if (name === "tablet") {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:706:hardcoded string:	            const { label = "" } = props || {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:707:hardcoded number:	            detailsForm && detailsForm.setFieldsValue({ selectD4SDCard: false });
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:709:hardcoded array:	            const studentName = this.state[`siblingName-${formNumber}`];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:711:hardcoded string:	                [`tabletId-${formNumber}`]: value ? `T-${value}-${studentName}` : "",
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:712:hardcoded array:	                [`tabletName-${formNumber}`]: `${label}`,
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:718:hardcoded array:	            [`${name}-${formNumber}`]: value,
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:726:hardcoded string:	        this.setState({ classType: value ? "neo" : "oneToMega" });
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:728:hardcoded object:	        const { formCountArray } = this.state
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:730:hardcoded array:	            this.setState({ [`isByjusClasses-${formNo}`]: false })
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:731:hardcoded array:	            const productDetailsForm = this.refs[`productDetailsForm-${formNo}`];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:732:hardcoded variable:	            const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:735:hardcoded string:	                productLearningType: "", initialClass: "", finalClass: "",
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:736:hardcoded string:	                byjusClassFinalGrade: "", validity: "", tlpFinalGrade: "", courseType: "", tablet: "",
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:737:hardcoded string:	                mathPercent: "", sciencePercent: "", languageOfInstruction: "", flowOfTopic: value ? "default" : ""
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:744:hardcoded object:	        const { eligibleCustomers } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:745:hardcoded array:	        const studentName = eligibleCustomers[index].studentName;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:746:hardcoded array:	        const studentId = eligibleCustomers[index].studentId;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:747:hardcoded variable:	        const fields = this.getFormFields(formNumber, formSerialNum, studentName, studentId, index);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:748:hardcoded array:	        let { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:749:hardcoded string:	        const currentProfile = get(existingProfiles.find(({ label }) => label.indexOf(studentName) >= 0), 'value');
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:753:hardcoded object:	                    heading={`Student #${studentName}`}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:754:hardcoded string:	                    initialValues={{ userProfile: currentProfile, flowOfTopic: "default" }}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:755:hardcoded object:	                    fields={fields}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:756:hardcoded object:	                    ref={`productDetailsForm-${formNumber}`}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:757:hardcoded object:	                    key={studentName}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:764:hardcoded array:	        const { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:765:hardcoded object:	        const { eligibleCustomers, formCountArray } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:767:hardcoded object:	        const selectedProfile = {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:768:hardcoded number:	        for (var i = 0; i < formCountArray.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:769:hardcoded array:	            const studentName = eligibleCustomers[i].studentName;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:770:hardcoded string:	            const currentProfile = get(existingProfiles.find(({ label }) => label.indexOf(studentName) >= 0), 'value');
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:771:hardcoded array:	            selectedProfile[formCountArray[i]] = currentProfile;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:774:hardcoded array:	                [`siblingName-${formCountArray[i]}`]: studentName
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:780:hardcoded object:	        const { tlpOrderData = {}, identifier, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:781:hardcoded array:	        const { paymentDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:782:hardcoded string:	        const emiPayment = paymentDetails.find(payment => payment.type === "EMI");
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:783:hardcoded object:	        const { isDevEnv } = window;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:786:hardcoded object:	            this.setState({ eligibleForNewLoan: true })
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:788:hardcoded string:	            if (!isEmpty(emiPayment) && !["payu", "razorpay", "shopse"].includes(get(emiPayment, "paymentType", "").toLowerCase())) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:791:hardcoded string:	                const referenceId = get(emiPayment, "referenceId", "");
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:792:hardcoded string:	                const method = get(emiPayment, "paymentType", "");
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:793:hardcoded string:	                const amount = get(emiPayment, "amount", "");
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:797:hardcoded string:	                    url: '/api/byjusclassupgrade/checkIsEmiAllowedOrNot',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:798:hardcoded string:	                    method: 'POST',
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:799:hardcoded object:	                    body: { referenceId, method, amount, identifier }
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:802:hardcoded object:	                    const { data = {} } = response;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:803:hardcoded string:	                    this.setState({ eligibleForNewLoan: get(data, "eligibleForNewLoan", false) })
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:805:hardcoded object:	                    this.setState({ error });
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:814:hardcoded array:	        let formCountArray = [];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:815:hardcoded object:	        const { tlpOrderData, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:816:hardcoded array:	        let { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:817:hardcoded array:	        customerDetails = isArray(customerDetails) ? customerDetails : [customerDetails];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:818:hardcoded array:	        let { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:819:hardcoded variable:	        const eligibleCustomers = customerDetails.filter(ele => {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:820:hardcoded array:	            const { productInfo = [] } = ele;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:821:hardcoded number:	            const { initialClass, finalClass, validity } = productInfo[0];
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:822:hardcoded variable:	            const currentInitialClass = this.getInitialClassValue(initialClass, finalClass, validity);
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:823:hardcoded string:	            return (![12, '12'].includes(currentInitialClass))
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:825:hardcoded string:	        const { type = "", products } = eligibleCustomers[0] || {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:827:hardcoded object:	        const selectedProfile = {};
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:828:hardcoded variable:	        let currentTime = (new Date()).getTime();
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:829:hardcoded number:	        for (var i = 0; i < eligibleCustomers.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:832:hardcoded string:	            const currentProfile = get(existingProfiles.find(({ label }) => label.indexOf(eligibleCustomers[i].studentName) >= 0), 'value');
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:835:hardcoded object:	        this.setState({ eligibleCustomers, formCountArray, selectedProfile, productType: type });
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:836:hardcoded object:	        const { env } = authDetails || {}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:838:hardcoded string:	        this.setState({ classType: "neo" })
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:842:hardcoded object:	        const { classType } = this.state
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:843:hardcoded string:	        if (classType != "neo") {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:844:hardcoded array:	            return this.state[`isByjusClasses-${formNo}`] && this.state[`isUpgradeToByjusClasses-${formNo}`] && this.state[`initialClass-${formNo}`] && this.state[`validity-${formNo}`]
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:845:hardcoded array:	        } else if (this.state[`isUpgradeToByjusClasses-${formNo}`]) {
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:846:hardcoded variable:	            const isEligible = getBatchesEligibility(this.state, formNo)
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:852:hardcoded object:	        const { changeNextBtnMode, authDetails, user } = this.props; //To render some specific component after the main product details form
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:853:hardcoded object:	        const { error, productType, formCountArray, classType } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:854:hardcoded variable:	        const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:855:hardcoded object:	        const { env } = authDetails || {}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:859:hardcoded string:	                <div className="card m-2">
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:860:hardcoded string:	                    <div style={{ paddingBottom: '12px' }}>
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:861:hardcoded object:	                        <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:863:hardcoded string:	                        <Row style={{ overflow: 'auto', height: '160px', padding: '1%' }}>  {this.showOrderDetails()} </Row>
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:865:hardcoded string:	                            ref="classTypeForm"
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:866:hardcoded object:	                            classType={classType}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:867:hardcoded object:	                            changeClassType={this.changeClassType}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:870:hardcoded string:	                            const isProficiencyAndFot = isProficiencyAndFotAvailable({ state: this.state, props: this.props, formNumber: formNo, type: "tlpToByjusClassUpgrade" });
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:871:hardcoded variable:	                            const isBatchesEligible = this.checkBatchesEligibility(formNo, env)
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:872:hardcoded number:	                            const formSerialNum = index + 1;
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:874:hardcoded object:	                                <Fragment key={index}>
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:875:hardcoded object:	                                    {this.buildSiblingProductForm(formSerialNum, formNo, index)}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:878:hardcoded object:	                                            ref={`schoolForm-${formNo}`}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:879:hardcoded array:	                                            board={this.state[`board-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:880:hardcoded array:	                                            grade={this.state[`initialClass-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:881:hardcoded array:	                                            premiumId={this.state[`premiumId-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:882:hardcoded array:	                                            state={this.state[`state-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:883:hardcoded object:	                                            formNumber={formNo}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:884:hardcoded object:	                                            handleSiblingChanges={this.handleChanges}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:885:hardcoded object:	                                            handleClassBlurEvent={this.handleClassBlurEvent}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:886:hardcoded object:	                                            props={this.props}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:891:hardcoded object:	                                    {/* Batch Details */}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:893:hardcoded object:	                                        ref={`byjusClassesDetailsForm-${formNo}`}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:894:hardcoded array:	                                        initialClass={this.state[`initialClass-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:895:hardcoded array:	                                        board={this.state[`board-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:896:hardcoded array:	                                        state={this.state[`state-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:897:hardcoded array:	                                        schoolState={this.state[`schoolState-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:898:hardcoded object:	                                        productType={productType}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:899:hardcoded array:	                                        validity={this.state[`validity-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:900:hardcoded array:	                                        subCourse={this.state[`subCourse-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:901:hardcoded string:	                                        isV4Batch={this.state[`validity-${formNo}`].toString() == "2024" ? true : false}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:902:hardcoded string:	                                        productCombination="byjus_classes_upgrade"
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:903:hardcoded array:	                                        proficiency={this.state[`proficiency-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:904:hardcoded array:	                                        trackId={this.state[`trackId-${formNo}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:905:hardcoded object:	                                        classType={classType}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:912:hardcoded string:	                            ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:913:hardcoded object:	                            onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:914:hardcoded object:	                            getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:915:hardcoded object:	                            changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:916:hardcoded object:	                            setError={this.setError}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:917:hardcoded object:	                            eligibleForNewLoan={this.state.eligibleForNewLoan}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:918:hardcoded number:	                            validity={this.state[`validity-${formCountArray[0]}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/byjusclass/tlpToByjusClassesUpgrade.js:930:hardcoded object:	export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(TlpToByjusClassUpgrade);
