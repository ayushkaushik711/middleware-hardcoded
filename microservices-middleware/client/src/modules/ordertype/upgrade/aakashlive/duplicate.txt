microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:1:hardcoded object:import React, { Component, Fragment } from 'react';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:4:hardcoded object:import { get, isEmpty, find, isEqual, isArray } from 'lodash';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:5:hardcoded object:import { Table, Row, Col } from 'antd';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:7:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:8:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:9:hardcoded object:import { saveProductDetails, addLoader, removeLoader, resetPrice } from 'modules/product/productReducer';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:10:hardcoded object:import { checkIsPrivilegedUser } from 'modules/product/components/productHelper';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:11:hardcoded object:import { saveSalesAndCustomerDetails, saveIdentifier } from 'modules/details/salesCustomerReducer';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:12:hardcoded file path:import ProductDetailsForm from 'modules/product/components/ProducDetailsForm';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:13:hardcoded file path:import FetchPrices from 'modules/product/components/FetchPrices';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:14:hardcoded number:import { getK12InitialClassValue } from 'modules/order/orderSummaryHelper';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:15:hardcoded object:import { getCurrentAcademicYear } from 'lib/validityHelper';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:17:hardcoded object:const { leadquaredRelatedPermissions } = require('utility/screenPermission');
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:19:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:20:hardcoded string:    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:21:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:22:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:23:hardcoded string:    tlpOrderData: get(state, 'auth.tlpOrderData'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:24:hardcoded string:    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:25:hardcoded string:    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:26:hardcoded string:    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:27:hardcoded string:    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:28:hardcoded string:    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:29:hardcoded string:    leadDetails: get(state, 'auth.leadDetails', {}),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:30:hardcoded string:    orderPunchingType: get(state, 'auth.orderPunchingType'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:33:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:58:hardcoded array:            eligibleCustomers: [],
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:67:hardcoded string:        const { leadDetails = {}, authDetails = {}, orderPunchingType, identifier = '' } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:68:hardcoded object:        const { formCountArray } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:69:hardcoded object:        const { productType } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:70:hardcoded array:        let updatedStudentDetails = [];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:71:hardcoded array:        let bhlpCourseDetails = [];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:73:hardcoded number:        for (var i = 0; i < formCountArray.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:74:hardcoded array:            const form = this.refs[`productDetailsForm-${formCountArray[i]}`];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:76:hardcoded object:            const details = await form.getProductDetails() || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:77:hardcoded string:            let productDetails = get(details, 'productDetails') || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:78:hardcoded object:            if (isEmpty(productDetails)) { return };
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:79:hardcoded number:            /**If any sibling data is empty , make siblingCount as 0 and student Array empty to collect data first */
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:80:hardcoded array:            !isEmpty(productDetails) ? updatedStudentDetails.push(productDetails) : (updatedStudentDetails = []);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:83:hardcoded string:        leadDetails["orderPunchedByRole"] = get(authDetails.user, 'role', "");
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:86:hardcoded variable:            const payload = {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:87:hardcoded string:                productCombination: "AAKASH_LIVE_UPGRADE",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:97:hardcoded string:                url: '/api/aakashliveupgrade/getUpgradeProduct'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:103:hardcoded object:        const { authDetails, tlpOrderData, identifier, leadDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:104:hardcoded object:        const { user, env } = authDetails || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:105:hardcoded string:        const userPermissions = get(user, 'permissions', []);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:106:hardcoded variable:        const isPriviledgedUser = userPermissions.includes(leadquaredRelatedPermissions.allownMultipleOrderOnSameProspectId);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:107:hardcoded string:        leadDetails["loggedInEmailId"] = get(authDetails, 'loggedInEmailId');
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:108:hardcoded string:        leadDetails["createdByEmailId"] = get(authDetails, "createdByEmailId", "");
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:109:hardcoded string:        leadDetails["leadCreatedAt"] = get(authDetails, "leadCreatedAt", "");
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:110:hardcoded string:        leadDetails["createdByRole"] = get(authDetails, "createdByRole", "");
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:111:hardcoded string:        leadDetails["orderPunchedByRole"] = get(authDetails.user, 'role', "");
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:112:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:124:hardcoded string:                url: '/api/aakashliveupgrade/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:125:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:128:hardcoded string:                const { productDetails, identifier, salesDetails, customerDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:134:hardcoded object:                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:136:hardcoded string:                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:138:hardcoded object:                this.setState({ error });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:145:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:146:hardcoded string:        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:151:hardcoded object:        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:154:hardcoded object:            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:156:hardcoded string:                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:160:hardcoded string:                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:163:hardcoded string:                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:164:hardcoded object:                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:170:hardcoded object:        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:174:hardcoded object:        const { tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:175:hardcoded array:        const { eligibleCustomers = [] } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:176:hardcoded array:        const { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:177:hardcoded variable:        const columns = [
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:179:hardcoded string:                title: 'Student Name',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:180:hardcoded string:                dataIndex: 'name',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:181:hardcoded string:                key: 'name',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:185:hardcoded object:                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:187:hardcoded object:                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:190:hardcoded number:                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:193:hardcoded string:                title: 'Class Info',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:194:hardcoded string:                dataIndex: 'classInfo',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:195:hardcoded string:                key: 'classInfo',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:196:hardcoded number:                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:200:hardcoded object:                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:202:hardcoded object:                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:207:hardcoded string:                title: 'Validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:208:hardcoded string:                dataIndex: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:209:hardcoded string:                key: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:210:hardcoded number:                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:215:hardcoded object:                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:217:hardcoded object:                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:222:hardcoded array:        let data = [];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:223:hardcoded number:        for (var i = 0; i < customerDetails.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:224:hardcoded string:            const { studentName = "", productInfo = [] } = customerDetails[i] || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:225:hardcoded string:            const { board = "", initialClass = "", finalClass = "", validity = "" } = productInfo[0] || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:226:hardcoded variable:            const isEligible = eligibleCustomers.filter(ele => ele.studentName == studentName);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:227:hardcoded string:            const color = (isEmpty(isEligible)) ? '' : '#D6FCF8'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:228:hardcoded variable:            const detail = {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:229:hardcoded number:                key: i + 1,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:231:hardcoded object:                classInfo: `${board}: ${initialClass}-${finalClass}`,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:239:hardcoded object:            <Table pagination={false} columns={columns} dataSource={data} bordered={true}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:249:hardcoded array:                [`${formNumber}`]: [`${ele.target.value}`]
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:256:hardcoded array:            [`isUpgrade-${formNumber}`]: value,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:257:hardcoded array:            [`initialClass-${formNumber}`]: initialClass,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:258:hardcoded string:            [`state-${formNumber}`]: productInfo["state"],
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:259:hardcoded string:            [`board-${formNumber}`]: productInfo["board"],
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:267:hardcoded string:        const currAcadYear = getCurrentAcademicYear('k12')
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:268:hardcoded number:        let currtInitialClass = (currAcadYear + 1) - initialValidity + parseInt(initialClass)
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:269:hardcoded string:        if (finalClass == "13+") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:270:hardcoded string:            return [{ label: "12th Pass", value: "13+" }]
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:273:hardcoded object:            label: `${currtInitialClass}`,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:274:hardcoded object:            value: `${currtInitialClass}`
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:280:hardcoded object:        const { selectedProfile = {} } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:281:hardcoded array:        let { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:282:hardcoded string:        existingProfiles = existingProfiles.filter(ele => ele.value != 'newProfile');
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:283:hardcoded number:        for (var i = 0; i < existingProfiles.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:284:hardcoded string:            if (Object.values(selectedProfile).flat().includes(existingProfiles[i].value) && existingProfiles[i].value !== "newProfile") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:285:hardcoded array:                existingProfiles[i].disabled = true;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:287:hardcoded array:            else { existingProfiles[i].disabled = false; }
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:293:hardcoded string:        if (finalClass == "13+") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:294:hardcoded string:            return [{ label: "12th Pass", value: "13+" }]
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:297:hardcoded object:            label: `${finalClass}`,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:298:hardcoded object:            value: `${finalClass}`
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:303:hardcoded string:        const currAcadYear = getCurrentAcademicYear('k12')
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:305:hardcoded number:            label: `${currAcadYear + 1}`,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:306:hardcoded number:            value: `${currAcadYear + 1}`
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:311:hardcoded number:        for (let i = 0; i < products.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:312:hardcoded string:            const sku = get(products[i], "sku", "")
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:313:hardcoded string:            const skuSplit = sku.split("/")
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:314:hardcoded number:            if (skuSplit.length > 1) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:315:hardcoded string:                const subCourse = skuSplit[1].split(" ")[0]
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:316:hardcoded string:                if (subCourse) return subCourse == "JEE+NEET" ? "JEE/NEET" : subCourse
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:323:hardcoded string:        if (initialClass === "12") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:324:hardcoded string:            if (subCourse === "JEE") return "JEE-ACHIEVER"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:325:hardcoded string:            if (subCourse === "NEET") return "NEET-SCHOLAR"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:327:hardcoded string:        else if (initialClass === "13+") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:328:hardcoded string:            if (subCourse === "JEE") return "JEE-ACHIEVER"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:334:hardcoded array:        const { tlpOrderData, existingProfiles = [], productConfig = {}, orderPunchingType } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:335:hardcoded string:        const isAakashLiveUpgrade = orderPunchingType === 'AAKASH_LIVE_UPGRADE'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:336:hardcoded array:        let { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:337:hardcoded array:        customerDetails = isArray(customerDetails) ? customerDetails : [customerDetails];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:338:hardcoded variable:        const customerDetail = customerDetails.filter(ele => ele.studentId === studentId);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:339:hardcoded number:        const { productInfo = [], type, products } = customerDetail[0] || {}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:340:hardcoded number:        let { initialClass, finalClass, board, validity, subCourse, state } = productInfo[0];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:341:hardcoded variable:        const initialValidity = validity;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:342:hardcoded variable:        let studentSubcourse = subCourse ? subCourse : this.getSubCourse(products)
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:343:hardcoded number:        // initialClass = getK12InitialClassValue(initialClass, finalClass, validity);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:344:hardcoded object:        const isUpgradeRequired = get(this.state, `isUpgrade-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:345:hardcoded object:        const selectedInitialClass = get(this.state, `initialClass-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:346:hardcoded object:        const selectedFinalClass = get(this.state, `finalClass-${formNumber}`);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:347:hardcoded variable:        const initialClassValues = this.getInitialGrade(initialClass, finalClass, initialValidity)
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:348:hardcoded variable:        const finalClassValues = this.filterFinalGrade(finalClass)
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:349:hardcoded string:        const currentInitialClass = initialClassValues.length ? get(initialClassValues[0], 'value') : ''
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:351:hardcoded array:        const { Products = [], Boards = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:353:hardcoded object:        const productConfiguration = find(Products, { formattedName: type }) || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:354:hardcoded array:        const validityOptions = productConfiguration.validity || [];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:355:hardcoded object:        const selectedBoardConfig = find(Boards, { formattedName: board }) || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:356:hardcoded object:        const validityDetails = { initialClass, finalClass, selectedInitialClass, selectedFinalClass, initialValidity }
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:358:hardcoded variable:        const fields = [{
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:359:hardcoded string:            type: 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:361:hardcoded string:            name: 'studentName'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:363:hardcoded string:            type: 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:365:hardcoded string:            name: 'board'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:368:hardcoded string:            type: 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:370:hardcoded string:            name: 'state'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:373:hardcoded string:            type: 'checkbox',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:374:hardcoded string:            name: 'isUpgrade',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:375:hardcoded number:            onChange: (...params) => this.onCheckboxChange(...params, formNumber, productInfo[0], initialClass, studentSubcourse),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:376:hardcoded string:            checkBoxLabel: 'Do you want to upgrade?'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:378:hardcoded string:            type: (!isUpgradeRequired) ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:380:hardcoded string:            name: 'initialClass',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:381:hardcoded string:            label: 'Select Initial Aakash Live Class',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:385:hardcoded string:            type: (!isUpgradeRequired) ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:386:hardcoded string:            name: 'finalClass',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:387:hardcoded string:            label: 'Select Final Aakash Live Class',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:393:hardcoded string:            type: (!isUpgradeRequired) ? 'hidden' : 'text',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:394:hardcoded string:            name: 'subCourse',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:395:hardcoded string:            label: 'Select Subject',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:399:hardcoded string:            type: (!isUpgradeRequired) ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:401:hardcoded string:            name: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:402:hardcoded string:            label: 'Select Initial Validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:405:hardcoded string:            message: "Please Select Initial Validity"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:408:hardcoded string:            type: ((existingProfiles.length > 0 && isUpgradeRequired) ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:410:hardcoded string:            name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:411:hardcoded string:            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:412:hardcoded string:            helpText: "Please make sure the premium account chosen has the classes for which BHLP is required.",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:414:hardcoded string:            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:417:hardcoded string:                display: 'block',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:418:hardcoded string:                height: '30px',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:419:hardcoded string:                lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:427:hardcoded array:        const productDetailsForm = this.refs[`productDetailsForm-${formNumber}`];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:428:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:431:hardcoded string:        if (name == "initialClass") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:432:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ finalClass: "", validity: "" });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:434:hardcoded string:        if (name == "finalClass") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:435:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ validity: "" });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:439:hardcoded array:            [`${name}-${formNumber}`]: value,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:447:hardcoded object:        const { eligibleCustomers } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:448:hardcoded array:        const studentName = eligibleCustomers[index].studentName;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:449:hardcoded array:        const studentId = eligibleCustomers[index].studentId;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:450:hardcoded variable:        const fields = this.getFormFields(formNumber, formSerialNum, studentName, studentId, index);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:451:hardcoded array:        let { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:452:hardcoded string:        const currentProfile = get(existingProfiles.find(({ label }) => label.indexOf(studentName) >= 0), 'value');
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:456:hardcoded object:                    heading={`Student #${studentName}`}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:457:hardcoded object:                    initialValues={{ userProfile: currentProfile }}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:458:hardcoded object:                    fields={fields}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:459:hardcoded object:                    ref={`productDetailsForm-${formNumber}`}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:460:hardcoded object:                    key={studentName}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:467:hardcoded array:        const { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:468:hardcoded object:        const { eligibleCustomers, formCountArray } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:470:hardcoded object:        const selectedProfile = {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:471:hardcoded number:        for (var i = 0; i < formCountArray.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:472:hardcoded array:            const studentName = eligibleCustomers[i].studentName;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:473:hardcoded string:            const currentProfile = get(existingProfiles.find(({ label }) => label.indexOf(studentName) >= 0), 'value');
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:474:hardcoded array:            selectedProfile[formCountArray[i]] = currentProfile;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:475:hardcoded object:            this.setState({ selectedProfile });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:480:hardcoded array:        let formCountArray = [];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:481:hardcoded object:        const { tlpOrderData, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:482:hardcoded array:        let { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:483:hardcoded array:        customerDetails = isArray(customerDetails) ? customerDetails : [customerDetails];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:484:hardcoded array:        let { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:485:hardcoded variable:        const eligibleCustomers = customerDetails.filter(ele => {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:486:hardcoded array:            const { productInfo = [] } = ele;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:487:hardcoded number:            const { initialClass, finalClass, validity } = productInfo[0];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:488:hardcoded number:            const currentInitialClass = getK12InitialClassValue(initialClass, finalClass, validity);
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:489:hardcoded string:            return (![''].includes(currentInitialClass))
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:491:hardcoded string:        const { type = "", products } = eligibleCustomers[0] || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:493:hardcoded object:        const selectedProfile = {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:494:hardcoded variable:        let currentTime = (new Date()).getTime();
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:495:hardcoded number:        for (var i = 0; i < eligibleCustomers.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:498:hardcoded string:            const currentProfile = get(existingProfiles.find(({ label }) => label.indexOf(eligibleCustomers[i].studentName) >= 0), 'value');
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:501:hardcoded object:        this.setState({ eligibleCustomers, formCountArray, selectedProfile, productType: type });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:502:hardcoded object:        const { env } = authDetails || {}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:507:hardcoded object:        const { changeNextBtnMode } = this.props; //To render some specific component after the main product details form
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:508:hardcoded object:        const { error, productType, formCountArray, authDetails, user } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:509:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:510:hardcoded object:        const { env } = authDetails || {}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:513:hardcoded string:                <div className="card m-2">
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:514:hardcoded string:                    <div style={{ paddingBottom: '12px' }}>
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:515:hardcoded object:                        <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:517:hardcoded string:                        <Row style={{ overflow: 'auto', height: '160px', padding: '1%' }}>  {this.showOrderDetails()} </Row>
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:519:hardcoded number:                            const formSerialNum = index + 1;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:521:hardcoded object:                                <Fragment key={index}>
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:522:hardcoded object:                                    {this.buildSiblingProductForm(formSerialNum, formNo, index)}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:527:hardcoded string:                            ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:528:hardcoded object:                            onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:529:hardcoded object:                            getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:530:hardcoded object:                            changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:531:hardcoded object:                            setError={this.setError}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:532:hardcoded object:                            eligibleForNewLoan={this.state.eligibleForNewLoan}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:533:hardcoded number:                            validity={this.state[`validity-${formCountArray[0]}`]}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashlive/AakashLiveUpgradeProductPage.js:544:hardcoded object:export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(AakashLiveUpgrade);