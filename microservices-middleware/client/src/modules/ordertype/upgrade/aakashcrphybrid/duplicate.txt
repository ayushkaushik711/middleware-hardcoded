microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:1:hardcoded object:import React, { Component, Fragment } from 'react';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:2:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:4:hardcoded object:import { get, isEmpty, find, isEqual, isArray, size } from 'lodash';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:5:hardcoded object:import { Table, Row, Col } from 'antd';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:7:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:8:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:9:hardcoded object:import { saveProductDetails, addLoader, removeLoader, resetPrice } from 'modules/product/productReducer';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:10:hardcoded object:import { saveSalesAndCustomerDetails, saveIdentifier } from 'modules/details/salesCustomerReducer';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:11:hardcoded file path:import ProductDetailsForm from 'modules/product/components/ProducDetailsForm';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:12:hardcoded object:import { getCurrentAcademicYear } from './../../../../lib/validityHelper'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:13:hardcoded file path:import FetchPrices from 'modules/product/components/FetchPrices';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:14:hardcoded string:import '../byjusclass/style.scss';
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:16:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:17:hardcoded string:    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:18:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:19:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:20:hardcoded string:    tlpOrderData: get(state, 'auth.tlpOrderData'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:21:hardcoded string:    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:22:hardcoded string:    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:23:hardcoded string:    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:24:hardcoded string:    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:25:hardcoded string:    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:26:hardcoded string:    leadDetails: get(state, 'auth.leadDetails', {}),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:27:hardcoded string:    user: get(state, "auth.details.user", {})
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:30:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:55:hardcoded array:            eligibleCustomers: [],
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:60:hardcoded string:            classType: "neo"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:65:hardcoded object:        const { leadDetails = {}, authDetails = {}, productConfig, identifier, tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:66:hardcoded object:        const { orderPunchingCategory, orderId } = tlpOrderData
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:67:hardcoded array:        const form = this.refs[`productDetailsForm`];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:68:hardcoded object:        const details = await form.getProductDetails() || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:69:hardcoded string:        let productDetails = get(details, 'productDetails') || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:70:hardcoded variable:        const upgradeOrderDetails = {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:71:hardcoded string:            "baseOrderId": orderId,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:72:hardcoded string:            "newCourse": "aakash_crp_hybrid_upgrade",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:73:hardcoded string:            "oldCourse": orderPunchingCategory
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:75:hardcoded string:        productDetails["upgradeOrderDetails"] = upgradeOrderDetails
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:80:hardcoded string:        leadDetails["orderPunchedByRole"] = get(authDetails.user, 'role', "");
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:83:hardcoded variable:            const payload = {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:86:hardcoded string:                productCombination: "AAKASH_CRP_HYBRID_UPGRADE"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:91:hardcoded string:                url: '/api/aakashCrpHybridUpgrade/getProduct'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:97:hardcoded object:        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:98:hardcoded object:        const { student } = productDetails;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:99:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:108:hardcoded string:                url: '/api/aakashCrpHybridUpgrade/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:109:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:112:hardcoded string:                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:116:hardcoded object:                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:118:hardcoded string:                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:120:hardcoded object:                this.setState({ error });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:127:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:128:hardcoded string:        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:133:hardcoded object:        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:136:hardcoded object:            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:138:hardcoded string:                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:142:hardcoded string:                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:145:hardcoded string:                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:146:hardcoded object:                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:152:hardcoded object:        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:156:hardcoded object:        const { tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:157:hardcoded array:        const { neoProductInfo, customerDetails = [] } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:158:hardcoded variable:        const columns = [
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:160:hardcoded string:                title: 'Student Name',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:161:hardcoded string:                dataIndex: 'name',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:162:hardcoded string:                key: 'name',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:166:hardcoded object:                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:168:hardcoded object:                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:171:hardcoded number:                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:174:hardcoded string:                title: 'Class Info',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:175:hardcoded string:                dataIndex: 'classInfo',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:176:hardcoded string:                key: 'classInfo',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:177:hardcoded number:                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:181:hardcoded object:                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:183:hardcoded object:                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:188:hardcoded string:                title: 'Validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:189:hardcoded string:                dataIndex: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:190:hardcoded string:                key: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:191:hardcoded number:                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:196:hardcoded object:                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:198:hardcoded object:                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:203:hardcoded string:        console.log("my new data")
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:204:hardcoded string:        const { studentName = "" } = customerDetails[0] || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:205:hardcoded string:        const { initialClass = "", finalClass = "", validity = "", subCourse = "" } = neoProductInfo || {};
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:206:hardcoded variable:        let data = [{
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:207:hardcoded number:            key: 1,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:209:hardcoded object:            classInfo: `${subCourse}: ${initialClass}-${finalClass}`,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:211:hardcoded string:            color: '#D6FCF8'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:215:hardcoded object:            <Table pagination={false} columns={columns} dataSource={data} bordered={true}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:222:hardcoded array:        const productDetailsForm = this.refs[`productDetailsForm`];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:223:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:226:hardcoded string:        if (name == "initialClass") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:228:hardcoded string:                finalClass: "", validity: ""
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:231:hardcoded string:        if (name == "finalClass") {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:232:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ validity: "" });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:236:hardcoded array:            [name]: value,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:243:hardcoded string:        const currentAcademicYear = getCurrentAcademicYear('k12')
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:244:hardcoded variable:        const x = Math.abs(validity - currentAcademicYear)
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:245:hardcoded number:        return intialClass + Math.abs(x - 1)
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:249:hardcoded object:        const { neoformValues, selectedProfile } = this.state
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:250:hardcoded object:        const { initialClass, finalClass, subCourse, validity } = neoformValues
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:251:hardcoded variable:        let options = [
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:252:hardcoded string:            { label: "11", value: "11" },
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:253:hardcoded string:            { label: "12", value: "12" }
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:255:hardcoded variable:        const currentGrade = this.getCurrentGrade(parseInt(initialClass), parseInt(validity))
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:261:hardcoded string:        return [{ value: getCurrentAcademicYear('k12') + 1, label: getCurrentAcademicYear('k12') + 1 }]
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:265:hardcoded array:        const { existingProfiles = [] } = this.props
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:266:hardcoded number:        if (existingProfiles[0]) {
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:267:hardcoded number:            existingProfiles[0].checked = true
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:269:hardcoded object:        const { neoformValues, selectedProfile } = this.state
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:270:hardcoded object:        const { initialClass, finalClass, subCourse, validity } = neoformValues
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:272:hardcoded variable:        const fields = [{
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:273:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:275:hardcoded string:            name: 'initialClass',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:276:hardcoded string:            label: 'Select Initial Grade',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:280:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:281:hardcoded string:            name: 'finalClass',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:282:hardcoded string:            label: "Select Final Grade",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:284:hardcoded string:            options: [{ label: "12", value: "12" }],
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:288:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:289:hardcoded string:            name: 'subCourse',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:290:hardcoded string:            label: 'Select Course',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:291:hardcoded array:            options: [{ label: subCourse, value: subCourse }],
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:297:hardcoded string:            type: 'select',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:299:hardcoded string:            name: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:300:hardcoded string:            label: 'Select Initial Validity',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:303:hardcoded string:            message: "Please Select Initial Validity"
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:306:hardcoded string:            type: ((existingProfiles.length > 0) ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:308:hardcoded string:            name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:309:hardcoded string:            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:312:hardcoded string:            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:313:hardcoded number:            required: (existingProfiles.length > 0) ? true : false,
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:315:hardcoded string:                display: 'block',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:316:hardcoded string:                height: '30px',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:317:hardcoded string:                lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:324:hardcoded array:        const { existingProfiles = [] } = this.props
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:325:hardcoded object:        const { neoformValues } = this.state
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:326:hardcoded object:        const { subCourse } = neoformValues
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:327:hardcoded variable:        const fields = this.getFields()
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:330:hardcoded number:                initialValues={{ subCourse, userProfile: existingProfiles[0]?.value }}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:331:hardcoded object:                fields={fields}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:332:hardcoded object:                ref={`productDetailsForm`}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:341:hardcoded object:        this.setState({ eligibleForNewLoan: true })
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:345:hardcoded array:        let formCountArray = [];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:347:hardcoded object:        const { tlpOrderData, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:348:hardcoded array:        let { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:349:hardcoded array:        customerDetails = isArray(customerDetails) ? customerDetails : [customerDetails];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:350:hardcoded number:        const { productInfo = [] } = customerDetails[0];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:351:hardcoded number:        const { formValues } = productInfo[0];
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:352:hardcoded number:        this.setState({ neoProductInfo: productInfo[0], neoformValues: formValues, customerDetails });
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:353:hardcoded array:        let { existingProfiles = [] } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:354:hardcoded number:        this.setState({ userProfile: existingProfiles[0]?.value })
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:359:hardcoded object:        const { changeNextBtnMode } = this.props; //To render some specific component after the main product details form
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:361:hardcoded object:        const { error } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:365:hardcoded string:                <div className="card m-2">
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:366:hardcoded string:                    <div style={{ paddingBottom: '12px' }}>
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:367:hardcoded object:                        <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:368:hardcoded string:                        <Row style={{ overflow: 'auto', height: '160px', padding: '1%' }}>  {this.showOrderDetails()} </Row>
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:369:hardcoded object:                        {this.buildProductDetailsForm()}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:372:hardcoded string:                                ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:373:hardcoded object:                                onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:374:hardcoded object:                                getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:375:hardcoded object:                                changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:376:hardcoded object:                                setError={this.setError}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:377:hardcoded object:                                eligibleForNewLoan={true}
microservices-middleware/client/src/modules/ordertype/upgrade/aakashcrphybrid/AakashCrpHybridProcductPage.js:388:hardcoded object:export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(AakashCrpHybrid);
