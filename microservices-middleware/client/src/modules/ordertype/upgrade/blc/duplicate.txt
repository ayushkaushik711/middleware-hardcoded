microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:1:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper'
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:2:hardcoded object:import React, { Component, Fragment } from 'react'
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:3:hardcoded object:import { find, get, isEmpty } from 'lodash';
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:4:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:6:hardcoded object:import { Table, Row, Col } from 'antd';
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:7:hardcoded file path:import FetchPrices from 'modules/product/components/FetchPrices';
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:8:hardcoded object:import { saveProductDetails, addLoader, removeLoader, resetPrice, saveCashbackDetails, loadProductConfiguration } from 'modules/product/productReducer';
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:9:hardcoded object:import { checkIsPrivilegedUser, checkPrivTabletAccess, getAllAvailableTablets } from 'modules/product/components/productHelper';
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:10:hardcoded file path:import ProductDetailsForm from 'modules/product/components/ProducDetailsForm';
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:11:hardcoded object:import { getCentres, getCities, getStates, getTabletOptions, getProfileOptions, getValidityOptions, getPincode, getUpgradeValidityOptions } from '../../blc/helper/productHelper';
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:12:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:13:hardcoded file path:import BatchDetails from '../../blc/BatchDetails';
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:15:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:16:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:17:hardcoded string:    leadDetails: get(state, 'auth.leadDetails'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:18:hardcoded string:    salesDetails: get(state, "details.salesDetails"),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:19:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:20:hardcoded string:    tlpOrderData: get(state, 'auth.tlpOrderData', {}),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:21:hardcoded string:    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:22:hardcoded string:    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:23:hardcoded string:    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:24:hardcoded string:    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:25:hardcoded string:    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:26:hardcoded string:    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:27:hardcoded string:    voucherApplied: get(state, 'product.setVoucher.voucherApplied', false)
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:30:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:60:hardcoded object:            productConfig: {},
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:61:hardcoded array:            fields: [],
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:62:hardcoded array:            statesList: [],
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:63:hardcoded array:            cityList: [],
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:64:hardcoded array:            centerList: [],
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:68:hardcoded string:            batchType: 'weekday'
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:73:hardcoded string:        const { course, tabletId = "", stateName, cityName, centreName, centreList, centre } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:74:hardcoded object:        const pincode = await getPincode({ centre, centreName, centreList })
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:75:hardcoded object:        const { productCombination, identifier, tlpOrderData, leadDetails, voucherApplied, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:76:hardcoded string:        const featureEnableList = get(authDetails, 'featureEnableList', '') || {}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:77:hardcoded string:        const isBlcMarkUpAndDownApplicable = get(featureEnableList, 'pdc_access', false) || false
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:78:hardcoded array:        const { customerDetails = [] } = tlpOrderData
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:79:hardcoded string:        const { productSelectionType = '' } = customerDetails[0]
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:81:hardcoded object:        const { productDetailsForm, blcBatchCard } = this.refs;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:82:hardcoded variable:        const details = await productDetailsForm.getProductDetails();
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:83:hardcoded string:        let productDetails = get(details, 'productDetails');
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:86:hardcoded string:        productDetails['voucherApplied'] = voucherApplied
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:87:hardcoded string:        let schoolName = get(leadDetails, 'schoolName', '');
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:88:hardcoded string:        let schoolAddress = decodeURIComponent(get(leadDetails, 'schoolAddress'))
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:89:hardcoded string:        let schoolPincode = get(leadDetails, 'schoolPincode');
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:90:hardcoded string:        productDetails['schoolName'] = schoolName
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:91:hardcoded string:        productDetails['schoolAddress'] = schoolAddress
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:92:hardcoded string:        productDetails['schoolPincode'] = schoolPincode
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:93:hardcoded string:        productDetails['pincode'] = pincode;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:95:hardcoded string:        productDetails['tabletId'] = tabletId;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:96:hardcoded string:        if (productDetails && !productDetails.course) productDetails["course"] = course;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:98:hardcoded object:        const { batch, cohortId, courseAliasId } = blcBatchCard.getRequestedBatchDetails();
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:109:hardcoded variable:        const isBatchSelected = await blcBatchCard.checkBatchSelected();
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:113:hardcoded variable:            const payload = {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:115:hardcoded string:                // productType: 'combo',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:117:hardcoded string:                couponDetails: get(details, 'couponDetails'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:124:hardcoded string:                url: '/api/blcupgrade/getUpgradeProduct'
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:130:hardcoded object:        const { identifier, tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:132:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:142:hardcoded string:                url: '/api/blcupgrade/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:143:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:146:hardcoded string:                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:150:hardcoded object:                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:152:hardcoded string:                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:154:hardcoded object:                this.setState({ error });
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:161:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:162:hardcoded string:        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:171:hardcoded object:        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:174:hardcoded object:            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:176:hardcoded string:                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:180:hardcoded string:                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:183:hardcoded string:                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:184:hardcoded object:                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:190:hardcoded object:        this.setState({ isUpgradeToBlc: !this.state.isUpgradeToBlc })
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:193:hardcoded object:    getCurrentInitialClass = ({ initialClass, validity, selectedBoard, finalClass }) => {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:194:hardcoded variable:        const currDate = new Date();
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:195:hardcoded variable:        const currYear = currDate.getFullYear();
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:196:hardcoded variable:        const currMonth = currDate.getMonth()
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:198:hardcoded array:        let initialGradeOptions = []
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:200:hardcoded variable:        let currentInitialClass = parseInt(initialClass)
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:203:hardcoded number:        if (currMonth >= 1) { // month value start from 0 (jan-0)
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:204:hardcoded string:            if (selectedBoard == "STATE") {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:214:hardcoded number:                    label: (currentInitialClass + 1).toString(),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:215:hardcoded number:                    value: (currentInitialClass + 1).toString()
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:238:hardcoded array:        let finalGradeOptions = [];
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:239:hardcoded variable:        let choosenClass = parseInt(selectedClass)
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:242:hardcoded number:        while (choosenClass <= finalClass && finalGradeOptions.length < 3) {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:245:hardcoded string:                    'label': choosenClass.toString(),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:246:hardcoded string:                    'value': choosenClass.toString()
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:248:hardcoded number:            choosenClass = choosenClass + 1
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:251:hardcoded number:        //disable single year upgrade btc price change jan 2023
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:262:hardcoded string:        !selectedCourse && this.handleChanges('K10/K12', 'course');
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:263:hardcoded string:        !selectedCourseType && this.handleChanges('regular', 'courseType');
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:265:hardcoded object:        const { productType, productConfig, showProfileSelectionOption, existingProfiles, user, tlpOrderData, authDetails, leadDetails = {} } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:266:hardcoded array:        const { customerDetails = [], orderType } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:267:hardcoded number:        const { productInfo = [], type } = customerDetails[0] || {}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:268:hardcoded string:        const { tablet = {}, initialClass = '', finalClass = '', validity } = productInfo[0] || []
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:269:hardcoded array:        const { Products = [], Courses = [], Boards = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:270:hardcoded object:        const productConfiguration = find(Products, { formattedName: type }) || {};
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:271:hardcoded array:        const { tablets = [] } = productConfiguration || {};
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:272:hardcoded object:        const selectedCourseConfig = find(Courses, { formattedName: selectedCourse }) || {};
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:273:hardcoded object:        const selectedBoardConfig = find(Boards, { formattedName: selectedBoard }) || {};
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:274:hardcoded object:        const { statesList, cityList, centreList } = this.state
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:276:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user);
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:277:hardcoded string:        let isUpgradeRequired = get(this.state, 'isUpgradeToBlc');
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:278:hardcoded variable:        const isTabletOrder = !isEmpty(tablet)
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:280:hardcoded object:        const { isDevEnv } = window;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:282:hardcoded variable:        const fields = [
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:284:hardcoded string:                type: 'checkbox',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:285:hardcoded string:                name: 'isUpgradeToBlc',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:287:hardcoded string:                checkBoxLabel: 'Do you want to upgrade?'
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:289:hardcoded string:                type: isUpgradeRequired ? "select" : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:290:hardcoded string:                name: 'state',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:291:hardcoded string:                label: 'Select State',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:293:hardcoded string:                message: 'Please Select State',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:294:hardcoded array:                options: statesList || [],
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:297:hardcoded string:                type: isUpgradeRequired ? "select" : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:298:hardcoded string:                name: 'city',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:299:hardcoded string:                label: 'Select City',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:301:hardcoded string:                message: 'Please Select City',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:302:hardcoded array:                options: cityList || [],
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:305:hardcoded string:                type: isUpgradeRequired ? "select" : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:306:hardcoded string:                name: 'centre',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:307:hardcoded string:                label: 'Select Centre',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:309:hardcoded string:                message: 'Please Select Centre',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:310:hardcoded array:                options: centreList || [],
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:314:hardcoded string:                type: isUpgradeRequired ? "select" : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:315:hardcoded string:                name: 'board',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:316:hardcoded string:                label: 'Select Board',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:319:hardcoded string:                options: get(selectedCourseConfig, 'boards'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:321:hardcoded string:                message: "Please select Board",
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:324:hardcoded string:                type: isUpgradeRequired && selectedBoard === "STATE" ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:325:hardcoded string:                name: 'stateBoard',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:326:hardcoded string:                label: 'Select State Board',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:328:hardcoded string:                required: selectedBoard === "STATE",
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:329:hardcoded string:                options: get(selectedBoardConfig, 'states'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:331:hardcoded string:                message: "Please select State",
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:334:hardcoded string:                type: isUpgradeRequired && selectedBoard ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:335:hardcoded string:                name: 'initialClass',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:336:hardcoded string:                label: 'Select Initial Grade',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:338:hardcoded object:                options: this.getCurrentInitialClass({ initialClass, validity, selectedBoard, finalClass }),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:340:hardcoded string:                message: "Please Select Initial Grade"
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:342:hardcoded string:                type: isUpgradeRequired && !isEmpty(finalClass) ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:343:hardcoded string:                name: 'finalClass',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:344:hardcoded string:                label: 'Select Final Grade',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:351:hardcoded string:                message: "Please Select Final Grade"
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:354:hardcoded string:                type: isUpgradeRequired ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:355:hardcoded object:                options: getUpgradeValidityOptions({ isDevEnv, isPrivilegedUser, selectedBoard, selectedClass, selectedFinalClass, isUpgradeRequired, stateBoard }),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:356:hardcoded string:                name: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:357:hardcoded string:                label: 'Select Initial Validity',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:361:hardcoded string:                message: 'Please Select Initial Validity'
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:363:hardcoded string:                // type: isUpgradeRequired && selectedBoard && selectedClass && selectedValidity ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:364:hardcoded string:                type: 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:365:hardcoded string:                name: 'batchType',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:366:hardcoded string:                label: 'Batch Type',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:370:hardcoded string:                options: [{ label: 'Week Day', value: 'weekday' }, { label: 'Week End', value: 'weekend' }],
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:371:hardcoded string:                message: 'Please select batch type'
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:374:hardcoded string:                type: isUpgradeRequired ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:375:hardcoded object:                options: checkPrivTabletAccess(leadDetails, user) ? getAllAvailableTablets() : getTabletOptions({ tablets, isPrivilegedUser, authDetails, selectedClass }),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:376:hardcoded string:                name: 'tablet',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:377:hardcoded string:                label: 'Select Tablet',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:379:hardcoded string:                message: "Please select Tablet",
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:383:hardcoded string:                type: (isUpgradeRequired && showProfileSelectionOption && existingProfiles.length > 0 ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:385:hardcoded string:                name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:386:hardcoded string:                label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:388:hardcoded string:                message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:390:hardcoded string:                    display: 'block',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:391:hardcoded string:                    height: '30px',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:392:hardcoded string:                    lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:394:hardcoded number:                required: (showProfileSelectionOption && existingProfiles.length > 0 ? true : false)
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:401:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:402:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:404:hardcoded object:        this.setState({ loading: true });
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:406:hardcoded string:        if (name === 'state') {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:407:hardcoded object:            const { statesList } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:408:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ city: '', centre: '' });
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:409:hardcoded string:            this.setState({ cityList: [], centreList: [], city: '', centre: '' })
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:410:hardcoded object:            const { label } = statesList.find(obj => obj.value === value)
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:411:hardcoded object:            const { cityList, error } = await getCities(value, label);
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:412:hardcoded object:            this.setState({ cityList: cityList, stateName: label, error })
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:414:hardcoded string:        else if (name === 'city') {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:415:hardcoded object:            const { cityList } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:416:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ centre: '' });
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:417:hardcoded object:            const { label } = cityList.find(obj => obj.value === value)
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:418:hardcoded object:            const { centreList, error } = await getCentres(value, label);
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:419:hardcoded object:            this.setState({ centreList: centreList, cityName: label, error });
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:421:hardcoded string:        else if (name === 'centre') {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:422:hardcoded object:            const { centreList } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:423:hardcoded object:            const { label } = centreList.find(obj => obj.value === value)
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:424:hardcoded object:            this.setState({ centreName: label })
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:426:hardcoded string:        // if (!['batchType', 'userProfile', 'tablet', undefined].includes(name)) {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:427:hardcoded string:        //     detailsForm && detailsForm.setFieldsValue({ batchType: '' });
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:430:hardcoded string:        if (name == "initialClass") {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:431:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ finalClass: "", validity: "" });
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:434:hardcoded string:        if (name === "board") {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:436:hardcoded string:                stateBoard: "",
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:437:hardcoded string:                initialClass: "", finalClass: "", validity: ""
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:441:hardcoded string:        if (name === "stateBoard") {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:443:hardcoded string:                initialClass: "",
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:444:hardcoded string:                finalClass: "", validity: ""
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:450:hardcoded array:            [name]: value,
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:453:hardcoded string:            isBatchAvailable: ['batchType', 'userProfile', 'tablet', undefined].includes(name) ? true : false
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:459:hardcoded object:        this.setState({ batchType: false })
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:462:hardcoded string:            batchType: "weekday"
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:467:hardcoded object:        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:471:hardcoded object:        const { tlpOrderData } = nextProps;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:472:hardcoded array:        const { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:473:hardcoded number:        const { productInfo = [] } = customerDetails[0] || {}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:474:hardcoded number:        const { board, state } = productInfo[0] || [];
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:477:hardcoded string:        const selectedBoard = board ? board : get(this.state, 'board', '')
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:478:hardcoded string:        const selectedState = state ? state : get(this.state, 'stateBoard', '')
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:479:hardcoded object:        this.setState({ board: selectedBoard, stateBoard: selectedState })
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:484:hardcoded object:        this.setState({ loading: true })
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:486:hardcoded object:        const { productDetails, productConfig, productType, identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:487:hardcoded variable:        const stateList = await getStates();
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:488:hardcoded object:        this.setState({ statesList: stateList })
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:489:hardcoded string:        if (productType === get(productDetails, 'productType')) {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:490:hardcoded string:            const formValues = get(productDetails, 'students[0].formValues');
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:493:hardcoded string:                course: get(formValues, 'course'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:494:hardcoded string:                board: get(formValues, 'board'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:495:hardcoded string:                initialClass: get(formValues, 'initialClass'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:496:hardcoded string:                subCourse: get(formValues, 'subCourse'),
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:501:hardcoded string:        this.setState({ productConfig, course: 'K10/K12' });
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:502:hardcoded object:        this.setState({ loading: false })
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:507:hardcoded object:        const { tlpOrderData } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:508:hardcoded array:        const { eligibleCustomers = [] } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:509:hardcoded array:        const { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:510:hardcoded variable:        const columns = [
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:512:hardcoded string:                title: 'Student Name',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:513:hardcoded string:                dataIndex: 'name',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:514:hardcoded string:                key: 'name',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:518:hardcoded object:                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:520:hardcoded object:                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:523:hardcoded number:                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:526:hardcoded string:                title: 'Class Info',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:527:hardcoded string:                dataIndex: 'classInfo',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:528:hardcoded string:                key: 'classInfo',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:529:hardcoded number:                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:533:hardcoded object:                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:535:hardcoded object:                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:540:hardcoded string:                title: 'Validity',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:541:hardcoded string:                dataIndex: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:542:hardcoded string:                key: 'validity',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:543:hardcoded number:                width: 100,
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:548:hardcoded object:                            style: { background: record.color },
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:550:hardcoded object:                        children: <div>{text}</div>,
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:555:hardcoded array:        let data = [];
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:556:hardcoded number:        for (var i = 0; i < customerDetails.length; i++) {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:557:hardcoded string:            const { studentName = "", productInfo = [] } = customerDetails[i] || {};
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:558:hardcoded string:            let { board = "", initialClass = "", finalClass = "", validity = "" } = productInfo[0] || {};
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:559:hardcoded variable:            const isEligible = eligibleCustomers.filter(ele => ele.studentName == studentName);
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:560:hardcoded string:            const color = (isEmpty(isEligible)) ? '' : '#D6FCF8'
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:561:hardcoded variable:            const detail = {
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:562:hardcoded number:                key: i + 1,
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:564:hardcoded object:                classInfo: `${board}: ${initialClass}-${finalClass}`,
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:572:hardcoded object:            <Table pagination={false} columns={columns} dataSource={data} bordered={true}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:579:hardcoded object:        const { error, validity, batchType, board, isBatchAvailable, initialClass, stateBoard, centre } = this.state;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:580:hardcoded object:        const { productType, productCombination, changeNextBtnMode, productConfig, tlpOrderData, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:581:hardcoded array:        const fields = productConfig ? this.getFields() : [];
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:582:hardcoded array:        const { customerDetails = [] } = tlpOrderData;
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:583:hardcoded string:        const studentName = customerDetails.length ? get(customerDetails[0], 'studentName') : ""
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:588:hardcoded string:                    <div className="card m-2">
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:589:hardcoded string:                        <div style={{ paddingBottom: '12px' }}>
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:590:hardcoded object:                            <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:591:hardcoded string:                            <Row style={{ overflow: 'auto', height: '160px', padding: '1%' }}>  {this.showOrderDetails()} </Row>
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:593:hardcoded object:                                heading={`Student #${studentName}`}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:594:hardcoded string:                                ref="productDetailsForm"
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:595:hardcoded object:                                productType={productType}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:596:hardcoded object:                                fields={fields}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:598:hardcoded string:                                    batchType: 'weekday',
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:603:hardcoded object:                            {/* {isBatchAvailable && initialClass && board && batchType && validity && <BatchDetails */}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:605:hardcoded string:                                ref="blcBatchCard"
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:606:hardcoded object:                                initialClass={initialClass}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:607:hardcoded object:                                board={board}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:608:hardcoded object:                                stateBoard={stateBoard}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:609:hardcoded object:                                batchType={batchType}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:610:hardcoded object:                                centreId={centre}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:611:hardcoded object:                                validity={validity}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:612:hardcoded object:                                authDetails={authDetails}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:615:hardcoded string:                                ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:616:hardcoded object:                                onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:617:hardcoded object:                                getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:618:hardcoded object:                                changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:619:hardcoded object:                                productType={productType}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:620:hardcoded object:                                setError={this.setError}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:621:hardcoded object:                                productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:622:hardcoded object:                                validity={validity}
microservices-middleware/client/src/modules/ordertype/upgrade/blc/BlcUpgradeProductPage.js:632:hardcoded object:export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(BlcUpgradeProductPage)
