microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:1:hardcoded object:import React, { Component } from 'react'
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:2:hardcoded object:import { get } from 'lodash';
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:3:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:4:hardcoded file path:import RadioGroup from 'antd/lib/radio/group';
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:5:hardcoded file path:import RadioButton from 'antd/lib/radio/radioButton';
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:7:hardcoded object:import { addLoader, loadProductConfiguration, resetPrice, saveProductDetails, saveStudentsProfileDetails, removeLoader } from 'modules/product/productReducer';
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:8:hardcoded object:import { ELIGIBLE_PRODUCT_COMBINATION_FOR_BYJUS_LEARNING_CENTRE, BLC_DISABLED_YR } from 'modules/product/utils/blcConstants';
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:9:hardcoded file path:import BlcSingleProduct from './SingleProduct'
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:10:hardcoded file path:import BlcComboProduct from './ComboProduct'
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:11:hardcoded file path:import BlcSiblingProduct from './SiblingProduct'
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:12:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:13:hardcoded object:import { checkIsPrivilegedUser } from 'modules/product/components/productHelper';
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:14:hardcoded object:import { getCurrentAcademicYear } from 'lib/validityHelper';
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:16:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:17:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:18:hardcoded string:    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:19:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:20:hardcoded string:    orderPunchingType: get(state, 'auth.orderPunchingType'),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:21:hardcoded string:    tlpOrderData: get(state, 'auth.tlpOrderData'),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:22:hardcoded string:    customerDetails: get(state, 'details.customerDetails'),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:23:hardcoded string:    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:24:hardcoded string:    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:25:hardcoded string:    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:26:hardcoded string:    reviewProductDetails: get(state, 'product.reviewDetails'),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:27:hardcoded string:    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:28:hardcoded string:    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:29:hardcoded string:    user: get(state, "auth.details.user", {}),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:30:hardcoded string:    cashbackDetails: get(state, "product.cashbackDetails", {}),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:31:hardcoded string:    finalPrice: get(state, "product.finalPrice", 0),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:32:hardcoded string:    repunchDoc: get(state, "repunch", {}),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:33:hardcoded string:    salesDetails: get(state, 'details.salesDetails', {}),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:34:hardcoded string:    addressDetail: get(state, 'address.details', {}),
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:37:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:60:hardcoded string:            selectedProduct: 'single',
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:61:hardcoded string:            productCombination: 'byjus_learning_centre',
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:63:hardcoded object:            productConfig: {},
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:64:hardcoded array:            fields: [],
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:69:hardcoded object:        const { selectedProduct } = this.state;
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:70:hardcoded object:        const { user, authDetails, salesDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:71:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:72:hardcoded string:        const isDevEnv = ['development','local'].includes(env);
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:73:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user)
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:74:hardcoded string:        const directSalesBy = get(salesDetails, "directSalesBy", "");
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:75:hardcoded array:        let productOptions = this.getProductOptions() || [];
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:78:hardcoded variable:        const radioBtnStyle = {
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:79:hardcoded string:            fontWeight: '500',
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:80:hardcoded string:            fontSize: 'medium',
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:81:hardcoded string:            background: '#fcf5ff'
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:84:hardcoded string:        if (isDevEnv && ["mohnishsales@byjus.com"].includes(directSalesBy)) {
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:85:hardcoded string:            productOptions = productOptions.filter(ele => ["single", "combo"].includes(ele.value))
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:90:hardcoded number:        //btc price change jan 2023
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:91:hardcoded variable:        /*const academicYear = getCurrentAcademicYear()
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:93:hardcoded string:            productOptions = productOptions.filter(ele => !["single"].includes(ele.value))
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:97:hardcoded string:            <RadioGroup onChange={this.onChangeProduct} value={selectedProduct} buttonStyle="solid">
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:98:hardcoded object:                {productOptions.map(({ label, value }, idx) => (
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:99:hardcoded object:                    <RadioButton style={radioBtnStyle} value={value} key={idx}>{label}</RadioButton>
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:106:hardcoded string:        const { value } = get(e, 'target');
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:107:hardcoded object:        this.setState({ selectedProduct: null }, () => {
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:108:hardcoded object:            this.setState({ selectedProduct: value, });
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:114:hardcoded array:        const { Products = [] } = this.props.productConfig || {};
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:115:hardcoded variable:        const products = Products.map((product) => {
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:116:hardcoded object:            const { name, formattedName } = product;
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:118:hardcoded object:                label: `${name}`,
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:126:hardcoded object:        const { selectedProduct, productCombination, productConfig } = props
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:127:hardcoded variable:        const compProps = {
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:128:hardcoded string:            ref: "blcProductComponent",
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:134:hardcoded string:            case 'single': return <BlcSingleProduct productType={selectedProduct} {...compProps} productCombination={productCombination} productConfig={productConfig} />
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:135:hardcoded string:            case 'combo': return <BlcComboProduct productType={selectedProduct} {...compProps} productCombination={productCombination} productConfig={productConfig} />
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:136:hardcoded string:            case 'sibling': return <BlcSiblingProduct productType={selectedProduct} {...compProps} productCombination={productCombination} productConfig={productConfig} />;
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:142:hardcoded object:        let { identifier, user } = this.props;
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:143:hardcoded object:        this.setState({ loading: true });
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:150:hardcoded string:        this.setState({ selectedProduct: 'single' })
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:160:hardcoded object:        const { selectedProduct, productCombination, error } = this.state;
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:161:hardcoded object:        const { productConfig } = this.props; //To render some specific component after the main product details form
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:165:hardcoded object:                <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:166:hardcoded object:                {this.buildProductOptions()}
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:167:hardcoded object:                {this.buildProductComponent({ selectedProduct, productCombination, productConfig })}
microservices-middleware/client/src/modules/ordertype/blc/BlcProductPage.js:173:hardcoded object:export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(BlcProductPage)
