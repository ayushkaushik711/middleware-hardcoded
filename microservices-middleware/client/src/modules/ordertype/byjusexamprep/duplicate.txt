microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:1:hardcoded object:import React, { Component } from 'react'
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:2:hardcoded object:import { get } from 'lodash';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:3:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:5:hardcoded file path:import RadioGroup from 'antd/lib/radio/group';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:6:hardcoded file path:import RadioButton from 'antd/lib/radio/radioButton';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:7:hardcoded object:import { addLoader, loadProductConfiguration, resetPrice, saveProductDetails, saveStudentsProfileDetails, removeLoader } from 'modules/product/productReducer';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:8:hardcoded object:import { ELIGIBLE_PRODUCT_COMBINATION_FOR_BYJUS_EXAM_PREP } from 'modules/product/utils/productConstant';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:9:hardcoded file path:import BEPCompetitive from './BEPCompetitive'
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:10:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:12:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:13:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:14:hardcoded string:    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:15:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:16:hardcoded string:    orderPunchingType: get(state, 'auth.orderPunchingType'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:17:hardcoded string:    tlpOrderData: get(state, 'auth.tlpOrderData'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:18:hardcoded string:    customerDetails: get(state, 'details.customerDetails'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:19:hardcoded string:    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:20:hardcoded string:    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:21:hardcoded string:    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:22:hardcoded string:    reviewProductDetails: get(state, 'product.reviewDetails'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:23:hardcoded string:    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:24:hardcoded string:    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:25:hardcoded string:    user: get(state, "auth.details.user", {}),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:26:hardcoded string:    cashbackDetails: get(state, "product.cashbackDetails", {}),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:27:hardcoded string:    finalPrice: get(state, "product.finalPrice", 0),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:28:hardcoded string:    repunchDoc: get(state, "repunch", {}),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:29:hardcoded string:    salesDetails: get(state, 'details.salesDetails', {}),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:30:hardcoded string:    addressDetail: get(state, 'address.details', {}),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:33:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:56:hardcoded string:            selectedProduct: 'byjus_exam_prep_competitive',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:58:hardcoded object:            productConfig: {},
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:59:hardcoded array:            fields: [],
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:64:hardcoded object:        let { selectedProduct } = this.state;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:65:hardcoded array:        let productOptions = this.getProductOptions() || [];
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:67:hardcoded variable:        const radioBtnStyle = {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:68:hardcoded string:            fontWeight: '500',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:69:hardcoded string:            fontSize: 'medium',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:70:hardcoded string:            background: '#fcf5ff'
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:73:hardcoded string:            <RadioGroup onChange={this.onChangeProduct} value={selectedProduct} buttonStyle="solid">
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:74:hardcoded object:                {productOptions.map(({ label, value }, idx) => (
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:75:hardcoded object:                    <RadioButton style={radioBtnStyle} value={value} key={idx}>{label}</RadioButton>
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:86:hardcoded string:        const { value } = get(e, 'target');
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:87:hardcoded object:        this.setState({ selectedProduct: null }, () => {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:88:hardcoded object:            this.setState({ selectedProduct: value, });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:94:hardcoded array:        const { Products = [] } = this.props.productConfig || {};
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:95:hardcoded variable:        const products = Products.map((product) => {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:96:hardcoded object:            const { name, formattedName } = product;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:98:hardcoded object:                label: `${name}`,
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:106:hardcoded object:        const {user } = compProps
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:108:hardcoded string:                case 'byjus_exam_prep_competitive' : return <BEPCompetitive productType={selectedProduct} {...compProps} user= {user} productCombination={productCombination} />
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:114:hardcoded object:        const { selectedProduct, error } = this.state;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:115:hardcoded object:        const { productCombination } = this.props; //To render some specific component after the main product details form
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:116:hardcoded variable:        const compProps = {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:117:hardcoded string:            ref: 'bepProductComponent',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:125:hardcoded object:                <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:126:hardcoded object:                {this.buildProductOptions()}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:127:hardcoded object:                {this.buildProductComponent(selectedProduct, compProps, productCombination)}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPProductPage.js:133:hardcoded object:export default connect( mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(BEPProductPage)
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:1:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper'
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:2:hardcoded object:import React, { Component } from 'react'
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:3:hardcoded object:import { cloneDeep, find, get, isEmpty } from 'lodash';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:4:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:6:hardcoded file path:import FetchPrices from '../../product/components/FetchPrices';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:7:hardcoded object:import { resetPrice, addLoader, removeLoader, saveProductDetails, saveCashbackDetails } from '../../product/productReducer';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:8:hardcoded object:import { checkPrivTabletAccess, checkIsPrivilegedUser, getAllAvailableTabletsBasedOnUser, getTablets } from '../../product/components/productHelper'
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:9:hardcoded object:import { getFormattedValidity } from '../../product/components/productHelper';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:10:hardcoded file path:import ProductDetailsForm from '../../product/components/ProducDetailsForm';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:11:hardcoded object:import { productPermissions } from 'utility/screenPermission';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:12:hardcoded file path:import CallApi from 'api/callApi';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:13:hardcoded number:import { BEP_UGC_VALIDITY_OPTIONS, PAPER2SUBJECT_ENG_HIN, PAPER2SUBJECT_ENG, PAPER2SUBJECT_HIN, CSIR_NET_SUBJECT_ENG_HIN } from 'modules/product/utils/productConstant';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:15:hardcoded object:import { getCurrentAcademicYear } from 'lib/validityHelper'
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:17:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:18:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:19:hardcoded string:    leadDetails: get(state, 'auth.leadDetails'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:20:hardcoded string:    salesDetails: get(state, "details.salesDetails"),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:21:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:22:hardcoded string:    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:23:hardcoded string:    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:24:hardcoded string:    productDetails: get(state, 'product.details'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:25:hardcoded string:    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:26:hardcoded string:    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:27:hardcoded string:    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:28:hardcoded string:    listOfManagers: get(state, 'product.eligibleManagerList', [])
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:31:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:58:hardcoded object:            productConfig: {},
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:59:hardcoded array:            fields: [],
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:61:hardcoded array:            statesList: [],
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:62:hardcoded array:            cityList: [],
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:63:hardcoded array:            centerList: [],
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:72:hardcoded object:        const { productCombination, identifier, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:73:hardcoded object:        let { productType } = this.props;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:74:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:75:hardcoded object:        const { courseType } = this.state;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:76:hardcoded string:        productType = ['IAS_TLP', 'IAS_BHLP'].includes(courseType) ? 'competitive' : (courseType === 'IAS_CRP') ? 'crpCompetitive' : productType
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:77:hardcoded variable:        const details = await productDetailsForm.getProductDetails();
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:78:hardcoded string:        let productDetails = get(details, 'productDetails');
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:79:hardcoded string:        let language = get(productDetails, 'Language');
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:80:hardcoded string:        if (productDetails && productDetails["Language"]) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:81:hardcoded string:            productDetails['language'] = language
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:83:hardcoded string:        if (productDetails && productDetails["tablet"]) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:84:hardcoded string:            productDetails['tabletId'] = `T-${productDetails["tablet"]}`;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:87:hardcoded variable:            const payload = {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:91:hardcoded string:                couponDetails: get(details, 'couponDetails'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:92:hardcoded string:                mentoringCount: get(details, 'mentoringCount'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:99:hardcoded string:                url: ['IAS_TLP', 'IAS_BHLP'].includes(courseType) ? '/api/product/competitive' : (courseType === 'IAS_CRP') ? '/api/product/crpCompetitive' : '/api/bep/product/competetive'
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:105:hardcoded object:        const { identifier } = this.props;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:106:hardcoded object:        const { courseType } = this.state;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:107:hardcoded variable:        const payload = {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:117:hardcoded string:                url: ['IAS_TLP', 'IAS_BHLP', 'IAS_CRP'].includes(courseType) ? '/api/product/storeProductDetails' : '/api/bep/storeProductDetails',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:118:hardcoded string:                method: 'POST',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:121:hardcoded string:                const { productDetails, cashbackDetails } = get(response, 'data', {});
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:125:hardcoded object:                this.setState({ error: null });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:127:hardcoded string:                this.navigateToScreen('address');
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:129:hardcoded object:                this.setState({ error });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:136:hardcoded object:        const { history } = this.props;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:137:hardcoded string:        const url = `/${path}${get(history, 'location.search')}`;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:146:hardcoded object:        const { fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:149:hardcoded object:            const { status, productDetails } = fetchComp.getProductsAndFinalPrice();
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:151:hardcoded string:                if (status && productDetails && (get(productDetails, 'finalPrice') >= 0)) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:155:hardcoded string:                    this.setState({ error: 'Product Details Missing' });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:158:hardcoded string:                const errMsg = get(error, 'message', 'Error') || error;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:159:hardcoded object:                this.setState({ error: errMsg });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:165:hardcoded object:        const { productDetailsForm, fetchComp } = this.refs;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:166:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:167:hardcoded string:        if (name === "course") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:168:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ subject: "", validity: "", language: "", product: "", paper2Subject: "", tablet: "", stateExams: "", courseType: "", type: "", Language: "", crpCity: "" });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:169:hardcoded string:            this.setState({ isSsbReq: false, courseType: "", type: "" })
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:172:hardcoded string:        if (name === "courseType") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:173:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ type: "", validity: "", language: "", tablet: "", optionalCourses: [], isMiscellaneousReq: false, miscellaneous: [] });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:176:hardcoded string:        if (name === "subject") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:177:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ language: "" });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:179:hardcoded string:        if (name === "product" || name === "stateExams") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:180:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ subject: "", language: "", validity: "", tablet: "" });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:183:hardcoded string:        if (name === "type") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:184:hardcoded array:            detailsForm && detailsForm.setFieldsValue({ optionalCourses: [], miscellaneous: [], isMiscellaneousReq: false });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:185:hardcoded object:            this.setState({ isMiscellaneousReq: false, isCrpFlowReq: true })
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:187:hardcoded string:        if (name === "language") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:189:hardcoded string:                detailsForm && detailsForm.setFieldsValue({ miscellaneous: [], optionalCourses: [], type: "" })
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:192:hardcoded array:                detailsForm && detailsForm.setFieldsValue({ miscellaneous: [], optionalCourses: [] })
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:195:hardcoded string:        if (name === "miscellaneous") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:196:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ miscellaneous: [], optionalCourses: [], validity: "" });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:197:hardcoded string:            this.setState({ miscellaneous: [], validity: "" });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:199:hardcoded string:        if (name === "crpCity") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:200:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ language: "", type: "", workshops: "", validity: "", isCrpFlowReq: false });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:201:hardcoded object:            this.setState({ isCrpFlowReq: false })
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:203:hardcoded string:        if (name === "isCrpFlowReq") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:204:hardcoded object:            this.setState({ isCrpFlowReq: true })
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:208:hardcoded array:            [name]: value,
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:214:hardcoded object:        const { authDetails } = this.props
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:215:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:216:hardcoded string:        const isDevEnv = ["development", "local"].includes(env);
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:217:hardcoded string:        const currentYear = (course === "CAT") ? getCurrentAcademicYear('cat') : getCurrentAcademicYear('gate')
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:218:hardcoded variable:        const programMap = (year) => ({
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:219:hardcoded string:            "GATE": { label: `Vision ${year - 1}: Course for GATE`, value: `MARCH ${year - 1}` },
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:220:hardcoded string:            "ESE_AND_GATE": { label: `Vision ${year}: Course for ESE & GATE`, value: `JUNE ${year}` },
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:221:hardcoded string:            "CAT": { label: `CAT ${year - 2}`, value: `MARCH ${year-1}` },
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:222:hardcoded string:            "CLAT": { label: `CLAT ${year - 1}`, value: `MAY ${year - 1}` }
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:225:hardcoded string:        if (['GATE', 'CLAT'].includes(course) && programs.length === 2) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:227:hardcoded string:                label: "x+4",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:228:hardcoded string:                value: "x+4",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:232:hardcoded string:        if (['CAT'].includes(course)) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:233:hardcoded string:            programs = programs.filter((prog) => prog.value !== "x+4")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:235:hardcoded string:        if (['ESE_AND_GATE'].includes(course)) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:236:hardcoded string:            programs = programs.filter((prog) => prog.value !== "x+4")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:239:hardcoded string:        if (course === "CLAT") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:240:hardcoded string:            programs =  programs.filter((prog) => prog.value !== "x+2");
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:243:hardcoded string:            const year = eval(prog.value.replace("x", currentYear));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:244:hardcoded array:            return course && programMap(year)[course];
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:252:hardcoded string:        if (selectedSubject == "computer_science" || ['CAT', 'CLAT', 'AE_JE'].includes(course)) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:253:hardcoded string:            languages = languages.filter(prog => prog.value !== "english+hindi" && prog.value !== "hindi")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:255:hardcoded string:        if (course === "GATE" || course === "ESE_AND_GATE") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:256:hardcoded string:            languages = languages.filter(prog => prog.value !== "hindi")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:258:hardcoded string:        if (course === "UGCNET") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:259:hardcoded string:            languages = languages.filter(prog => prog.value !== "english+hindi")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:261:hardcoded string:        if (course === "STATE_PSC") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:262:hardcoded string:            languages = languages.filter(prog => prog.value !== "english+hindi" && prog.value !== "english")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:266:hardcoded string:    getCourseOptions = (courses, teamManager, accountNumber, bepTeamManagers, isPriviledgedUser, productType, isDevEnv, directSalesBy = '') => {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:267:hardcoded string:        if (isDevEnv && ["mohnishsales@byjus.com"].includes(directSalesBy)) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:268:hardcoded string:            courses = courses.filter(ele => ['CAT', 'IAS'].includes(ele.value))
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:271:hardcoded number:        if (isPriviledgedUser || bepTeamManagers.includes(teamManager) || [24693].includes(parseInt(accountNumber))) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:272:hardcoded string:            if (productType === "bep_mts") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:273:hardcoded string:                courses = courses.filter(ele => ele.value != 'STATE_PSC')
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:279:hardcoded string:            if (productType === "bep_mts") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:280:hardcoded string:                courses = courses.filter(ele => ele.value != 'STATE_PSC')
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:282:hardcoded string:                courses = courses.filter(ele => ele.value != 'GATE');
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:288:hardcoded string:        if (course === "UGCNET" || course === "ESE_AND_GATE" || course === "STATE_PSC") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:289:hardcoded string:            products = products.filter(ele => ele.value !== "sd_card_live_classes")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:294:hardcoded object:        const { isDevEnv } = window;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:295:hardcoded string:        // tablets = tablets.filter(ele => ele.value !== "1729564")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:296:hardcoded string:        // if (course === 'GATE' || (course === 'CAT' && product === "live_classes")) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:297:hardcoded string:        //     tablets = tablets.filter(ele => ele.value !== "1923980")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:299:hardcoded string:        // if (course === 'CLAT') {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:300:hardcoded string:        //     tablets = tablets.filter(ele => ele.value === "1923980" || ele.value === "1735413")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:304:hardcoded string:            tablets = tablets.filter(ele => !["1865228", "1752094", "1923980", "1729564", "TLXMZ2"].includes(ele.value))
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:306:hardcoded string:        tablets.push({ label: "SAMSUNG Tablet (Add-on-BYJUS) (8 inch-4G)", value: "TS8MZZ" },
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:307:hardcoded string:            { label: "Lenovo 10 inch Tablet Mobile Data (3GB/ 32GB) - (Rs 16000)", value: "TLXMZZ" })
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:313:hardcoded object:        const { selectedProfile } = this.state;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:314:hardcoded object:        const { existingProfiles, authDetails } = this.props;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:315:hardcoded string:        const isPrivilegedUser = checkIsPrivilegedUser(authDetails["user"]);
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:316:hardcoded number:        if (existingProfiles && existingProfiles.length > 0) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:317:hardcoded variable:            let newExistingProfile = existingProfiles;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:318:hardcoded string:            newExistingProfile = newExistingProfile.find(profile => profile.value === "newProfile");
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:320:hardcoded string:                existingProfiles.push({ "label": "New Profile", value: "newProfile" })
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:326:hardcoded string:        if (course === "CSIR_NET") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:328:hardcoded string:                return `Note: ${subject.split('_').map((word) => word[0].toUpperCase() + word.slice(1).toLowerCase()).join(' ')} Live Class is available in English and English + Hindi`
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:331:hardcoded string:                return `Note: ${subject.split('_').map((word) => word[0].toUpperCase() + word.slice(1).toLowerCase()).join(' ')} Live Class is available in English + Hindi`
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:334:hardcoded number:        if (PAPER2SUBJECT_ENG_HIN.includes(subject)) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:335:hardcoded string:            return `Note: ${subject.split('_').map((word) => word[0].toUpperCase() + word.slice(1).toLowerCase()).join(' ')} is available in both "English" and "Hindi" language`
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:337:hardcoded number:        else if (PAPER2SUBJECT_ENG.includes(subject)) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:338:hardcoded string:            return `Note: ${subject.split('_').map((word) => word[0].toUpperCase() + word.slice(1).toLowerCase()).join(' ')}  is available in "English" language only`
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:341:hardcoded string:            return `Note: ${subject.split('_').map((word) => word[0].toUpperCase() + word.slice(1).toLowerCase()).join(' ')}  is available in "Hindi" language only`
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:345:hardcoded array:        let durationOptions = [];
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:348:hardcoded string:            durationsObj = { "label": duration, "value": duration }
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:355:hardcoded string:        if (selectedCourse === 'CDS') {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:356:hardcoded string:            courseDurationOptions = courseDurationOptions.filter(ele => ele.value !== "24 Months")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:358:hardcoded string:        if (selectedCourse == 'STATE_PSC') {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:359:hardcoded string:            courseDurationOptions = courseDurationOptions.filter(ele => ele.value !== "6 Months")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:361:hardcoded string:        if (['UGCNET', 'CSIR_NET', 'AE_JE'].includes(selectedCourse)) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:362:hardcoded string:            courseDurationOptions = courseDurationOptions.filter(ele => ele.value !== "4 Months")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:368:hardcoded object:        const { authDetails } = this.props
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:369:hardcoded object:        const { env } = authDetails;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:370:hardcoded string:        const isDevEnv = ["development", "local"].includes(env);
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:371:hardcoded string:        // if (!isDevEnv && product === 'sd_card_live_classes') {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:372:hardcoded string:        //     subjects = subjects.filter(subject => subject.value !== "computer_science")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:374:hardcoded string:        if (course === 'ESE_AND_GATE') {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:375:hardcoded string:            subjects = subjects.filter(subject => subject.value !== "computer_science")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:381:hardcoded variable:        const types = [
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:383:hardcoded string:                label: "IAS TLP",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:384:hardcoded string:                value: "IAS_TLP"
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:387:hardcoded string:                label: "IAS BHLP",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:388:hardcoded string:                value: "IAS_BHLP",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:391:hardcoded string:                label: "IAS CRP",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:392:hardcoded string:                value: "IAS_CRP"
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:398:hardcoded array:    getTypeOptions = (typeOptions = [], isHLPCompetitiveAllowed, env, courseType, crpCity, product, Language) => {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:399:hardcoded variable:        let options = typeOptions;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:400:hardcoded object:        const { user } = this.props;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:401:hardcoded variable:        const isPrivilegedUser = checkIsPrivilegedUser(user);
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:402:hardcoded string:        const isDevEnv = ["local", "development"].includes(env);
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:404:hardcoded string:        if (isDevEnv && Language === "Hindi") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:405:hardcoded string:            options = options.filter(ele => !["Optional", "New+Optional", "Extension+Optional", "New+Optional_BYJUS_CLASSES", "New+Optional_BYJUS_CLASSES", "Extension+Optional_BYJUS_CLASSES"].includes(ele.value));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:408:hardcoded string:        if (["IAS_TLP"].includes(courseType)) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:410:hardcoded string:                options = options.filter(ele => !["only_byjus_classes", 'New_BYJUS_CLASSES', "New+Optional_BYJUS_CLASSES"].includes(ele.value));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:413:hardcoded string:                options = options.filter(ele => !["only_byjus_classes"].includes(ele.value));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:417:hardcoded string:        if (!isDevEnv && courseType === "IAS_TLP" && product === "live_classes") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:418:hardcoded string:            options = options.filter(ele => !["Optional", "New+Optional", "Extension+Optional"].includes(ele.value));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:420:hardcoded string:        if (isDevEnv && courseType === "IAS_TLP" && product === "sd_card_live_classes") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:421:hardcoded string:            options = options.filter(ele => !["Optional", "New+Optional", "Extension+Optional"].includes(ele.value));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:425:hardcoded string:        if (!isDevEnv && courseType === "IAS_BHLP" && product === "live_classes") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:426:hardcoded string:            options = options.filter(ele => !["Extension+Optional_BYJUS_CLASSES", "New+Optional_BYJUS_CLASSES", "only_byjus_classes"].includes(ele.value));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:428:hardcoded string:        if (isDevEnv && courseType === "IAS_BHLP" && product === "sd_card_live_classes") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:429:hardcoded string:            options = options.filter(ele => !["Extension+Optional_BYJUS_CLASSES", "New+Optional_BYJUS_CLASSES"].includes(ele.value));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:433:hardcoded string:        if (courseType === "IAS_CRP" && (["HYD", "DELHI"].includes(crpCity))) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:434:hardcoded string:            options = options.filter(ele => (get(ele, "value", "") === "New_BYJUS_CLASSES") || (get(ele, "value", "") === "Optional"));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:435:hardcoded string:        } else if (courseType === "IAS_CRP") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:436:hardcoded string:            options = options.filter(ele => (get(ele, "value", "") === "New_BYJUS_CLASSES"))
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:441:hardcoded string:            if (["IAS_TLP"].includes(courseType)) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:442:hardcoded string:                options = options.filter(ele => !["Extension", "Extension+Optional"].includes(ele.value));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:443:hardcoded string:            } else if (["IAS_BHLP"].includes(courseType)) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:444:hardcoded string:                options = options.filter(ele => !["Extension_BYJUS_CLASSES", "Extension+Optional_BYJUS_CLASSES"].includes(ele.value));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:447:hardcoded string:        if (courseType === "IAS_BHLP") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:448:hardcoded string:            options = options.filter(ele => (get(ele, "value", "").includes("BYJUS_CLASSES") || get(ele, "value", "").includes("byjus_classes")));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:449:hardcoded string:        } else if (courseType === "home_learning_program" && isHLPCompetitiveAllowed) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:450:hardcoded string:            options = options.filter(ele => get(ele, "value", "").includes("HLP"));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:451:hardcoded string:        } else if (courseType !== "IAS_CRP") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:452:hardcoded string:            options = ["development", "local"].includes(env) ? options.filter(ele => get(ele, "value", "").indexOf("HLP") <= 0 && get(ele, "value", "").indexOf("BYJUS_CLASSES") < 0) : options.filter(ele => get(ele, "value", "").indexOf("HLP") <= 0 && get(ele, "value", "").indexOf("BYJUS_CLASSES") <= 0);
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:458:hardcoded array:    getMiscellaneousCourses = (language, MiscellaneousCourses = [], courseType, env) => {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:459:hardcoded variable:        let options = MiscellaneousCourses
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:460:hardcoded string:        if (courseType == "IAS_TLP") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:461:hardcoded string:            if (language === "Hindi") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:462:hardcoded string:                options = options.filter(ele => ["Misc Prelims Test Series - Hindi"].includes(ele.value))
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:465:hardcoded string:                options = options.filter(ele => ["Misc Prelims Test Series - English"].includes(ele.value))
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:468:hardcoded string:        else if (courseType == 'IAS_BHLP') {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:469:hardcoded string:            if (language === "Hindi") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:470:hardcoded string:                options = options.filter(ele => get(ele, "value", "").includes("Misc Prelims Test Series - Hindi"));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:472:hardcoded string:                options = options.filter(ele => get(ele, "value", "").includes('Misc Prelims Test Series - English'));
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:480:hardcoded object:        const { productDetailsForm } = this.refs;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:481:hardcoded variable:        const detailsForm = productDetailsForm && productDetailsForm.getProductForm();
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:483:hardcoded array:        detailsForm && detailsForm.setFieldsValue({ miscellaneous: [] });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:484:hardcoded string:        if (name === "isMiscellaneousReq") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:485:hardcoded string:            detailsForm && detailsForm.setFieldsValue({ tablet: "", validity: "" });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:486:hardcoded string:            this.setState({ validity: "" })
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:489:hardcoded array:            [name]: checked,
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:490:hardcoded array:            miscellaneous: [],
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:496:hardcoded variable:        let options = courseLanguages;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:497:hardcoded string:        if (!["LUCKNOW", "DELHI", "JAIPUR"].includes(crpCity)) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:498:hardcoded string:            options = options.filter(ele => get(ele, "value", "") === "English");
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:503:hardcoded array:    getOptionalCourses = (language, OptionalCourses = []) => {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:504:hardcoded array:        let options = []
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:505:hardcoded string:        if (language === "English") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:512:hardcoded object:        const { productType, user, productCombination } = this.props;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:513:hardcoded number:        const { course: selectedCourse, product: selectedProduct, isSsbReq, subject: selectedSubject, courseType, tablet: selectedTablet, paper2Subject, stateExams: selectedStateExams, type, isMiscellaneousReq, Language, miscellaneous, optionalCourses = [] } = this.state;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:514:hardcoded object:        const { salesDetails, listOfManagers, leadDetails, productConfig, showProfileSelectionOption, existingProfiles } = this.props;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:515:hardcoded string:        const userPermissions = get(user, 'permissions', []);
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:516:hardcoded string:        let popUpText = "";
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:517:hardcoded variable:        let isBhlpApplicable = false;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:521:hardcoded variable:        const isPriviledgedUser = userPermissions.includes(productPermissions.ignorePriceRangeCheck);
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:522:hardcoded string:        const accountNumber = get(leadDetails, "accountNumber", '')
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:523:hardcoded string:        const { teamManagers: bepTeamManagers = [] } = get(listOfManagers, "BEP_MANAGER_ELIGIBLE_LIST", {})
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:524:hardcoded string:        const teamManager = get(salesDetails, "directSalesByTeamManager", "");
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:525:hardcoded string:        const directSalesBy = get(salesDetails, "directSalesBy", "");
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:526:hardcoded string:        const { env } = get(this.props, "authDetails", {});
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:527:hardcoded array:        const { Products = [], Courses = [] } = productConfig || {};
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:528:hardcoded array:        let { CrpCities = [] } = productConfig || {}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:529:hardcoded string:        CrpCities = CrpCities.filter(val => val.value !== "Chandigarh")
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:530:hardcoded object:        const selectedCourseConfig = find(Courses, { formattedName: selectedCourse }) || {};
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:531:hardcoded string:        const courseLanguages = get(selectedCourseConfig, 'languages', []);
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:532:hardcoded string:        let typeOptions = get(selectedCourseConfig, 'types', []);
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:533:hardcoded string:        const permissions = get(user, "permissions", []);
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:534:hardcoded variable:        const isHLPCompetitiveAllowed = permissions.includes(productPermissions.allowHLPCompetitive);
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:537:hardcoded string:        if (["IAS_TLP", "IAS_BHLP"].includes(courseType)) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:538:hardcoded string:            typeOfProduct = "competitive"
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:539:hardcoded string:            productInfo = find(Products, { formattedName: "competitive" }) || {};
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:540:hardcoded string:        } else if (courseType === "IAS_CRP") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:541:hardcoded string:            typeOfProduct = "crpCompetitive"
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:542:hardcoded string:            productInfo = find(Products, { formattedName: "crpCompetitive" }) || {};
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:545:hardcoded array:        const { validity, tablets, batch = [], MeTablets = [] } = productInfo || {};
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:546:hardcoded object:        const productConfiguration = find(Products, { formattedName: productType }) || {};
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:547:hardcoded number:        let { programs, courses, products, languages, tablets:Tablets, subjects, paper2Subjects, stateExams, branches } = productConfiguration || {};
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:548:hardcoded variable:        const courseDurationOptions = this.getValidityOptions();
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:549:hardcoded string:        const isDevEnv = ["development", "local"].includes(env);
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:550:hardcoded string:        if (type && type.includes("HLP") || type && type.includes("BYJUS_CLASSES") && selectedCourse === "IAS") {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:555:hardcoded variable:        let feilds = [{
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:556:hardcoded string:            type: "select",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:557:hardcoded string:            name: 'course',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:558:hardcoded string:            label: 'Select Course',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:560:hardcoded string:            message: 'Please Select Course',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:561:hardcoded array:            options: this.getCourseOptions(courses, teamManager, accountNumber, bepTeamManagers, isPriviledgedUser, productType, isDevEnv, directSalesBy) || [],
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:565:hardcoded string:            type: selectedCourse === 'IAS' ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:566:hardcoded string:            name: 'courseType',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:567:hardcoded string:            label: 'Select Course Type',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:568:hardcoded string:            required: (selectedCourse === 'IAS'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:569:hardcoded string:            message: 'Please Select Course Type',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:574:hardcoded string:            type: (courseType !== "IAS_CRP") ? 'select' : "hidden",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:575:hardcoded string:            name: 'product',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:576:hardcoded string:            label: 'Select Products',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:577:hardcoded string:            required: (courseType !== "IAS_CRP"),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:578:hardcoded string:            message: 'Please Select Products',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:579:hardcoded array:            options: this.getProductOptions(products, selectedCourse, env) || [],
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:583:hardcoded string:            type: courseType === "IAS_CRP" ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:584:hardcoded string:            name: 'crpCity',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:585:hardcoded string:            label: 'Select City',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:586:hardcoded array:            options: CrpCities || [],
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:588:hardcoded string:            required: (courseType === "IAS_CRP"),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:589:hardcoded string:            message: "Please select City"
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:592:hardcoded string:            type: selectedCourse === 'IAS' ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:593:hardcoded string:            name: 'Language',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:594:hardcoded string:            label: "Select Language",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:595:hardcoded string:            required: (selectedCourse === 'IAS'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:596:hardcoded string:            options: (courseType === "IAS_CRP") ? this.getLanguages(this.state.crpCity, courseLanguages) : courseLanguages,
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:598:hardcoded string:            message: "Please select Language"
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:601:hardcoded string:            type: selectedCourse === 'IAS' ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:603:hardcoded string:            name: 'type',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:604:hardcoded string:            label: 'Select Type',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:606:hardcoded string:            required: (selectedCourse === 'IAS'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:607:hardcoded string:            message: "Please select Type"
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:610:hardcoded string:            courseType === "IAS_CRP" && this.state.isCrpFlowReq &&
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:612:hardcoded string:                type: (["development", "local"].includes(env)) ? (get(selectedCourseConfig, 'miscellaneous.options', []).includes(type)) ? "checkbox" : "disable" : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:613:hardcoded string:                name: 'isCrpFlowReq',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:614:hardcoded string:                checkBoxLabel: 'Crp Only Flow',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:619:hardcoded string:            type: (isBhlpApplicable || courseType === "IAS_CRP") ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:621:hardcoded string:            name: 'workshops',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:622:hardcoded string:            label: 'Select Batch',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:624:hardcoded string:            required: !isBhlpApplicable || (courseType === "IAS_CRP" && this.state.crpCity == "DELHI") ? false : true,
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:625:hardcoded string:            disabled: (courseType === "IAS_CRP" && type == "Optional" && this.state.crpCity === "DELHI") ? true : false,
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:626:hardcoded string:            message: "Please select Batch"
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:629:hardcoded string:            type: (!window.isDevEnv && selectedCourse === "IAS" && get(selectedCourseConfig, 'optionalCourses.options', []).includes(type)) ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:630:hardcoded string:            options: this.getOptionalCourses(Language, get(selectedCourseConfig, 'optionalCourses.courses', [])),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:631:hardcoded string:            required: (!window.isDevEnv && selectedCourse === "IAS" && get(selectedCourseConfig, 'optionalCourses.options', []).includes(type)) || (courseType === "IAS_CRP" && type == "Optional") ? true : false,
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:632:hardcoded string:            name: 'optionalCourses',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:633:hardcoded string:            label: 'Select Optional Course',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:635:hardcoded string:            message: "Please select Optional Courses"
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:638:hardcoded string:            type: (window.isDevEnv && selectedCourse === "IAS" && get(selectedCourseConfig, 'optionalCourses.options', []).includes(type)) ? 'readonly' : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:639:hardcoded string:            readOnlyText: 'Note: Optional Course includes all 5 subjects, Sociology, Political Science, History, Geography, Anthropology',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:640:hardcoded string:            value: "Note",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:641:hardcoded string:            name: "Note",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:642:hardcoded object:            onChange: () => { }
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:645:hardcoded string:            type: (['IAS_BHLP', 'IAS_TLP'].includes(courseType) && get(selectedCourseConfig, 'miscellaneous.options', []).includes(type)) && this.state.product !== "live_classes" ? "checkbox" : "disable",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:646:hardcoded string:            name: 'isMiscellaneousReq',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:647:hardcoded string:            checkBoxLabel: 'Select only Miscellaneous Courses',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:651:hardcoded string:            type: isMiscellaneousReq && get(selectedCourseConfig, 'miscellaneous.options', []).includes(type) ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:652:hardcoded string:            mode: 'multiple',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:653:hardcoded string:            options: this.getMiscellaneousCourses(Language, get(selectedCourseConfig, 'miscellaneous.courses', []), courseType, env),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:654:hardcoded string:            name: 'miscellaneous',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:655:hardcoded string:            label: 'Select Miscellaneous Course',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:657:hardcoded string:            required: isMiscellaneousReq && get(selectedCourseConfig, 'miscellaneous.options', []).includes(type),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:658:hardcoded array:            value: !isMiscellaneousReq && [],
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:659:hardcoded string:            message: "Please select Miscellaneous Courses"
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:662:hardcoded string:            type: (selectedCourse === 'STATE_PSC') ? 'select' : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:663:hardcoded string:            name: 'stateExams',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:664:hardcoded string:            label: (selectedCourse === 'STATE_PSC') ? 'Select State Exam' : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:665:hardcoded string:            required: (selectedCourse === 'STATE_PSC'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:666:hardcoded string:            message: 'Please Select State Exam',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:671:hardcoded string:            type: ["NDA", "CDS"].includes(selectedCourse) ? 'readonly' : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:672:hardcoded string:            name: "note",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:673:hardcoded string:            label: 'Note: Course content is available in English and English+Hindi',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:677:hardcoded string:            type: (["NDA", "CDS"].includes(selectedCourse)) ? "checkbox" : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:678:hardcoded string:            name: 'isSsbReq',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:679:hardcoded string:            checkBoxLabel: 'Select SSB Interview Mentorship ',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:685:hardcoded string:            type: (['GATE', 'UGCNET', 'CSIR_NET', 'AE_JE', "ESE_AND_GATE"].includes(selectedCourse)) ? 'select' : "hidden",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:686:hardcoded string:            name: 'subject',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:687:hardcoded string:            label: (['GATE', 'AE_JE', 'ESE_AND_GATE'].includes(selectedCourse)) ? 'Select Branch' : (selectedCourse === 'CSIR_NET' ? 'Select Subject' : "Select Paper 2 Subject"),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:688:hardcoded string:            required: (['GATE', 'UGCNET', 'CSIR_NET', 'AE_JE', 'ESE_AND_GATE'].includes(selectedCourse)),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:689:hardcoded string:            message: (['GATE', 'AE_JE', 'ESE_AND_GATE'].includes(selectedCourse)) ? 'Please Select Branch' : (selectedCourse === 'CSIR_NET' ? 'Select Subject' : 'Please Select Paper 2 Subject'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:690:hardcoded string:            options: selectedCourse === 'UGCNET' ? paper2Subjects : selectedCourse === "AE_JE" ? branches : subjects,
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:694:hardcoded string:            type: (selectedCourse === 'UGCNET' || (selectedCourse === 'CSIR_NET')) ? 'readonly' : "hidden",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:695:hardcoded string:            name: "isText",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:696:hardcoded string:            label: (selectedCourse === 'UGCNET' || (selectedCourse === 'CSIR_NET')) ? popUpText : "",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:700:hardcoded string:            type: selectedCourse ? 'select' : "hidden",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:701:hardcoded string:            name: 'validity',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:702:hardcoded string:            label: ["GATE", "CAT", "CLAT", "ESE_AND_GATE"].includes(selectedCourse) ? 'Select Program' : 'Select Validity',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:704:hardcoded string:            options: ["GATE", "CAT", "CLAT", "ESE_AND_GATE"].includes(selectedCourse) ? this.getProgramOptions(programs, selectedCourse, selectedProduct) : (selectedCourse === 'IAS' ? getFormattedValidity({ validity, user, productType: typeOfProduct, productCombination, selectedCourse, type, isMiscellaneousReq, miscellaneous, optionalCourses, courseType }) : this.getMonthOptions(courseDurationOptions, selectedCourse, selectedStateExams, isDevEnv)),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:706:hardcoded string:            message: "Please select Program",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:708:hardcoded string:            type: ["NDA", "CDS", "CSIR_NET", "IAS"].includes(selectedCourse) ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:709:hardcoded string:            name: 'language',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:710:hardcoded string:            label: ['GATE', 'UGCNET', 'STATE_PSC', 'ESE_AND_GATE'].includes(selectedCourse) ? 'Select Language for Live Classes' : "Select Language",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:711:hardcoded string:            required: ["NDA", "CDS", "CSIR_NET", "IAS"].includes(selectedCourse) ? false : true,
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:714:hardcoded string:            message: "Please select Language",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:717:hardcoded string:            type: ["NDA", "CDS", "STATE_PSC", "CSIR_NET", 'AE_JE', 'IAS'].includes(selectedCourse) ? 'hidden' : 'readonly',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:718:hardcoded string:            name: "note",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:719:hardcoded string:            label: (['GATE', 'UGCNET', 'AE_JE', 'ESE_AND_GATE'].includes(selectedCourse)) ? 'Note: Async Content will be in English Only' : "Note: All content will be in English",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:723:hardcoded string:            type: ["STATE_PSC", 'AE_JE'].includes(selectedCourse) ? 'readonly' : 'hidden',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:724:hardcoded string:            name: "note",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:725:hardcoded string:            label: selectedCourse === 'AE_JE' ? 'Note: Course content is available in English or English+Hindi  ' : 'Note: All async content will be in Hindi',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:729:hardcoded string:            // type: 'select',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:730:hardcoded string:            type: (["AE_JE"].includes(selectedCourse)) ? 'hidden' : 'select',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:731:hardcoded string:            name: 'tablet',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:732:hardcoded string:            label: 'Select Tablet',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:733:hardcoded string:            disabled: (courseType === "IAS_TLP" && isMiscellaneousReq && get(selectedCourseConfig, 'miscellaneous.options', []).includes(type)) || (courseType === "IAS_CRP" && type == "Optional") ? true : false,
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:734:hardcoded string:            required: (isPriviledgedUser && selectedCourse == "IAS") || (isMiscellaneousReq && selectedProduct === "sd_card_live_classes") || (courseType == "IAS_CRP") || (selectedProduct === "live_classes") ? false : true,
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:736:hardcoded string:            options: checkPrivTabletAccess(leadDetails, user) ? getAllAvailableTabletsBasedOnUser(user, productCombination) : ['IAS_TLP', 'IAS_BHLP', 'IAS_CRP'].includes(courseType) ? getTablets({ tablets, user, productType: typeOfProduct, productCombination, leadDetails, MeTablets, courseType }) : this.getTabletOptions(selectedProduct, Tablets, selectedCourse, isPriviledgedUser),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:737:hardcoded string:            message: 'Please select Tablet'
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:740:hardcoded string:            type: (showProfileSelectionOption && existingProfiles.length > 0 ? 'radio' : 'hidden'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:742:hardcoded string:            name: 'userProfile',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:743:hardcoded string:            label: 'Choose Profile Type',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:745:hardcoded string:            message: "Please Choose Profile Type",
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:747:hardcoded string:                display: 'block',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:748:hardcoded string:                height: '30px',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:749:hardcoded string:                lineHeight: '30px',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:751:hardcoded number:            required: (showProfileSelectionOption && existingProfiles.length > 0 ? true : false)
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:758:hardcoded object:        this.setState({ error });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:762:hardcoded object:        const { productDetails, productConfig, productType } = this.props;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:763:hardcoded string:        if (productType === get(productDetails, 'productType')) {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:764:hardcoded string:            const formValues = get(productDetails, 'students[0].formValues');
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:768:hardcoded string:                course: get(formValues, 'course'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:769:hardcoded string:                board: get(formValues, 'board'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:770:hardcoded string:                initialClass: get(formValues, 'initialClass'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:771:hardcoded string:                subCourse: get(formValues, 'subCourse'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:777:hardcoded object:        this.setState({ productConfig });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:781:hardcoded object:        const { error, validity } = this.state;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:782:hardcoded string:        const { course: selectedCourse, stateExams = '', courseType = '' } = this.state;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:783:hardcoded object:        const { productType, productCombination, productConfig, changeNextBtnMode } = this.props;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:784:hardcoded array:        const fields = productConfig ? this.getFields() : [];
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:787:hardcoded object:                <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:789:hardcoded string:                    ref="productDetailsForm"
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:790:hardcoded object:                    productType={productType}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:791:hardcoded object:                    fields={fields}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:794:hardcoded string:                    ref='fetchComp'
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:795:hardcoded object:                    onClickFetchPrices={this.onClickFetchPrices}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:796:hardcoded object:                    getProductDetails={this.getProductDetails}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:797:hardcoded object:                    changeNextBtnMode={changeNextBtnMode}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:798:hardcoded object:                    productType={productType}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:799:hardcoded object:                    setError={this.setError}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:800:hardcoded object:                    productCombination={productCombination}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:801:hardcoded object:                    validity={validity}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:802:hardcoded object:                    selectedCourse={selectedCourse}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:803:hardcoded object:                    stateExams={stateExams}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:804:hardcoded object:                    courseType={courseType}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPCompetitive.js:811:hardcoded object:export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(BEPCompetitive)
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:1:hardcoded object:import React, { Component } from 'react'
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:2:hardcoded object:import { get } from 'lodash';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:3:hardcoded object:import { connect } from 'react-redux';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:5:hardcoded file path:import RadioGroup from 'antd/lib/radio/group';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:6:hardcoded file path:import RadioButton from 'antd/lib/radio/radioButton';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:7:hardcoded object:import { addLoader, loadProductConfiguration, resetPrice, saveProductDetails, saveStudentsProfileDetails, removeLoader } from 'modules/product/productReducer';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:8:hardcoded object:import { ELIGIBLE_PRODUCT_COMBINATION_FOR_BYJUS_EXAM_PREP_MTS } from 'modules/product/utils/productConstant';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:9:hardcoded file path:import BEPCompetitive from './BEPCompetitive'
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:10:hardcoded file path:import ErrorWrapper from 'components/ErrorWrapper';
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:12:hardcoded variable:const mapStateToProps = state => ({
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:13:hardcoded string:    authDetails: get(state, 'auth.details'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:14:hardcoded string:    appConfig: get(state, 'auth.details.config'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:15:hardcoded string:    identifier: get(state, 'details.identifier'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:16:hardcoded string:    orderPunchingType: get(state, 'auth.orderPunchingType'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:17:hardcoded string:    tlpOrderData: get(state, 'auth.tlpOrderData'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:18:hardcoded string:    customerDetails: get(state, 'details.customerDetails'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:19:hardcoded string:    productConfig: get(state, 'product.config'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:20:hardcoded string:    existingProfiles: get(state, 'product.existingProfiles'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:21:hardcoded string:    showProfileSelectionOption: get(state, 'product.showProfileSelectionOption'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:22:hardcoded string:    reviewProductDetails: get(state, 'product.reviewDetails'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:23:hardcoded string:    loading: get(state, 'product.loading'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:24:hardcoded string:    error: get(state, 'product.error'),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:25:hardcoded string:    user: get(state, "auth.details.user", {}),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:26:hardcoded string:    cashbackDetails: get(state, "product.cashbackDetails", {}),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:27:hardcoded string:    finalPrice: get(state, "product.finalPrice", 0),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:28:hardcoded string:    repunchDoc: get(state, "repunch", {}),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:29:hardcoded string:    salesDetails: get(state, 'details.salesDetails', {}),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:30:hardcoded string:    addressDetail: get(state, 'address.details', {}),
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:33:hardcoded variable:const mapDispatchToProps = dispatch => ({
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:56:hardcoded string:            selectedProduct: 'bep_mts',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:58:hardcoded object:            productConfig: {},
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:59:hardcoded array:            fields: [],
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:64:hardcoded object:        let { selectedProduct } = this.state;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:66:hardcoded array:        const { Products = [] } = this.props.productConfig || {};
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:67:hardcoded variable:        let productOptions = Products.map((product) => {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:68:hardcoded object:            const { name, formattedName } = product;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:70:hardcoded object:                label: `${name}`,
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:76:hardcoded variable:        const radioBtnStyle = {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:77:hardcoded string:            fontWeight: '500',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:78:hardcoded string:            fontSize: 'medium',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:79:hardcoded string:            background: '#fcf5ff'
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:82:hardcoded string:            <RadioGroup onChange={this.onChangeProduct} value={selectedProduct} buttonStyle="solid">
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:83:hardcoded object:                {productOptions.map(({ label, value }, idx) => (
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:84:hardcoded object:                    <RadioButton style={radioBtnStyle} value={value} key={idx}>{label}</RadioButton>
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:95:hardcoded string:        const { value } = get(e, 'target');
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:96:hardcoded object:        this.setState({ selectedProduct: null }, () => {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:97:hardcoded object:            this.setState({ selectedProduct: value, });
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:103:hardcoded object:        const { user } = compProps
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:105:hardcoded string:            case 'bep_mts': return <BEPCompetitive productType={selectedProduct} {...compProps} user={user} productCombination={productCombination} />
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:111:hardcoded object:        const { selectedProduct, error } = this.state;
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:112:hardcoded object:        const { productCombination } = this.props; //To render some specific component after the main product details form
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:113:hardcoded variable:        const compProps = {
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:114:hardcoded string:            ref: 'bepProductComponent',
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:122:hardcoded object:                <ErrorWrapper error={error} />
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:123:hardcoded object:                {this.buildProductOptions()}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:124:hardcoded object:                {this.buildProductComponent(selectedProduct, compProps, productCombination)}
microservices-middleware/client/src/modules/ordertype/byjusexamprep/BEPMTSProductPage.js:130:hardcoded object:export default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(BEPMTSProductPage)
