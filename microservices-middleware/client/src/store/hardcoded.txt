microservices-middleware/client/src/store/appReducer.js:3:hardcoded string:	export const ADD_LOADER = '/auth/ADD_LOADER';
microservices-middleware/client/src/store/appReducer.js:4:hardcoded string:	export const REMOVE_LOADER = '/auth/REMOVE_LOADER';
microservices-middleware/client/src/store/appReducer.js:6:hardcoded object:	const addLoaderRequest = () => ({ type: ADD_LOADER });
microservices-middleware/client/src/store/appReducer.js:7:hardcoded object:	const removeLoaderRequest = () => ({ type: REMOVE_LOADER });
microservices-middleware/client/src/store/appReducer.js:10:hardcoded variable:	export const addLoader = state => dispatch => {
microservices-middleware/client/src/store/appReducer.js:14:hardcoded variable:	export const removeLoader = state => dispatch => {
microservices-middleware/client/src/store/appReducer.js:18:hardcoded object:	export default (state = {}, action) => {
microservices-middleware/client/src/store/index.js:10:hardcoded object:	 * @param {History} history
microservices-middleware/client/src/store/index.js:14:hardcoded variable:	    const routerMiddleware = createRouterMiddleware(history)
microservices-middleware/client/src/store/index.js:16:hardcoded array:	    const middleware = [thunkMiddleware, routerMiddleware, LogRocket.reduxMiddleware()]
microservices-middleware/client/src/store/index.js:18:hardcoded variable:	    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose
microservices-middleware/client/src/store/index.js:20:hardcoded variable:	    const enhancers = composeEnhancers(applyMiddleware(...middleware))
microservices-middleware/client/src/store/index.js:27:hardcoded variable:	export const getStore = () => store;
microservices-middleware/client/src/store/authReducer.js:6:hardcoded string:	export const LOAD_REQUEST = '/auth/LOAD_REQUEST';
microservices-middleware/client/src/store/authReducer.js:7:hardcoded string:	export const LOAD_RESPONSE = '/auth/LOAD_RESPONSE';
microservices-middleware/client/src/store/authReducer.js:8:hardcoded string:	export const LOAD_FAILURE = '/auth/LOAD_FAILURE';
microservices-middleware/client/src/store/authReducer.js:9:hardcoded string:	export const ADD_LOADER = '/auth/ADD_LOADER';
microservices-middleware/client/src/store/authReducer.js:10:hardcoded string:	export const REMOVE_LOADER = '/auth/REMOVE_LOADER';
microservices-middleware/client/src/store/authReducer.js:11:hardcoded string:	export const SAVE_ORDER_PUNCHING_TYPE = '/auth/SAVE_ORDER_PUNCHING_TYPE';
microservices-middleware/client/src/store/authReducer.js:12:hardcoded string:	export const SAVE_DRAFTORDER_SORUCE = '/auth/SAVE_DRAFTORDER_SORUCE';
microservices-middleware/client/src/store/authReducer.js:13:hardcoded string:	export const SAVE_TLP_TO_HLP_ORDER_DATA = '/auth/SAVE_TLP_TO_HLP_ORDER_DATA';
microservices-middleware/client/src/store/authReducer.js:15:hardcoded string:	export const SAVE_SELECTED_QUOTATION_FOR_ORDER = '/quotation/auth/SAVE_SELECTED_QUOTATION_FOR_ORDER';
microservices-middleware/client/src/store/authReducer.js:16:hardcoded string:	export const QUOTATION_LOAD_REQUEST = '/quotation/auth/LOAD_REQUEST';
microservices-middleware/client/src/store/authReducer.js:17:hardcoded string:	export const QUOTATION_LOAD_RESPONSE = '/quotation/auth/LOAD_RESPONSE';
microservices-middleware/client/src/store/authReducer.js:18:hardcoded string:	export const QUOTATION_LOAD_FAILURE = '/quotation/auth/LOAD_FAILURE';
microservices-middleware/client/src/store/authReducer.js:19:hardcoded string:	export const SAVE_QUOTATION_DATA = '/quotation/auth/SAVE_QUOTATION_DATA';
microservices-middleware/client/src/store/authReducer.js:20:hardcoded string:	export const SAVE_PRICEANDSCHOLARSHIP_DATA = '/quotation/auth/SAVE_PRICEANDSCHOLARSHIP_DATA';
microservices-middleware/client/src/store/authReducer.js:21:hardcoded string:	export const SAVE_SELECTED_PRICE_AND_SCHOLARSHIP = '/quotation/auth/SAVE_SELECTED_PRICE_AND_SCHOLARSHIP'
microservices-middleware/client/src/store/authReducer.js:23:hardcoded string:	export const RCN_LOAD_RESPONSE = '/auth/RCN_LOAD_RESPONSE';
microservices-middleware/client/src/store/authReducer.js:24:hardcoded string:	export const RCN_LOAD_FAILURE = '/auth/RCN_LOAD_FAILURE';
microservices-middleware/client/src/store/authReducer.js:26:hardcoded string:	export const LOAD_RPR_DETAILS = '/auth/LOAD_RPR_DETAILS'
microservices-middleware/client/src/store/authReducer.js:28:hardcoded object:	const loadRequest = (leadDetails) => ({ type: LOAD_REQUEST, leadDetails });
microservices-middleware/client/src/store/authReducer.js:29:hardcoded object:	const loadResponse = (response) => ({ type: LOAD_RESPONSE, response });
microservices-middleware/client/src/store/authReducer.js:30:hardcoded object:	const loadFailure = (error) => ({ type: LOAD_FAILURE, error });
microservices-middleware/client/src/store/authReducer.js:31:hardcoded object:	const addLoaderRequest = () => ({ type: ADD_LOADER });
microservices-middleware/client/src/store/authReducer.js:32:hardcoded object:	const removeLoaderRequest = () => ({ type: REMOVE_LOADER });
microservices-middleware/client/src/store/authReducer.js:33:hardcoded object:	const saveTypeOfOrderPunching = (orderPunchingType) => ({ type: SAVE_ORDER_PUNCHING_TYPE, orderPunchingType });
microservices-middleware/client/src/store/authReducer.js:34:hardcoded object:	const saveTypeOfSource = (draftOrderSource) => ({ type: SAVE_DRAFTORDER_SORUCE, draftOrderSource})
microservices-middleware/client/src/store/authReducer.js:35:hardcoded object:	const saveTlpToHlpOrderData = (orderData) => ({ type: SAVE_TLP_TO_HLP_ORDER_DATA, orderData });
microservices-middleware/client/src/store/authReducer.js:37:hardcoded object:	const quotationLoadRequest = (leadDetails) => ({ type: QUOTATION_LOAD_REQUEST, leadDetails });
microservices-middleware/client/src/store/authReducer.js:38:hardcoded object:	const quotationLoadResponse = (response) => ({ type: QUOTATION_LOAD_RESPONSE, response });
microservices-middleware/client/src/store/authReducer.js:39:hardcoded object:	const quotationLoadFailure = (error) => ({ type: QUOTATION_LOAD_FAILURE, error });
microservices-middleware/client/src/store/authReducer.js:40:hardcoded object:	const saveQuotationList = (quotationData) => ({ type: SAVE_QUOTATION_DATA, quotationData });
microservices-middleware/client/src/store/authReducer.js:41:hardcoded object:	const saveQuotationPriceAndScholarshipList = (quotatioPriceAndScholarshipData) => ({ type: SAVE_PRICEANDSCHOLARSHIP_DATA, quotatioPriceAndScholarshipData })
microservices-middleware/client/src/store/authReducer.js:42:hardcoded object:	const saveQuotationDataForOrder = (selectedQuotation) => ({ type: SAVE_SELECTED_QUOTATION_FOR_ORDER, selectedQuotation })
microservices-middleware/client/src/store/authReducer.js:43:hardcoded object:	const saveSelectedPriceAndScholarshipData = (selectedPriceAndScholarship) => ({ type: SAVE_SELECTED_PRICE_AND_SCHOLARSHIP, selectedPriceAndScholarship })
microservices-middleware/client/src/store/authReducer.js:45:hardcoded object:	const loadRcnResponse = (response) => ({ type: RCN_LOAD_RESPONSE, response });
microservices-middleware/client/src/store/authReducer.js:46:hardcoded object:	const loadRcnFailure = (error) => ({ type: RCN_LOAD_FAILURE, error });
microservices-middleware/client/src/store/authReducer.js:48:hardcoded variable:	export const saveTlpToHlpOrder = (orderData) => dispatch => {
microservices-middleware/client/src/store/authReducer.js:52:hardcoded variable:	export const saveSelectedQuotationForOrder = (selectedQuotation) => dispatch => {
microservices-middleware/client/src/store/authReducer.js:56:hardcoded variable:	export const saveSelectedPriceAndScholarship = (selectedPriceAndScholarship) => dispatch => {
microservices-middleware/client/src/store/authReducer.js:60:hardcoded variable:	export const authenticateUser = (leadDetails) => dispatch => {
microservices-middleware/client/src/store/authReducer.js:65:hardcoded string:	        url: '/api/auth/authenticateLeadsquaredUser',
microservices-middleware/client/src/store/authReducer.js:66:hardcoded string:	        method: 'POST',
microservices-middleware/client/src/store/authReducer.js:71:hardcoded object:	            const { data, status } = response;
microservices-middleware/client/src/store/authReducer.js:76:hardcoded string:	                let data = get(error, 'response.data', {});
microservices-middleware/client/src/store/authReducer.js:85:hardcoded variable:	export const loadRprDetails = (prospectId, accountNumber, userEmail) => dispatch =>  {
microservices-middleware/client/src/store/authReducer.js:86:hardcoded object:	    const state = getStore()?.getState() || {};
microservices-middleware/client/src/store/authReducer.js:87:hardcoded string:	    const {reportingTo = {}, email = ""} = get(state, 'auth.details.user', {});
microservices-middleware/client/src/store/authReducer.js:88:hardcoded array:	    const reportingToList = [email, ...flattenDeep(Object.values(reportingTo)).reduce((acc, person) => [...acc, person?.userEmail], [])];
microservices-middleware/client/src/store/authReducer.js:90:hardcoded object:	        url: `/api/rpr/refundPolicyRceipt/${prospectId}`,
microservices-middleware/client/src/store/authReducer.js:91:hardcoded string:	        method: "get",
microservices-middleware/client/src/store/authReducer.js:94:hardcoded array:	            const { isOrderPunchingAllowed, rprExcludedAccounts = [], excludedEmails = [], enabledReportingTo = [] } = res?.data;
microservices-middleware/client/src/store/authReducer.js:95:hardcoded variable:	            const isRprAllowed = enabledReportingTo.reduce((acc, curr) => acc ? acc : reportingToList.includes(curr) , false) ? false : !isEmpty(enabledReportingTo);
microservices-middleware/client/src/store/authReducer.js:96:hardcoded object:	            dispatch({type: LOAD_RPR_DETAILS, data: {...res?.data, isOrderPunchingAllowed: (rprExcludedAccounts.includes(accountNumber) || excludedEmails.includes(userEmail) || isRprAllowed) ? true : isOrderPunchingAllowed}})
microservices-middleware/client/src/store/authReducer.js:105:hardcoded variable:	export const saveQuotationData = (quotationData) => dispatch => {
microservices-middleware/client/src/store/authReducer.js:109:hardcoded variable:	export const saveQuotationPriceAndScholarshipData = (quotatioPriceAndScholarshipData) => dispatch => {
microservices-middleware/client/src/store/authReducer.js:113:hardcoded variable:	export const quotationAuthenticateUser = (leadDetails) => dispatch => {
microservices-middleware/client/src/store/authReducer.js:117:hardcoded string:	        url: '/api/quotation/authenticateLeadsquaredUser',
microservices-middleware/client/src/store/authReducer.js:118:hardcoded string:	        method: 'POST',
microservices-middleware/client/src/store/authReducer.js:123:hardcoded object:	            const { data, status } = response;
microservices-middleware/client/src/store/authReducer.js:128:hardcoded string:	                let data = get(error, 'response.data', {});
microservices-middleware/client/src/store/authReducer.js:137:hardcoded variable:	export const updatedAuthDetails = (details) => dispatch => {
microservices-middleware/client/src/store/authReducer.js:147:hardcoded variable:	export const addLoader = state => dispatch => {
microservices-middleware/client/src/store/authReducer.js:151:hardcoded variable:	export const removeLoader = state => dispatch => {
microservices-middleware/client/src/store/authReducer.js:155:hardcoded variable:	export const saveOrderPunchingType = (orderPunchingType) => dispatch => {
microservices-middleware/client/src/store/authReducer.js:159:hardcoded variable:	export const saveDraftOrderSource = (draftOrderSource) => dispatch => {
microservices-middleware/client/src/store/authReducer.js:163:hardcoded variable:	export const getRcnConfig = (userEmail) => dispatch => {
microservices-middleware/client/src/store/authReducer.js:165:hardcoded string:	        url: '/api/config/getRcnConfig',
microservices-middleware/client/src/store/authReducer.js:166:hardcoded string:	        method: 'POST',
microservices-middleware/client/src/store/authReducer.js:167:hardcoded object:	        body: {userEmail},
microservices-middleware/client/src/store/authReducer.js:171:hardcoded object:	            const { data, status } = response;
microservices-middleware/client/src/store/authReducer.js:176:hardcoded string:	                let data = get(error, 'response.data', {});
microservices-middleware/client/src/store/authReducer.js:184:hardcoded object:	export default (state = {}, action) => {
microservices-middleware/client/src/store/authReducer.js:265:hardcoded string:	                error: get(action, 'error') || state.error
microservices-middleware/client/src/store/authReducer.js:272:hardcoded string:	                error: get(action, 'error') || state.error
microservices-middleware/client/src/store/authReducer.js:311:hardcoded string:	                error: get(action, 'error') || state.error
microservices-middleware/client/src/store/atom.js:3:hardcoded variable:	export const authenticationDetails = atom({
microservices-middleware/client/src/store/atom.js:4:hardcoded string:	    key: "authDetails",
microservices-middleware/client/src/store/atom.js:5:hardcoded object:	    default: {}
microservices-middleware/client/src/store/atom.js:8:hardcoded variable:	export const salesProgramDetailState = atom({
microservices-middleware/client/src/store/atom.js:9:hardcoded string:	    key: "spDetails",
microservices-middleware/client/src/store/atom.js:11:hardcoded string:	        spId: "",
microservices-middleware/client/src/store/atom.js:12:hardcoded string:	        spName: ""
microservices-middleware/client/src/store/atom.js:16:hardcoded variable:	export const quotationDetailState = atom({
microservices-middleware/client/src/store/atom.js:17:hardcoded string:	    key: "quotationDetails",
microservices-middleware/client/src/store/atom.js:19:hardcoded string:	        prospectId: "",
microservices-middleware/client/src/store/atom.js:20:hardcoded string:	        accountNumber: "",
microservices-middleware/client/src/store/atom.js:21:hardcoded string:	        customerId: "",
microservices-middleware/client/src/store/atom.js:22:hardcoded string:	        leadId: "",
microservices-middleware/client/src/store/atom.js:23:hardcoded array:	        quotations: []
microservices-middleware/client/src/store/atom.js:27:hardcoded variable:	export const quotationStudentDetails = atom({
microservices-middleware/client/src/store/atom.js:28:hardcoded string:	    key: "quotationStudent",
microservices-middleware/client/src/store/atom.js:30:hardcoded string:	        salesProgramId: "",
microservices-middleware/client/src/store/atom.js:31:hardcoded string:	        quotationId: "",
microservices-middleware/client/src/store/atom.js:32:hardcoded string:	        customerId: "",
microservices-middleware/client/src/store/atom.js:33:hardcoded string:	        leadId: "",
microservices-middleware/client/src/store/atom.js:34:hardcoded string:	        studentId: "",
microservices-middleware/client/src/store/atom.js:35:hardcoded object:	        voucherDetails: {}
microservices-middleware/client/src/store/atom.js:39:hardcoded variable:	export const quotationSchoolDetails = atom({
microservices-middleware/client/src/store/atom.js:40:hardcoded string:	    key: "quotationStudent",
microservices-middleware/client/src/store/atom.js:42:hardcoded string:	        quotationId: "",
microservices-middleware/client/src/store/atom.js:43:hardcoded string:	        customerId: "",
microservices-middleware/client/src/store/atom.js:44:hardcoded string:	        leadId: ""
microservices-middleware/client/src/store/atom.js:48:hardcoded variable:	export const neoBatchDetails = atom({
microservices-middleware/client/src/store/atom.js:49:hardcoded string:	    key: "neoBatchDetails",
microservices-middleware/client/src/store/atom.js:50:hardcoded object:	    default: {}
microservices-middleware/client/src/store/atom.js:53:hardcoded variable:	export const draftOrderDetailState = atom({
microservices-middleware/client/src/store/atom.js:54:hardcoded string:	    key: "draftOrderDetails",
microservices-middleware/client/src/store/atom.js:56:hardcoded string:	        prospectId: "",
microservices-middleware/client/src/store/atom.js:57:hardcoded string:	        accountNumber: "",
microservices-middleware/client/src/store/atom.js:58:hardcoded string:	        customerId: "",
microservices-middleware/client/src/store/atom.js:59:hardcoded string:	        leadId: "",
microservices-middleware/client/src/store/atom.js:60:hardcoded array:	        quotations: []
microservices-middleware/client/src/store/atom.js:64:hardcoded variable:	export const draftOrderStudentDetails = atom({
microservices-middleware/client/src/store/atom.js:65:hardcoded string:	    key: "draftOrderStudent",
microservices-middleware/client/src/store/atom.js:67:hardcoded string:	        salesProgramId: "",
microservices-middleware/client/src/store/atom.js:68:hardcoded string:	        draftOrderId: "",
microservices-middleware/client/src/store/atom.js:69:hardcoded string:	        customerId: "",
microservices-middleware/client/src/store/atom.js:70:hardcoded string:	        leadId: "",
microservices-middleware/client/src/store/atom.js:71:hardcoded string:	        studentId: "",
microservices-middleware/client/src/store/atom.js:72:hardcoded string:	        category: ""
microservices-middleware/client/src/store/atom.js:76:hardcoded variable:	export const upgradeOrderDetails = atom({
microservices-middleware/client/src/store/atom.js:77:hardcoded string:	    key: "upgradeOrderDetails",
microservices-middleware/client/src/store/atom.js:78:hardcoded object:	    default: {}
